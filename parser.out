Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program_Import program_items
Rule 2     program -> program_items
Rule 3     program_Import -> IMPORT ID program_Import
Rule 4     program_Import -> IMPORT ID
Rule 5     program_items -> program_item program_items
Rule 6     program_items -> <empty>
Rule 7     program_item -> const_declaration
Rule 8     program_item -> function_definition
Rule 9     const_declaration -> CONST ID DECLARE_ASSIGN expression
Rule 10    function_definition -> FN ID LPAREN params RPAREN block_statement
Rule 11    function_definition -> FN ID LPAREN params RPAREN type block_statement
Rule 12    function_definition -> FN MAIN LPAREN RPAREN block_statement
Rule 13    params -> param more_params
Rule 14    more_params -> COMMA param more_params
Rule 15    more_params -> <empty>
Rule 16    param -> ID type
Rule 17    type -> INT
Rule 18    type -> F32
Rule 19    type -> F64
Rule 20    type -> STRING
Rule 21    type -> BOOL
Rule 22    type -> RUNE
Rule 23    block_statement -> LBRACE statements RBRACE
Rule 24    block_statement -> LBRACE RBRACE
Rule 25    statements -> statement statements
Rule 26    statements -> statement
Rule 27    statement -> var_statement
Rule 28    statement -> var_assignment
Rule 29    statement -> func_call
Rule 30    statement -> if_statement
Rule 31    statement -> for_statement
Rule 32    statement -> break_statement
Rule 33    statement -> return_statement
Rule 34    statement -> list_statement
Rule 35    statement -> list_assignment
Rule 36    statement -> increment_rule
Rule 37    statement -> assignment
Rule 38    var_statement -> declaration_imutable
Rule 39    var_statement -> MUT ID DECLARE_ASSIGN expression
Rule 40    var_statement -> CONST ID DECLARE_ASSIGN expression
Rule 41    var_assignment -> ID ASSIGN expression
Rule 42    list_statement -> declaration_imutable_list
Rule 43    list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
Rule 44    list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
Rule 45    list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression
Rule 46    func_call -> ID LPAREN id_list RPAREN
Rule 47    func_call -> ID LPAREN RPAREN
Rule 48    func_call -> func_call_list
Rule 49    func_call_list -> ID LBRACKET DOTDOT RBRACKET
Rule 50    func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
Rule 51    id_list -> expression more_expressions
Rule 52    more_expressions -> COMMA expression more_expressions
Rule 53    more_expressions -> <empty>
Rule 54    if_statement -> IF expression_relacional block_statement
Rule 55    if_statement -> IF expression_relacional block_statement elseop
Rule 56    elseop -> ELSE if_statement
Rule 57    elseop -> ELSE block_statement
Rule 58    for_statement -> FOR ID IN expression block_statement
Rule 59    for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement
Rule 60    for_statement -> FOR expression_relacional block_statement
Rule 61    declaration_imutable -> ID DECLARE_ASSIGN expression
Rule 62    declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
Rule 63    break_statement -> BREAK
Rule 64    return_statement -> RETURN expression
Rule 65    expression -> expression PLUS term
Rule 66    expression -> expression MINUS term
Rule 67    expression -> increment_rule
Rule 68    expression -> func_call
Rule 69    expression -> term
Rule 70    term -> term TIMES factor
Rule 71    term -> term DIVIDE factor
Rule 72    term -> term MOD factor
Rule 73    term -> factor
Rule 74    factor -> ID
Rule 75    factor -> NUMBER
Rule 76    factor -> NUMBERFLOAT
Rule 77    factor -> WORD
Rule 78    factor -> TRUE
Rule 79    factor -> FALSE
Rule 80    factor -> RUNEVALOR
Rule 81    factor -> LPAREN expression RPAREN
Rule 82    factor -> ID LBRACKET NUMBER RBRACKET
Rule 83    factor -> NOTACAOCIENTIFICA
Rule 84    factor -> BINARY
Rule 85    factor -> OCTAL
Rule 86    factor -> HEX
Rule 87    factor -> INTERPOLATIONSTRING
Rule 88    factor -> size_of_expression
Rule 89    size_of_expression -> SIZEOF LPAREN expression RPAREN
Rule 90    size_of_expression -> SIZEOF LPAREN type RPAREN
Rule 91    increment_rule -> ID INCREMENT
Rule 92    increment_rule -> ID DECREMENT
Rule 93    expression_relacional -> expression EQ expression
Rule 94    expression_relacional -> expression NEQ expression
Rule 95    expression_relacional -> expression LT expression
Rule 96    expression_relacional -> expression LE expression
Rule 97    expression_relacional -> expression GT expression
Rule 98    expression_relacional -> expression GE expression
Rule 99    expression_relacional -> expression AND expression
Rule 100   expression_relacional -> expression OR expression
Rule 101   expression_relacional -> NOT expression
Rule 102   assignment -> ID PLUS_ASSIGN expression
Rule 103   assignment -> ID MINUS_ASSIGN expression
Rule 104   assignment -> ID TIMES_ASSIGN expression
Rule 105   assignment -> ID DIVIDE_ASSIGN expression
Rule 106   assignment -> ID MOD_ASSIGN expression
Rule 107   assignment -> ID BIT_AND_ASSIGN expression
Rule 108   assignment -> ID BIT_OR_ASSIGN expression
Rule 109   assignment -> ID BIT_XOR_ASSIGN expression
Rule 110   assignment -> ID BIT_LSHIFT_ASSIGN expression
Rule 111   assignment -> ID BIT_RSHIFT_ASSIGN expression

Terminals, with rules where they appear

AND                  : 99
ASSIGN               : 41 45
BINARY               : 84
BIT_AND_ASSIGN       : 107
BIT_LSHIFT_ASSIGN    : 110
BIT_OR_ASSIGN        : 108
BIT_RSHIFT_ASSIGN    : 111
BIT_XOR_ASSIGN       : 109
BOOL                 : 21
BREAK                : 63
COMMA                : 14 52
CONST                : 9 40
DECLARE_ASSIGN       : 9 39 40 43 44 61 62
DECREMENT            : 92
DIVIDE               : 71
DIVIDE_ASSIGN        : 105
DOTDOT               : 49 50
ELSE                 : 56 57
EQ                   : 93
F32                  : 18
F64                  : 19
FALSE                : 79
FN                   : 10 11 12
FOR                  : 58 59 60
GE                   : 98
GT                   : 97
HEX                  : 86
ID                   : 3 4 9 10 11 16 39 40 41 43 44 45 46 47 49 50 58 61 62 74 82 91 92 102 103 104 105 106 107 108 109 110 111
IF                   : 54 55
IMPORT               : 3 4
IN                   : 58
INCREMENT            : 91
INT                  : 17
INTERPOLATIONSTRING  : 87
LBRACE               : 23 24
LBRACKET             : 43 44 45 49 50 62 82
LE                   : 96
LPAREN               : 10 11 12 46 47 81 89 90
LT                   : 95
MAIN                 : 12
MINUS                : 66
MINUS_ASSIGN         : 103
MOD                  : 72
MOD_ASSIGN           : 106
MUT                  : 39 43 44
NEQ                  : 94
NOT                  : 101
NOTACAOCIENTIFICA    : 83
NUMBER               : 45 50 50 75 82
NUMBERFLOAT          : 76
OCTAL                : 85
OR                   : 100
PLUS                 : 65
PLUS_ASSIGN          : 102
RBRACE               : 23 24
RBRACKET             : 43 44 45 49 50 62 82
RETURN               : 64
RPAREN               : 10 11 12 46 47 81 89 90
RUNE                 : 22
RUNEVALOR            : 80
SEMICOLON            : 59 59
SIZEOF               : 89 90
STRING               : 20
TIMES                : 70
TIMES_ASSIGN         : 104
TRUE                 : 78
WORD                 : 77
error                : 

Nonterminals, with rules where they appear

assignment           : 37
block_statement      : 10 11 12 54 55 57 58 59 60
break_statement      : 32
const_declaration    : 7
declaration_imutable : 38 59
declaration_imutable_list : 42
elseop               : 55
expression           : 9 39 40 41 45 51 52 58 61 64 65 66 81 89 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 102 103 104 105 106 107 108 109 110 111
expression_relacional : 54 55 59 60
factor               : 70 71 72 73
for_statement        : 31
func_call            : 29 68
func_call_list       : 48
function_definition  : 8
id_list              : 43 44 46 62
if_statement         : 30 56
increment_rule       : 36 59 67
list_assignment      : 35
list_statement       : 34
more_expressions     : 51 52
more_params          : 13 14
param                : 13 14
params               : 10 11
program              : 0
program_Import       : 1 3
program_item         : 5
program_items        : 1 2 5
return_statement     : 33
size_of_expression   : 88
statement            : 25 26
statements           : 23 25
term                 : 65 66 69 70 71 72
type                 : 11 16 44 90
var_assignment       : 28
var_statement        : 27

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_Import program_items
    (2) program -> . program_items
    (3) program_Import -> . IMPORT ID program_Import
    (4) program_Import -> . IMPORT ID
    (5) program_items -> . program_item program_items
    (6) program_items -> .
    (7) program_item -> . const_declaration
    (8) program_item -> . function_definition
    (9) const_declaration -> . CONST ID DECLARE_ASSIGN expression
    (10) function_definition -> . FN ID LPAREN params RPAREN block_statement
    (11) function_definition -> . FN ID LPAREN params RPAREN type block_statement
    (12) function_definition -> . FN MAIN LPAREN RPAREN block_statement

    IMPORT          shift and go to state 4
    $end            reduce using rule 6 (program_items -> .)
    CONST           shift and go to state 8
    FN              shift and go to state 9

    program                        shift and go to state 1
    program_Import                 shift and go to state 2
    program_items                  shift and go to state 3
    program_item                   shift and go to state 5
    const_declaration              shift and go to state 6
    function_definition            shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> program_Import . program_items
    (5) program_items -> . program_item program_items
    (6) program_items -> .
    (7) program_item -> . const_declaration
    (8) program_item -> . function_definition
    (9) const_declaration -> . CONST ID DECLARE_ASSIGN expression
    (10) function_definition -> . FN ID LPAREN params RPAREN block_statement
    (11) function_definition -> . FN ID LPAREN params RPAREN type block_statement
    (12) function_definition -> . FN MAIN LPAREN RPAREN block_statement

    $end            reduce using rule 6 (program_items -> .)
    CONST           shift and go to state 8
    FN              shift and go to state 9

    program_items                  shift and go to state 10
    program_item                   shift and go to state 5
    const_declaration              shift and go to state 6
    function_definition            shift and go to state 7

state 3

    (2) program -> program_items .

    $end            reduce using rule 2 (program -> program_items .)


state 4

    (3) program_Import -> IMPORT . ID program_Import
    (4) program_Import -> IMPORT . ID

    ID              shift and go to state 11


state 5

    (5) program_items -> program_item . program_items
    (5) program_items -> . program_item program_items
    (6) program_items -> .
    (7) program_item -> . const_declaration
    (8) program_item -> . function_definition
    (9) const_declaration -> . CONST ID DECLARE_ASSIGN expression
    (10) function_definition -> . FN ID LPAREN params RPAREN block_statement
    (11) function_definition -> . FN ID LPAREN params RPAREN type block_statement
    (12) function_definition -> . FN MAIN LPAREN RPAREN block_statement

    $end            reduce using rule 6 (program_items -> .)
    CONST           shift and go to state 8
    FN              shift and go to state 9

    program_item                   shift and go to state 5
    program_items                  shift and go to state 12
    const_declaration              shift and go to state 6
    function_definition            shift and go to state 7

state 6

    (7) program_item -> const_declaration .

    CONST           reduce using rule 7 (program_item -> const_declaration .)
    FN              reduce using rule 7 (program_item -> const_declaration .)
    $end            reduce using rule 7 (program_item -> const_declaration .)


state 7

    (8) program_item -> function_definition .

    CONST           reduce using rule 8 (program_item -> function_definition .)
    FN              reduce using rule 8 (program_item -> function_definition .)
    $end            reduce using rule 8 (program_item -> function_definition .)


state 8

    (9) const_declaration -> CONST . ID DECLARE_ASSIGN expression

    ID              shift and go to state 13


state 9

    (10) function_definition -> FN . ID LPAREN params RPAREN block_statement
    (11) function_definition -> FN . ID LPAREN params RPAREN type block_statement
    (12) function_definition -> FN . MAIN LPAREN RPAREN block_statement

    ID              shift and go to state 14
    MAIN            shift and go to state 15


state 10

    (1) program -> program_Import program_items .

    $end            reduce using rule 1 (program -> program_Import program_items .)


state 11

    (3) program_Import -> IMPORT ID . program_Import
    (4) program_Import -> IMPORT ID .
    (3) program_Import -> . IMPORT ID program_Import
    (4) program_Import -> . IMPORT ID

    CONST           reduce using rule 4 (program_Import -> IMPORT ID .)
    FN              reduce using rule 4 (program_Import -> IMPORT ID .)
    $end            reduce using rule 4 (program_Import -> IMPORT ID .)
    IMPORT          shift and go to state 4

    program_Import                 shift and go to state 16

state 12

    (5) program_items -> program_item program_items .

    $end            reduce using rule 5 (program_items -> program_item program_items .)


state 13

    (9) const_declaration -> CONST ID . DECLARE_ASSIGN expression

    DECLARE_ASSIGN  shift and go to state 17


state 14

    (10) function_definition -> FN ID . LPAREN params RPAREN block_statement
    (11) function_definition -> FN ID . LPAREN params RPAREN type block_statement

    LPAREN          shift and go to state 18


state 15

    (12) function_definition -> FN MAIN . LPAREN RPAREN block_statement

    LPAREN          shift and go to state 19


state 16

    (3) program_Import -> IMPORT ID program_Import .

    CONST           reduce using rule 3 (program_Import -> IMPORT ID program_Import .)
    FN              reduce using rule 3 (program_Import -> IMPORT ID program_Import .)
    $end            reduce using rule 3 (program_Import -> IMPORT ID program_Import .)


state 17

    (9) const_declaration -> CONST ID DECLARE_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 21
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 18

    (10) function_definition -> FN ID LPAREN . params RPAREN block_statement
    (11) function_definition -> FN ID LPAREN . params RPAREN type block_statement
    (13) params -> . param more_params
    (16) param -> . ID type

    ID              shift and go to state 41

    params                         shift and go to state 42
    param                          shift and go to state 43

state 19

    (12) function_definition -> FN MAIN LPAREN . RPAREN block_statement

    RPAREN          shift and go to state 44


state 20

    (91) increment_rule -> ID . INCREMENT
    (92) increment_rule -> ID . DECREMENT
    (46) func_call -> ID . LPAREN id_list RPAREN
    (47) func_call -> ID . LPAREN RPAREN
    (49) func_call_list -> ID . LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> ID . LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> ID .
    (82) factor -> ID . LBRACKET NUMBER RBRACKET

    INCREMENT       shift and go to state 45
    DECREMENT       shift and go to state 46
    LPAREN          shift and go to state 47
    LBRACKET        shift and go to state 48
    TIMES           reduce using rule 74 (factor -> ID .)
    DIVIDE          reduce using rule 74 (factor -> ID .)
    MOD             reduce using rule 74 (factor -> ID .)
    PLUS            reduce using rule 74 (factor -> ID .)
    MINUS           reduce using rule 74 (factor -> ID .)
    CONST           reduce using rule 74 (factor -> ID .)
    FN              reduce using rule 74 (factor -> ID .)
    $end            reduce using rule 74 (factor -> ID .)
    RPAREN          reduce using rule 74 (factor -> ID .)
    COMMA           reduce using rule 74 (factor -> ID .)
    EQ              reduce using rule 74 (factor -> ID .)
    NEQ             reduce using rule 74 (factor -> ID .)
    LT              reduce using rule 74 (factor -> ID .)
    LE              reduce using rule 74 (factor -> ID .)
    GT              reduce using rule 74 (factor -> ID .)
    GE              reduce using rule 74 (factor -> ID .)
    AND             reduce using rule 74 (factor -> ID .)
    OR              reduce using rule 74 (factor -> ID .)
    MUT             reduce using rule 74 (factor -> ID .)
    ID              reduce using rule 74 (factor -> ID .)
    IF              reduce using rule 74 (factor -> ID .)
    FOR             reduce using rule 74 (factor -> ID .)
    BREAK           reduce using rule 74 (factor -> ID .)
    RETURN          reduce using rule 74 (factor -> ID .)
    RBRACE          reduce using rule 74 (factor -> ID .)
    RBRACKET        reduce using rule 74 (factor -> ID .)
    LBRACE          reduce using rule 74 (factor -> ID .)
    SEMICOLON       reduce using rule 74 (factor -> ID .)


state 21

    (9) const_declaration -> CONST ID DECLARE_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    CONST           reduce using rule 9 (const_declaration -> CONST ID DECLARE_ASSIGN expression .)
    FN              reduce using rule 9 (const_declaration -> CONST ID DECLARE_ASSIGN expression .)
    $end            reduce using rule 9 (const_declaration -> CONST ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 22

    (69) expression -> term .
    (70) term -> term . TIMES factor
    (71) term -> term . DIVIDE factor
    (72) term -> term . MOD factor

    PLUS            reduce using rule 69 (expression -> term .)
    MINUS           reduce using rule 69 (expression -> term .)
    CONST           reduce using rule 69 (expression -> term .)
    FN              reduce using rule 69 (expression -> term .)
    $end            reduce using rule 69 (expression -> term .)
    RPAREN          reduce using rule 69 (expression -> term .)
    COMMA           reduce using rule 69 (expression -> term .)
    EQ              reduce using rule 69 (expression -> term .)
    NEQ             reduce using rule 69 (expression -> term .)
    LT              reduce using rule 69 (expression -> term .)
    LE              reduce using rule 69 (expression -> term .)
    GT              reduce using rule 69 (expression -> term .)
    GE              reduce using rule 69 (expression -> term .)
    AND             reduce using rule 69 (expression -> term .)
    OR              reduce using rule 69 (expression -> term .)
    MUT             reduce using rule 69 (expression -> term .)
    ID              reduce using rule 69 (expression -> term .)
    IF              reduce using rule 69 (expression -> term .)
    FOR             reduce using rule 69 (expression -> term .)
    BREAK           reduce using rule 69 (expression -> term .)
    RETURN          reduce using rule 69 (expression -> term .)
    RBRACE          reduce using rule 69 (expression -> term .)
    RBRACKET        reduce using rule 69 (expression -> term .)
    LBRACE          reduce using rule 69 (expression -> term .)
    SEMICOLON       reduce using rule 69 (expression -> term .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    MOD             shift and go to state 53


state 23

    (67) expression -> increment_rule .

    PLUS            reduce using rule 67 (expression -> increment_rule .)
    MINUS           reduce using rule 67 (expression -> increment_rule .)
    CONST           reduce using rule 67 (expression -> increment_rule .)
    FN              reduce using rule 67 (expression -> increment_rule .)
    $end            reduce using rule 67 (expression -> increment_rule .)
    RPAREN          reduce using rule 67 (expression -> increment_rule .)
    COMMA           reduce using rule 67 (expression -> increment_rule .)
    EQ              reduce using rule 67 (expression -> increment_rule .)
    NEQ             reduce using rule 67 (expression -> increment_rule .)
    LT              reduce using rule 67 (expression -> increment_rule .)
    LE              reduce using rule 67 (expression -> increment_rule .)
    GT              reduce using rule 67 (expression -> increment_rule .)
    GE              reduce using rule 67 (expression -> increment_rule .)
    AND             reduce using rule 67 (expression -> increment_rule .)
    OR              reduce using rule 67 (expression -> increment_rule .)
    MUT             reduce using rule 67 (expression -> increment_rule .)
    ID              reduce using rule 67 (expression -> increment_rule .)
    IF              reduce using rule 67 (expression -> increment_rule .)
    FOR             reduce using rule 67 (expression -> increment_rule .)
    BREAK           reduce using rule 67 (expression -> increment_rule .)
    RETURN          reduce using rule 67 (expression -> increment_rule .)
    RBRACE          reduce using rule 67 (expression -> increment_rule .)
    RBRACKET        reduce using rule 67 (expression -> increment_rule .)
    LBRACE          reduce using rule 67 (expression -> increment_rule .)
    SEMICOLON       reduce using rule 67 (expression -> increment_rule .)


state 24

    (68) expression -> func_call .

    PLUS            reduce using rule 68 (expression -> func_call .)
    MINUS           reduce using rule 68 (expression -> func_call .)
    CONST           reduce using rule 68 (expression -> func_call .)
    FN              reduce using rule 68 (expression -> func_call .)
    $end            reduce using rule 68 (expression -> func_call .)
    RPAREN          reduce using rule 68 (expression -> func_call .)
    COMMA           reduce using rule 68 (expression -> func_call .)
    EQ              reduce using rule 68 (expression -> func_call .)
    NEQ             reduce using rule 68 (expression -> func_call .)
    LT              reduce using rule 68 (expression -> func_call .)
    LE              reduce using rule 68 (expression -> func_call .)
    GT              reduce using rule 68 (expression -> func_call .)
    GE              reduce using rule 68 (expression -> func_call .)
    AND             reduce using rule 68 (expression -> func_call .)
    OR              reduce using rule 68 (expression -> func_call .)
    MUT             reduce using rule 68 (expression -> func_call .)
    ID              reduce using rule 68 (expression -> func_call .)
    IF              reduce using rule 68 (expression -> func_call .)
    FOR             reduce using rule 68 (expression -> func_call .)
    BREAK           reduce using rule 68 (expression -> func_call .)
    RETURN          reduce using rule 68 (expression -> func_call .)
    RBRACE          reduce using rule 68 (expression -> func_call .)
    RBRACKET        reduce using rule 68 (expression -> func_call .)
    LBRACE          reduce using rule 68 (expression -> func_call .)
    SEMICOLON       reduce using rule 68 (expression -> func_call .)


state 25

    (81) factor -> LPAREN . expression RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 54
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 26

    (48) func_call -> func_call_list .

    PLUS            reduce using rule 48 (func_call -> func_call_list .)
    MINUS           reduce using rule 48 (func_call -> func_call_list .)
    CONST           reduce using rule 48 (func_call -> func_call_list .)
    FN              reduce using rule 48 (func_call -> func_call_list .)
    $end            reduce using rule 48 (func_call -> func_call_list .)
    RPAREN          reduce using rule 48 (func_call -> func_call_list .)
    COMMA           reduce using rule 48 (func_call -> func_call_list .)
    MUT             reduce using rule 48 (func_call -> func_call_list .)
    ID              reduce using rule 48 (func_call -> func_call_list .)
    IF              reduce using rule 48 (func_call -> func_call_list .)
    FOR             reduce using rule 48 (func_call -> func_call_list .)
    BREAK           reduce using rule 48 (func_call -> func_call_list .)
    RETURN          reduce using rule 48 (func_call -> func_call_list .)
    RBRACE          reduce using rule 48 (func_call -> func_call_list .)
    EQ              reduce using rule 48 (func_call -> func_call_list .)
    NEQ             reduce using rule 48 (func_call -> func_call_list .)
    LT              reduce using rule 48 (func_call -> func_call_list .)
    LE              reduce using rule 48 (func_call -> func_call_list .)
    GT              reduce using rule 48 (func_call -> func_call_list .)
    GE              reduce using rule 48 (func_call -> func_call_list .)
    AND             reduce using rule 48 (func_call -> func_call_list .)
    OR              reduce using rule 48 (func_call -> func_call_list .)
    RBRACKET        reduce using rule 48 (func_call -> func_call_list .)
    LBRACE          reduce using rule 48 (func_call -> func_call_list .)
    SEMICOLON       reduce using rule 48 (func_call -> func_call_list .)


state 27

    (73) term -> factor .

    TIMES           reduce using rule 73 (term -> factor .)
    DIVIDE          reduce using rule 73 (term -> factor .)
    MOD             reduce using rule 73 (term -> factor .)
    PLUS            reduce using rule 73 (term -> factor .)
    MINUS           reduce using rule 73 (term -> factor .)
    CONST           reduce using rule 73 (term -> factor .)
    FN              reduce using rule 73 (term -> factor .)
    $end            reduce using rule 73 (term -> factor .)
    RPAREN          reduce using rule 73 (term -> factor .)
    COMMA           reduce using rule 73 (term -> factor .)
    EQ              reduce using rule 73 (term -> factor .)
    NEQ             reduce using rule 73 (term -> factor .)
    LT              reduce using rule 73 (term -> factor .)
    LE              reduce using rule 73 (term -> factor .)
    GT              reduce using rule 73 (term -> factor .)
    GE              reduce using rule 73 (term -> factor .)
    AND             reduce using rule 73 (term -> factor .)
    OR              reduce using rule 73 (term -> factor .)
    MUT             reduce using rule 73 (term -> factor .)
    ID              reduce using rule 73 (term -> factor .)
    IF              reduce using rule 73 (term -> factor .)
    FOR             reduce using rule 73 (term -> factor .)
    BREAK           reduce using rule 73 (term -> factor .)
    RETURN          reduce using rule 73 (term -> factor .)
    RBRACE          reduce using rule 73 (term -> factor .)
    RBRACKET        reduce using rule 73 (term -> factor .)
    LBRACE          reduce using rule 73 (term -> factor .)
    SEMICOLON       reduce using rule 73 (term -> factor .)


state 28

    (75) factor -> NUMBER .

    TIMES           reduce using rule 75 (factor -> NUMBER .)
    DIVIDE          reduce using rule 75 (factor -> NUMBER .)
    MOD             reduce using rule 75 (factor -> NUMBER .)
    PLUS            reduce using rule 75 (factor -> NUMBER .)
    MINUS           reduce using rule 75 (factor -> NUMBER .)
    CONST           reduce using rule 75 (factor -> NUMBER .)
    FN              reduce using rule 75 (factor -> NUMBER .)
    $end            reduce using rule 75 (factor -> NUMBER .)
    RPAREN          reduce using rule 75 (factor -> NUMBER .)
    COMMA           reduce using rule 75 (factor -> NUMBER .)
    EQ              reduce using rule 75 (factor -> NUMBER .)
    NEQ             reduce using rule 75 (factor -> NUMBER .)
    LT              reduce using rule 75 (factor -> NUMBER .)
    LE              reduce using rule 75 (factor -> NUMBER .)
    GT              reduce using rule 75 (factor -> NUMBER .)
    GE              reduce using rule 75 (factor -> NUMBER .)
    AND             reduce using rule 75 (factor -> NUMBER .)
    OR              reduce using rule 75 (factor -> NUMBER .)
    MUT             reduce using rule 75 (factor -> NUMBER .)
    ID              reduce using rule 75 (factor -> NUMBER .)
    IF              reduce using rule 75 (factor -> NUMBER .)
    FOR             reduce using rule 75 (factor -> NUMBER .)
    BREAK           reduce using rule 75 (factor -> NUMBER .)
    RETURN          reduce using rule 75 (factor -> NUMBER .)
    RBRACE          reduce using rule 75 (factor -> NUMBER .)
    RBRACKET        reduce using rule 75 (factor -> NUMBER .)
    LBRACE          reduce using rule 75 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 75 (factor -> NUMBER .)


state 29

    (76) factor -> NUMBERFLOAT .

    TIMES           reduce using rule 76 (factor -> NUMBERFLOAT .)
    DIVIDE          reduce using rule 76 (factor -> NUMBERFLOAT .)
    MOD             reduce using rule 76 (factor -> NUMBERFLOAT .)
    PLUS            reduce using rule 76 (factor -> NUMBERFLOAT .)
    MINUS           reduce using rule 76 (factor -> NUMBERFLOAT .)
    CONST           reduce using rule 76 (factor -> NUMBERFLOAT .)
    FN              reduce using rule 76 (factor -> NUMBERFLOAT .)
    $end            reduce using rule 76 (factor -> NUMBERFLOAT .)
    RPAREN          reduce using rule 76 (factor -> NUMBERFLOAT .)
    COMMA           reduce using rule 76 (factor -> NUMBERFLOAT .)
    EQ              reduce using rule 76 (factor -> NUMBERFLOAT .)
    NEQ             reduce using rule 76 (factor -> NUMBERFLOAT .)
    LT              reduce using rule 76 (factor -> NUMBERFLOAT .)
    LE              reduce using rule 76 (factor -> NUMBERFLOAT .)
    GT              reduce using rule 76 (factor -> NUMBERFLOAT .)
    GE              reduce using rule 76 (factor -> NUMBERFLOAT .)
    AND             reduce using rule 76 (factor -> NUMBERFLOAT .)
    OR              reduce using rule 76 (factor -> NUMBERFLOAT .)
    MUT             reduce using rule 76 (factor -> NUMBERFLOAT .)
    ID              reduce using rule 76 (factor -> NUMBERFLOAT .)
    IF              reduce using rule 76 (factor -> NUMBERFLOAT .)
    FOR             reduce using rule 76 (factor -> NUMBERFLOAT .)
    BREAK           reduce using rule 76 (factor -> NUMBERFLOAT .)
    RETURN          reduce using rule 76 (factor -> NUMBERFLOAT .)
    RBRACE          reduce using rule 76 (factor -> NUMBERFLOAT .)
    RBRACKET        reduce using rule 76 (factor -> NUMBERFLOAT .)
    LBRACE          reduce using rule 76 (factor -> NUMBERFLOAT .)
    SEMICOLON       reduce using rule 76 (factor -> NUMBERFLOAT .)


state 30

    (77) factor -> WORD .

    TIMES           reduce using rule 77 (factor -> WORD .)
    DIVIDE          reduce using rule 77 (factor -> WORD .)
    MOD             reduce using rule 77 (factor -> WORD .)
    PLUS            reduce using rule 77 (factor -> WORD .)
    MINUS           reduce using rule 77 (factor -> WORD .)
    CONST           reduce using rule 77 (factor -> WORD .)
    FN              reduce using rule 77 (factor -> WORD .)
    $end            reduce using rule 77 (factor -> WORD .)
    RPAREN          reduce using rule 77 (factor -> WORD .)
    COMMA           reduce using rule 77 (factor -> WORD .)
    EQ              reduce using rule 77 (factor -> WORD .)
    NEQ             reduce using rule 77 (factor -> WORD .)
    LT              reduce using rule 77 (factor -> WORD .)
    LE              reduce using rule 77 (factor -> WORD .)
    GT              reduce using rule 77 (factor -> WORD .)
    GE              reduce using rule 77 (factor -> WORD .)
    AND             reduce using rule 77 (factor -> WORD .)
    OR              reduce using rule 77 (factor -> WORD .)
    MUT             reduce using rule 77 (factor -> WORD .)
    ID              reduce using rule 77 (factor -> WORD .)
    IF              reduce using rule 77 (factor -> WORD .)
    FOR             reduce using rule 77 (factor -> WORD .)
    BREAK           reduce using rule 77 (factor -> WORD .)
    RETURN          reduce using rule 77 (factor -> WORD .)
    RBRACE          reduce using rule 77 (factor -> WORD .)
    RBRACKET        reduce using rule 77 (factor -> WORD .)
    LBRACE          reduce using rule 77 (factor -> WORD .)
    SEMICOLON       reduce using rule 77 (factor -> WORD .)


state 31

    (78) factor -> TRUE .

    TIMES           reduce using rule 78 (factor -> TRUE .)
    DIVIDE          reduce using rule 78 (factor -> TRUE .)
    MOD             reduce using rule 78 (factor -> TRUE .)
    PLUS            reduce using rule 78 (factor -> TRUE .)
    MINUS           reduce using rule 78 (factor -> TRUE .)
    CONST           reduce using rule 78 (factor -> TRUE .)
    FN              reduce using rule 78 (factor -> TRUE .)
    $end            reduce using rule 78 (factor -> TRUE .)
    RPAREN          reduce using rule 78 (factor -> TRUE .)
    COMMA           reduce using rule 78 (factor -> TRUE .)
    EQ              reduce using rule 78 (factor -> TRUE .)
    NEQ             reduce using rule 78 (factor -> TRUE .)
    LT              reduce using rule 78 (factor -> TRUE .)
    LE              reduce using rule 78 (factor -> TRUE .)
    GT              reduce using rule 78 (factor -> TRUE .)
    GE              reduce using rule 78 (factor -> TRUE .)
    AND             reduce using rule 78 (factor -> TRUE .)
    OR              reduce using rule 78 (factor -> TRUE .)
    MUT             reduce using rule 78 (factor -> TRUE .)
    ID              reduce using rule 78 (factor -> TRUE .)
    IF              reduce using rule 78 (factor -> TRUE .)
    FOR             reduce using rule 78 (factor -> TRUE .)
    BREAK           reduce using rule 78 (factor -> TRUE .)
    RETURN          reduce using rule 78 (factor -> TRUE .)
    RBRACE          reduce using rule 78 (factor -> TRUE .)
    RBRACKET        reduce using rule 78 (factor -> TRUE .)
    LBRACE          reduce using rule 78 (factor -> TRUE .)
    SEMICOLON       reduce using rule 78 (factor -> TRUE .)


state 32

    (79) factor -> FALSE .

    TIMES           reduce using rule 79 (factor -> FALSE .)
    DIVIDE          reduce using rule 79 (factor -> FALSE .)
    MOD             reduce using rule 79 (factor -> FALSE .)
    PLUS            reduce using rule 79 (factor -> FALSE .)
    MINUS           reduce using rule 79 (factor -> FALSE .)
    CONST           reduce using rule 79 (factor -> FALSE .)
    FN              reduce using rule 79 (factor -> FALSE .)
    $end            reduce using rule 79 (factor -> FALSE .)
    RPAREN          reduce using rule 79 (factor -> FALSE .)
    COMMA           reduce using rule 79 (factor -> FALSE .)
    EQ              reduce using rule 79 (factor -> FALSE .)
    NEQ             reduce using rule 79 (factor -> FALSE .)
    LT              reduce using rule 79 (factor -> FALSE .)
    LE              reduce using rule 79 (factor -> FALSE .)
    GT              reduce using rule 79 (factor -> FALSE .)
    GE              reduce using rule 79 (factor -> FALSE .)
    AND             reduce using rule 79 (factor -> FALSE .)
    OR              reduce using rule 79 (factor -> FALSE .)
    MUT             reduce using rule 79 (factor -> FALSE .)
    ID              reduce using rule 79 (factor -> FALSE .)
    IF              reduce using rule 79 (factor -> FALSE .)
    FOR             reduce using rule 79 (factor -> FALSE .)
    BREAK           reduce using rule 79 (factor -> FALSE .)
    RETURN          reduce using rule 79 (factor -> FALSE .)
    RBRACE          reduce using rule 79 (factor -> FALSE .)
    RBRACKET        reduce using rule 79 (factor -> FALSE .)
    LBRACE          reduce using rule 79 (factor -> FALSE .)
    SEMICOLON       reduce using rule 79 (factor -> FALSE .)


state 33

    (80) factor -> RUNEVALOR .

    TIMES           reduce using rule 80 (factor -> RUNEVALOR .)
    DIVIDE          reduce using rule 80 (factor -> RUNEVALOR .)
    MOD             reduce using rule 80 (factor -> RUNEVALOR .)
    PLUS            reduce using rule 80 (factor -> RUNEVALOR .)
    MINUS           reduce using rule 80 (factor -> RUNEVALOR .)
    CONST           reduce using rule 80 (factor -> RUNEVALOR .)
    FN              reduce using rule 80 (factor -> RUNEVALOR .)
    $end            reduce using rule 80 (factor -> RUNEVALOR .)
    RPAREN          reduce using rule 80 (factor -> RUNEVALOR .)
    COMMA           reduce using rule 80 (factor -> RUNEVALOR .)
    EQ              reduce using rule 80 (factor -> RUNEVALOR .)
    NEQ             reduce using rule 80 (factor -> RUNEVALOR .)
    LT              reduce using rule 80 (factor -> RUNEVALOR .)
    LE              reduce using rule 80 (factor -> RUNEVALOR .)
    GT              reduce using rule 80 (factor -> RUNEVALOR .)
    GE              reduce using rule 80 (factor -> RUNEVALOR .)
    AND             reduce using rule 80 (factor -> RUNEVALOR .)
    OR              reduce using rule 80 (factor -> RUNEVALOR .)
    MUT             reduce using rule 80 (factor -> RUNEVALOR .)
    ID              reduce using rule 80 (factor -> RUNEVALOR .)
    IF              reduce using rule 80 (factor -> RUNEVALOR .)
    FOR             reduce using rule 80 (factor -> RUNEVALOR .)
    BREAK           reduce using rule 80 (factor -> RUNEVALOR .)
    RETURN          reduce using rule 80 (factor -> RUNEVALOR .)
    RBRACE          reduce using rule 80 (factor -> RUNEVALOR .)
    RBRACKET        reduce using rule 80 (factor -> RUNEVALOR .)
    LBRACE          reduce using rule 80 (factor -> RUNEVALOR .)
    SEMICOLON       reduce using rule 80 (factor -> RUNEVALOR .)


state 34

    (83) factor -> NOTACAOCIENTIFICA .

    TIMES           reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    DIVIDE          reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    MOD             reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    PLUS            reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    MINUS           reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    CONST           reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    FN              reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    $end            reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    RPAREN          reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    COMMA           reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    EQ              reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    NEQ             reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    LT              reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    LE              reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    GT              reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    GE              reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    AND             reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    OR              reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    MUT             reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    ID              reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    IF              reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    FOR             reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    BREAK           reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    RETURN          reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    RBRACE          reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    RBRACKET        reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    LBRACE          reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)
    SEMICOLON       reduce using rule 83 (factor -> NOTACAOCIENTIFICA .)


state 35

    (84) factor -> BINARY .

    TIMES           reduce using rule 84 (factor -> BINARY .)
    DIVIDE          reduce using rule 84 (factor -> BINARY .)
    MOD             reduce using rule 84 (factor -> BINARY .)
    PLUS            reduce using rule 84 (factor -> BINARY .)
    MINUS           reduce using rule 84 (factor -> BINARY .)
    CONST           reduce using rule 84 (factor -> BINARY .)
    FN              reduce using rule 84 (factor -> BINARY .)
    $end            reduce using rule 84 (factor -> BINARY .)
    RPAREN          reduce using rule 84 (factor -> BINARY .)
    COMMA           reduce using rule 84 (factor -> BINARY .)
    EQ              reduce using rule 84 (factor -> BINARY .)
    NEQ             reduce using rule 84 (factor -> BINARY .)
    LT              reduce using rule 84 (factor -> BINARY .)
    LE              reduce using rule 84 (factor -> BINARY .)
    GT              reduce using rule 84 (factor -> BINARY .)
    GE              reduce using rule 84 (factor -> BINARY .)
    AND             reduce using rule 84 (factor -> BINARY .)
    OR              reduce using rule 84 (factor -> BINARY .)
    MUT             reduce using rule 84 (factor -> BINARY .)
    ID              reduce using rule 84 (factor -> BINARY .)
    IF              reduce using rule 84 (factor -> BINARY .)
    FOR             reduce using rule 84 (factor -> BINARY .)
    BREAK           reduce using rule 84 (factor -> BINARY .)
    RETURN          reduce using rule 84 (factor -> BINARY .)
    RBRACE          reduce using rule 84 (factor -> BINARY .)
    RBRACKET        reduce using rule 84 (factor -> BINARY .)
    LBRACE          reduce using rule 84 (factor -> BINARY .)
    SEMICOLON       reduce using rule 84 (factor -> BINARY .)


state 36

    (85) factor -> OCTAL .

    TIMES           reduce using rule 85 (factor -> OCTAL .)
    DIVIDE          reduce using rule 85 (factor -> OCTAL .)
    MOD             reduce using rule 85 (factor -> OCTAL .)
    PLUS            reduce using rule 85 (factor -> OCTAL .)
    MINUS           reduce using rule 85 (factor -> OCTAL .)
    CONST           reduce using rule 85 (factor -> OCTAL .)
    FN              reduce using rule 85 (factor -> OCTAL .)
    $end            reduce using rule 85 (factor -> OCTAL .)
    RPAREN          reduce using rule 85 (factor -> OCTAL .)
    COMMA           reduce using rule 85 (factor -> OCTAL .)
    EQ              reduce using rule 85 (factor -> OCTAL .)
    NEQ             reduce using rule 85 (factor -> OCTAL .)
    LT              reduce using rule 85 (factor -> OCTAL .)
    LE              reduce using rule 85 (factor -> OCTAL .)
    GT              reduce using rule 85 (factor -> OCTAL .)
    GE              reduce using rule 85 (factor -> OCTAL .)
    AND             reduce using rule 85 (factor -> OCTAL .)
    OR              reduce using rule 85 (factor -> OCTAL .)
    MUT             reduce using rule 85 (factor -> OCTAL .)
    ID              reduce using rule 85 (factor -> OCTAL .)
    IF              reduce using rule 85 (factor -> OCTAL .)
    FOR             reduce using rule 85 (factor -> OCTAL .)
    BREAK           reduce using rule 85 (factor -> OCTAL .)
    RETURN          reduce using rule 85 (factor -> OCTAL .)
    RBRACE          reduce using rule 85 (factor -> OCTAL .)
    RBRACKET        reduce using rule 85 (factor -> OCTAL .)
    LBRACE          reduce using rule 85 (factor -> OCTAL .)
    SEMICOLON       reduce using rule 85 (factor -> OCTAL .)


state 37

    (86) factor -> HEX .

    TIMES           reduce using rule 86 (factor -> HEX .)
    DIVIDE          reduce using rule 86 (factor -> HEX .)
    MOD             reduce using rule 86 (factor -> HEX .)
    PLUS            reduce using rule 86 (factor -> HEX .)
    MINUS           reduce using rule 86 (factor -> HEX .)
    CONST           reduce using rule 86 (factor -> HEX .)
    FN              reduce using rule 86 (factor -> HEX .)
    $end            reduce using rule 86 (factor -> HEX .)
    RPAREN          reduce using rule 86 (factor -> HEX .)
    COMMA           reduce using rule 86 (factor -> HEX .)
    EQ              reduce using rule 86 (factor -> HEX .)
    NEQ             reduce using rule 86 (factor -> HEX .)
    LT              reduce using rule 86 (factor -> HEX .)
    LE              reduce using rule 86 (factor -> HEX .)
    GT              reduce using rule 86 (factor -> HEX .)
    GE              reduce using rule 86 (factor -> HEX .)
    AND             reduce using rule 86 (factor -> HEX .)
    OR              reduce using rule 86 (factor -> HEX .)
    MUT             reduce using rule 86 (factor -> HEX .)
    ID              reduce using rule 86 (factor -> HEX .)
    IF              reduce using rule 86 (factor -> HEX .)
    FOR             reduce using rule 86 (factor -> HEX .)
    BREAK           reduce using rule 86 (factor -> HEX .)
    RETURN          reduce using rule 86 (factor -> HEX .)
    RBRACE          reduce using rule 86 (factor -> HEX .)
    RBRACKET        reduce using rule 86 (factor -> HEX .)
    LBRACE          reduce using rule 86 (factor -> HEX .)
    SEMICOLON       reduce using rule 86 (factor -> HEX .)


state 38

    (87) factor -> INTERPOLATIONSTRING .

    TIMES           reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    DIVIDE          reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    MOD             reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    PLUS            reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    MINUS           reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    CONST           reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    FN              reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    $end            reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    RPAREN          reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    COMMA           reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    EQ              reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    NEQ             reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    LT              reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    LE              reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    GT              reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    GE              reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    AND             reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    OR              reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    MUT             reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    ID              reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    IF              reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    FOR             reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    BREAK           reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    RETURN          reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    RBRACE          reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    RBRACKET        reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    LBRACE          reduce using rule 87 (factor -> INTERPOLATIONSTRING .)
    SEMICOLON       reduce using rule 87 (factor -> INTERPOLATIONSTRING .)


state 39

    (88) factor -> size_of_expression .

    TIMES           reduce using rule 88 (factor -> size_of_expression .)
    DIVIDE          reduce using rule 88 (factor -> size_of_expression .)
    MOD             reduce using rule 88 (factor -> size_of_expression .)
    PLUS            reduce using rule 88 (factor -> size_of_expression .)
    MINUS           reduce using rule 88 (factor -> size_of_expression .)
    CONST           reduce using rule 88 (factor -> size_of_expression .)
    FN              reduce using rule 88 (factor -> size_of_expression .)
    $end            reduce using rule 88 (factor -> size_of_expression .)
    RPAREN          reduce using rule 88 (factor -> size_of_expression .)
    COMMA           reduce using rule 88 (factor -> size_of_expression .)
    EQ              reduce using rule 88 (factor -> size_of_expression .)
    NEQ             reduce using rule 88 (factor -> size_of_expression .)
    LT              reduce using rule 88 (factor -> size_of_expression .)
    LE              reduce using rule 88 (factor -> size_of_expression .)
    GT              reduce using rule 88 (factor -> size_of_expression .)
    GE              reduce using rule 88 (factor -> size_of_expression .)
    AND             reduce using rule 88 (factor -> size_of_expression .)
    OR              reduce using rule 88 (factor -> size_of_expression .)
    MUT             reduce using rule 88 (factor -> size_of_expression .)
    ID              reduce using rule 88 (factor -> size_of_expression .)
    IF              reduce using rule 88 (factor -> size_of_expression .)
    FOR             reduce using rule 88 (factor -> size_of_expression .)
    BREAK           reduce using rule 88 (factor -> size_of_expression .)
    RETURN          reduce using rule 88 (factor -> size_of_expression .)
    RBRACE          reduce using rule 88 (factor -> size_of_expression .)
    RBRACKET        reduce using rule 88 (factor -> size_of_expression .)
    LBRACE          reduce using rule 88 (factor -> size_of_expression .)
    SEMICOLON       reduce using rule 88 (factor -> size_of_expression .)


state 40

    (89) size_of_expression -> SIZEOF . LPAREN expression RPAREN
    (90) size_of_expression -> SIZEOF . LPAREN type RPAREN

    LPAREN          shift and go to state 55


state 41

    (16) param -> ID . type
    (17) type -> . INT
    (18) type -> . F32
    (19) type -> . F64
    (20) type -> . STRING
    (21) type -> . BOOL
    (22) type -> . RUNE

    INT             shift and go to state 57
    F32             shift and go to state 58
    F64             shift and go to state 59
    STRING          shift and go to state 60
    BOOL            shift and go to state 61
    RUNE            shift and go to state 62

    type                           shift and go to state 56

state 42

    (10) function_definition -> FN ID LPAREN params . RPAREN block_statement
    (11) function_definition -> FN ID LPAREN params . RPAREN type block_statement

    RPAREN          shift and go to state 63


state 43

    (13) params -> param . more_params
    (14) more_params -> . COMMA param more_params
    (15) more_params -> .

    COMMA           shift and go to state 65
    RPAREN          reduce using rule 15 (more_params -> .)

    more_params                    shift and go to state 64

state 44

    (12) function_definition -> FN MAIN LPAREN RPAREN . block_statement
    (23) block_statement -> . LBRACE statements RBRACE
    (24) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 67

    block_statement                shift and go to state 66

state 45

    (91) increment_rule -> ID INCREMENT .

    PLUS            reduce using rule 91 (increment_rule -> ID INCREMENT .)
    MINUS           reduce using rule 91 (increment_rule -> ID INCREMENT .)
    CONST           reduce using rule 91 (increment_rule -> ID INCREMENT .)
    FN              reduce using rule 91 (increment_rule -> ID INCREMENT .)
    $end            reduce using rule 91 (increment_rule -> ID INCREMENT .)
    RPAREN          reduce using rule 91 (increment_rule -> ID INCREMENT .)
    COMMA           reduce using rule 91 (increment_rule -> ID INCREMENT .)
    MUT             reduce using rule 91 (increment_rule -> ID INCREMENT .)
    ID              reduce using rule 91 (increment_rule -> ID INCREMENT .)
    IF              reduce using rule 91 (increment_rule -> ID INCREMENT .)
    FOR             reduce using rule 91 (increment_rule -> ID INCREMENT .)
    BREAK           reduce using rule 91 (increment_rule -> ID INCREMENT .)
    RETURN          reduce using rule 91 (increment_rule -> ID INCREMENT .)
    RBRACE          reduce using rule 91 (increment_rule -> ID INCREMENT .)
    EQ              reduce using rule 91 (increment_rule -> ID INCREMENT .)
    NEQ             reduce using rule 91 (increment_rule -> ID INCREMENT .)
    LT              reduce using rule 91 (increment_rule -> ID INCREMENT .)
    LE              reduce using rule 91 (increment_rule -> ID INCREMENT .)
    GT              reduce using rule 91 (increment_rule -> ID INCREMENT .)
    GE              reduce using rule 91 (increment_rule -> ID INCREMENT .)
    AND             reduce using rule 91 (increment_rule -> ID INCREMENT .)
    OR              reduce using rule 91 (increment_rule -> ID INCREMENT .)
    RBRACKET        reduce using rule 91 (increment_rule -> ID INCREMENT .)
    LBRACE          reduce using rule 91 (increment_rule -> ID INCREMENT .)
    SEMICOLON       reduce using rule 91 (increment_rule -> ID INCREMENT .)


state 46

    (92) increment_rule -> ID DECREMENT .

    PLUS            reduce using rule 92 (increment_rule -> ID DECREMENT .)
    MINUS           reduce using rule 92 (increment_rule -> ID DECREMENT .)
    CONST           reduce using rule 92 (increment_rule -> ID DECREMENT .)
    FN              reduce using rule 92 (increment_rule -> ID DECREMENT .)
    $end            reduce using rule 92 (increment_rule -> ID DECREMENT .)
    RPAREN          reduce using rule 92 (increment_rule -> ID DECREMENT .)
    COMMA           reduce using rule 92 (increment_rule -> ID DECREMENT .)
    MUT             reduce using rule 92 (increment_rule -> ID DECREMENT .)
    ID              reduce using rule 92 (increment_rule -> ID DECREMENT .)
    IF              reduce using rule 92 (increment_rule -> ID DECREMENT .)
    FOR             reduce using rule 92 (increment_rule -> ID DECREMENT .)
    BREAK           reduce using rule 92 (increment_rule -> ID DECREMENT .)
    RETURN          reduce using rule 92 (increment_rule -> ID DECREMENT .)
    RBRACE          reduce using rule 92 (increment_rule -> ID DECREMENT .)
    EQ              reduce using rule 92 (increment_rule -> ID DECREMENT .)
    NEQ             reduce using rule 92 (increment_rule -> ID DECREMENT .)
    LT              reduce using rule 92 (increment_rule -> ID DECREMENT .)
    LE              reduce using rule 92 (increment_rule -> ID DECREMENT .)
    GT              reduce using rule 92 (increment_rule -> ID DECREMENT .)
    GE              reduce using rule 92 (increment_rule -> ID DECREMENT .)
    AND             reduce using rule 92 (increment_rule -> ID DECREMENT .)
    OR              reduce using rule 92 (increment_rule -> ID DECREMENT .)
    RBRACKET        reduce using rule 92 (increment_rule -> ID DECREMENT .)
    LBRACE          reduce using rule 92 (increment_rule -> ID DECREMENT .)
    SEMICOLON       reduce using rule 92 (increment_rule -> ID DECREMENT .)


state 47

    (46) func_call -> ID LPAREN . id_list RPAREN
    (47) func_call -> ID LPAREN . RPAREN
    (51) id_list -> . expression more_expressions
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    RPAREN          shift and go to state 69
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    id_list                        shift and go to state 68
    expression                     shift and go to state 70
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 48

    (49) func_call_list -> ID LBRACKET . DOTDOT RBRACKET
    (50) func_call_list -> ID LBRACKET . NUMBER DOTDOT NUMBER RBRACKET
    (82) factor -> ID LBRACKET . NUMBER RBRACKET

    DOTDOT          shift and go to state 71
    NUMBER          shift and go to state 72


state 49

    (65) expression -> expression PLUS . term
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 74
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    term                           shift and go to state 73
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 50

    (66) expression -> expression MINUS . term
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 74
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    term                           shift and go to state 75
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 51

    (70) term -> term TIMES . factor
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 74
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    factor                         shift and go to state 76
    size_of_expression             shift and go to state 39

state 52

    (71) term -> term DIVIDE . factor
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 74
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    factor                         shift and go to state 77
    size_of_expression             shift and go to state 39

state 53

    (72) term -> term MOD . factor
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 74
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    factor                         shift and go to state 78
    size_of_expression             shift and go to state 39

state 54

    (81) factor -> LPAREN expression . RPAREN
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    RPAREN          shift and go to state 79
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 55

    (89) size_of_expression -> SIZEOF LPAREN . expression RPAREN
    (90) size_of_expression -> SIZEOF LPAREN . type RPAREN
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (17) type -> . INT
    (18) type -> . F32
    (19) type -> . F64
    (20) type -> . STRING
    (21) type -> . BOOL
    (22) type -> . RUNE
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    INT             shift and go to state 57
    F32             shift and go to state 58
    F64             shift and go to state 59
    STRING          shift and go to state 60
    BOOL            shift and go to state 61
    RUNE            shift and go to state 62
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 80
    type                           shift and go to state 81
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 56

    (16) param -> ID type .

    COMMA           reduce using rule 16 (param -> ID type .)
    RPAREN          reduce using rule 16 (param -> ID type .)


state 57

    (17) type -> INT .

    COMMA           reduce using rule 17 (type -> INT .)
    RPAREN          reduce using rule 17 (type -> INT .)
    LBRACE          reduce using rule 17 (type -> INT .)
    MUT             reduce using rule 17 (type -> INT .)
    CONST           reduce using rule 17 (type -> INT .)
    ID              reduce using rule 17 (type -> INT .)
    IF              reduce using rule 17 (type -> INT .)
    FOR             reduce using rule 17 (type -> INT .)
    BREAK           reduce using rule 17 (type -> INT .)
    RETURN          reduce using rule 17 (type -> INT .)
    RBRACE          reduce using rule 17 (type -> INT .)


state 58

    (18) type -> F32 .

    COMMA           reduce using rule 18 (type -> F32 .)
    RPAREN          reduce using rule 18 (type -> F32 .)
    LBRACE          reduce using rule 18 (type -> F32 .)
    MUT             reduce using rule 18 (type -> F32 .)
    CONST           reduce using rule 18 (type -> F32 .)
    ID              reduce using rule 18 (type -> F32 .)
    IF              reduce using rule 18 (type -> F32 .)
    FOR             reduce using rule 18 (type -> F32 .)
    BREAK           reduce using rule 18 (type -> F32 .)
    RETURN          reduce using rule 18 (type -> F32 .)
    RBRACE          reduce using rule 18 (type -> F32 .)


state 59

    (19) type -> F64 .

    COMMA           reduce using rule 19 (type -> F64 .)
    RPAREN          reduce using rule 19 (type -> F64 .)
    LBRACE          reduce using rule 19 (type -> F64 .)
    MUT             reduce using rule 19 (type -> F64 .)
    CONST           reduce using rule 19 (type -> F64 .)
    ID              reduce using rule 19 (type -> F64 .)
    IF              reduce using rule 19 (type -> F64 .)
    FOR             reduce using rule 19 (type -> F64 .)
    BREAK           reduce using rule 19 (type -> F64 .)
    RETURN          reduce using rule 19 (type -> F64 .)
    RBRACE          reduce using rule 19 (type -> F64 .)


state 60

    (20) type -> STRING .

    COMMA           reduce using rule 20 (type -> STRING .)
    RPAREN          reduce using rule 20 (type -> STRING .)
    LBRACE          reduce using rule 20 (type -> STRING .)
    MUT             reduce using rule 20 (type -> STRING .)
    CONST           reduce using rule 20 (type -> STRING .)
    ID              reduce using rule 20 (type -> STRING .)
    IF              reduce using rule 20 (type -> STRING .)
    FOR             reduce using rule 20 (type -> STRING .)
    BREAK           reduce using rule 20 (type -> STRING .)
    RETURN          reduce using rule 20 (type -> STRING .)
    RBRACE          reduce using rule 20 (type -> STRING .)


state 61

    (21) type -> BOOL .

    COMMA           reduce using rule 21 (type -> BOOL .)
    RPAREN          reduce using rule 21 (type -> BOOL .)
    LBRACE          reduce using rule 21 (type -> BOOL .)
    MUT             reduce using rule 21 (type -> BOOL .)
    CONST           reduce using rule 21 (type -> BOOL .)
    ID              reduce using rule 21 (type -> BOOL .)
    IF              reduce using rule 21 (type -> BOOL .)
    FOR             reduce using rule 21 (type -> BOOL .)
    BREAK           reduce using rule 21 (type -> BOOL .)
    RETURN          reduce using rule 21 (type -> BOOL .)
    RBRACE          reduce using rule 21 (type -> BOOL .)


state 62

    (22) type -> RUNE .

    COMMA           reduce using rule 22 (type -> RUNE .)
    RPAREN          reduce using rule 22 (type -> RUNE .)
    LBRACE          reduce using rule 22 (type -> RUNE .)
    MUT             reduce using rule 22 (type -> RUNE .)
    CONST           reduce using rule 22 (type -> RUNE .)
    ID              reduce using rule 22 (type -> RUNE .)
    IF              reduce using rule 22 (type -> RUNE .)
    FOR             reduce using rule 22 (type -> RUNE .)
    BREAK           reduce using rule 22 (type -> RUNE .)
    RETURN          reduce using rule 22 (type -> RUNE .)
    RBRACE          reduce using rule 22 (type -> RUNE .)


state 63

    (10) function_definition -> FN ID LPAREN params RPAREN . block_statement
    (11) function_definition -> FN ID LPAREN params RPAREN . type block_statement
    (23) block_statement -> . LBRACE statements RBRACE
    (24) block_statement -> . LBRACE RBRACE
    (17) type -> . INT
    (18) type -> . F32
    (19) type -> . F64
    (20) type -> . STRING
    (21) type -> . BOOL
    (22) type -> . RUNE

    LBRACE          shift and go to state 67
    INT             shift and go to state 57
    F32             shift and go to state 58
    F64             shift and go to state 59
    STRING          shift and go to state 60
    BOOL            shift and go to state 61
    RUNE            shift and go to state 62

    block_statement                shift and go to state 82
    type                           shift and go to state 83

state 64

    (13) params -> param more_params .

    RPAREN          reduce using rule 13 (params -> param more_params .)


state 65

    (14) more_params -> COMMA . param more_params
    (16) param -> . ID type

    ID              shift and go to state 41

    param                          shift and go to state 84

state 66

    (12) function_definition -> FN MAIN LPAREN RPAREN block_statement .

    CONST           reduce using rule 12 (function_definition -> FN MAIN LPAREN RPAREN block_statement .)
    FN              reduce using rule 12 (function_definition -> FN MAIN LPAREN RPAREN block_statement .)
    $end            reduce using rule 12 (function_definition -> FN MAIN LPAREN RPAREN block_statement .)


state 67

    (23) block_statement -> LBRACE . statements RBRACE
    (24) block_statement -> LBRACE . RBRACE
    (25) statements -> . statement statements
    (26) statements -> . statement
    (27) statement -> . var_statement
    (28) statement -> . var_assignment
    (29) statement -> . func_call
    (30) statement -> . if_statement
    (31) statement -> . for_statement
    (32) statement -> . break_statement
    (33) statement -> . return_statement
    (34) statement -> . list_statement
    (35) statement -> . list_assignment
    (36) statement -> . increment_rule
    (37) statement -> . assignment
    (38) var_statement -> . declaration_imutable
    (39) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (40) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (41) var_assignment -> . ID ASSIGN expression
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (54) if_statement -> . IF expression_relacional block_statement
    (55) if_statement -> . IF expression_relacional block_statement elseop
    (58) for_statement -> . FOR ID IN expression block_statement
    (59) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement
    (60) for_statement -> . FOR expression_relacional block_statement
    (63) break_statement -> . BREAK
    (64) return_statement -> . RETURN expression
    (42) list_statement -> . declaration_imutable_list
    (43) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (44) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (45) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (102) assignment -> . ID PLUS_ASSIGN expression
    (103) assignment -> . ID MINUS_ASSIGN expression
    (104) assignment -> . ID TIMES_ASSIGN expression
    (105) assignment -> . ID DIVIDE_ASSIGN expression
    (106) assignment -> . ID MOD_ASSIGN expression
    (107) assignment -> . ID BIT_AND_ASSIGN expression
    (108) assignment -> . ID BIT_OR_ASSIGN expression
    (109) assignment -> . ID BIT_XOR_ASSIGN expression
    (110) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (111) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (61) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (62) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          shift and go to state 86
    MUT             shift and go to state 100
    CONST           shift and go to state 102
    ID              shift and go to state 101
    IF              shift and go to state 103
    FOR             shift and go to state 104
    BREAK           shift and go to state 105
    RETURN          shift and go to state 106

    statements                     shift and go to state 85
    statement                      shift and go to state 87
    var_statement                  shift and go to state 88
    var_assignment                 shift and go to state 89
    func_call                      shift and go to state 90
    if_statement                   shift and go to state 91
    for_statement                  shift and go to state 92
    break_statement                shift and go to state 93
    return_statement               shift and go to state 94
    list_statement                 shift and go to state 95
    list_assignment                shift and go to state 96
    increment_rule                 shift and go to state 97
    assignment                     shift and go to state 98
    declaration_imutable           shift and go to state 99
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 107

state 68

    (46) func_call -> ID LPAREN id_list . RPAREN

    RPAREN          shift and go to state 108


state 69

    (47) func_call -> ID LPAREN RPAREN .

    PLUS            reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    CONST           reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    FN              reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    $end            reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    MUT             reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    ID              reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    IF              reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    FOR             reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    BREAK           reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    EQ              reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    NEQ             reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    LT              reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    LE              reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    GT              reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    GE              reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    LBRACE          reduce using rule 47 (func_call -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 47 (func_call -> ID LPAREN RPAREN .)


state 70

    (51) id_list -> expression . more_expressions
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (52) more_expressions -> . COMMA expression more_expressions
    (53) more_expressions -> .

    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    COMMA           shift and go to state 110
    RPAREN          reduce using rule 53 (more_expressions -> .)
    RBRACKET        reduce using rule 53 (more_expressions -> .)

    more_expressions               shift and go to state 109

state 71

    (49) func_call_list -> ID LBRACKET DOTDOT . RBRACKET

    RBRACKET        shift and go to state 111


state 72

    (50) func_call_list -> ID LBRACKET NUMBER . DOTDOT NUMBER RBRACKET
    (82) factor -> ID LBRACKET NUMBER . RBRACKET

    DOTDOT          shift and go to state 112
    RBRACKET        shift and go to state 113


state 73

    (65) expression -> expression PLUS term .
    (70) term -> term . TIMES factor
    (71) term -> term . DIVIDE factor
    (72) term -> term . MOD factor

    PLUS            reduce using rule 65 (expression -> expression PLUS term .)
    MINUS           reduce using rule 65 (expression -> expression PLUS term .)
    CONST           reduce using rule 65 (expression -> expression PLUS term .)
    FN              reduce using rule 65 (expression -> expression PLUS term .)
    $end            reduce using rule 65 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 65 (expression -> expression PLUS term .)
    COMMA           reduce using rule 65 (expression -> expression PLUS term .)
    EQ              reduce using rule 65 (expression -> expression PLUS term .)
    NEQ             reduce using rule 65 (expression -> expression PLUS term .)
    LT              reduce using rule 65 (expression -> expression PLUS term .)
    LE              reduce using rule 65 (expression -> expression PLUS term .)
    GT              reduce using rule 65 (expression -> expression PLUS term .)
    GE              reduce using rule 65 (expression -> expression PLUS term .)
    AND             reduce using rule 65 (expression -> expression PLUS term .)
    OR              reduce using rule 65 (expression -> expression PLUS term .)
    MUT             reduce using rule 65 (expression -> expression PLUS term .)
    ID              reduce using rule 65 (expression -> expression PLUS term .)
    IF              reduce using rule 65 (expression -> expression PLUS term .)
    FOR             reduce using rule 65 (expression -> expression PLUS term .)
    BREAK           reduce using rule 65 (expression -> expression PLUS term .)
    RETURN          reduce using rule 65 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 65 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 65 (expression -> expression PLUS term .)
    LBRACE          reduce using rule 65 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 65 (expression -> expression PLUS term .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    MOD             shift and go to state 53


state 74

    (74) factor -> ID .
    (82) factor -> ID . LBRACKET NUMBER RBRACKET

    TIMES           reduce using rule 74 (factor -> ID .)
    DIVIDE          reduce using rule 74 (factor -> ID .)
    MOD             reduce using rule 74 (factor -> ID .)
    PLUS            reduce using rule 74 (factor -> ID .)
    MINUS           reduce using rule 74 (factor -> ID .)
    CONST           reduce using rule 74 (factor -> ID .)
    FN              reduce using rule 74 (factor -> ID .)
    $end            reduce using rule 74 (factor -> ID .)
    RPAREN          reduce using rule 74 (factor -> ID .)
    COMMA           reduce using rule 74 (factor -> ID .)
    EQ              reduce using rule 74 (factor -> ID .)
    NEQ             reduce using rule 74 (factor -> ID .)
    LT              reduce using rule 74 (factor -> ID .)
    LE              reduce using rule 74 (factor -> ID .)
    GT              reduce using rule 74 (factor -> ID .)
    GE              reduce using rule 74 (factor -> ID .)
    AND             reduce using rule 74 (factor -> ID .)
    OR              reduce using rule 74 (factor -> ID .)
    MUT             reduce using rule 74 (factor -> ID .)
    ID              reduce using rule 74 (factor -> ID .)
    IF              reduce using rule 74 (factor -> ID .)
    FOR             reduce using rule 74 (factor -> ID .)
    BREAK           reduce using rule 74 (factor -> ID .)
    RETURN          reduce using rule 74 (factor -> ID .)
    RBRACE          reduce using rule 74 (factor -> ID .)
    RBRACKET        reduce using rule 74 (factor -> ID .)
    LBRACE          reduce using rule 74 (factor -> ID .)
    SEMICOLON       reduce using rule 74 (factor -> ID .)
    LBRACKET        shift and go to state 114


state 75

    (66) expression -> expression MINUS term .
    (70) term -> term . TIMES factor
    (71) term -> term . DIVIDE factor
    (72) term -> term . MOD factor

    PLUS            reduce using rule 66 (expression -> expression MINUS term .)
    MINUS           reduce using rule 66 (expression -> expression MINUS term .)
    CONST           reduce using rule 66 (expression -> expression MINUS term .)
    FN              reduce using rule 66 (expression -> expression MINUS term .)
    $end            reduce using rule 66 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 66 (expression -> expression MINUS term .)
    COMMA           reduce using rule 66 (expression -> expression MINUS term .)
    EQ              reduce using rule 66 (expression -> expression MINUS term .)
    NEQ             reduce using rule 66 (expression -> expression MINUS term .)
    LT              reduce using rule 66 (expression -> expression MINUS term .)
    LE              reduce using rule 66 (expression -> expression MINUS term .)
    GT              reduce using rule 66 (expression -> expression MINUS term .)
    GE              reduce using rule 66 (expression -> expression MINUS term .)
    AND             reduce using rule 66 (expression -> expression MINUS term .)
    OR              reduce using rule 66 (expression -> expression MINUS term .)
    MUT             reduce using rule 66 (expression -> expression MINUS term .)
    ID              reduce using rule 66 (expression -> expression MINUS term .)
    IF              reduce using rule 66 (expression -> expression MINUS term .)
    FOR             reduce using rule 66 (expression -> expression MINUS term .)
    BREAK           reduce using rule 66 (expression -> expression MINUS term .)
    RETURN          reduce using rule 66 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 66 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 66 (expression -> expression MINUS term .)
    LBRACE          reduce using rule 66 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 66 (expression -> expression MINUS term .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    MOD             shift and go to state 53


state 76

    (70) term -> term TIMES factor .

    TIMES           reduce using rule 70 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 70 (term -> term TIMES factor .)
    MOD             reduce using rule 70 (term -> term TIMES factor .)
    PLUS            reduce using rule 70 (term -> term TIMES factor .)
    MINUS           reduce using rule 70 (term -> term TIMES factor .)
    CONST           reduce using rule 70 (term -> term TIMES factor .)
    FN              reduce using rule 70 (term -> term TIMES factor .)
    $end            reduce using rule 70 (term -> term TIMES factor .)
    RPAREN          reduce using rule 70 (term -> term TIMES factor .)
    COMMA           reduce using rule 70 (term -> term TIMES factor .)
    EQ              reduce using rule 70 (term -> term TIMES factor .)
    NEQ             reduce using rule 70 (term -> term TIMES factor .)
    LT              reduce using rule 70 (term -> term TIMES factor .)
    LE              reduce using rule 70 (term -> term TIMES factor .)
    GT              reduce using rule 70 (term -> term TIMES factor .)
    GE              reduce using rule 70 (term -> term TIMES factor .)
    AND             reduce using rule 70 (term -> term TIMES factor .)
    OR              reduce using rule 70 (term -> term TIMES factor .)
    MUT             reduce using rule 70 (term -> term TIMES factor .)
    ID              reduce using rule 70 (term -> term TIMES factor .)
    IF              reduce using rule 70 (term -> term TIMES factor .)
    FOR             reduce using rule 70 (term -> term TIMES factor .)
    BREAK           reduce using rule 70 (term -> term TIMES factor .)
    RETURN          reduce using rule 70 (term -> term TIMES factor .)
    RBRACE          reduce using rule 70 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 70 (term -> term TIMES factor .)
    LBRACE          reduce using rule 70 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 70 (term -> term TIMES factor .)


state 77

    (71) term -> term DIVIDE factor .

    TIMES           reduce using rule 71 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 71 (term -> term DIVIDE factor .)
    MOD             reduce using rule 71 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 71 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 71 (term -> term DIVIDE factor .)
    CONST           reduce using rule 71 (term -> term DIVIDE factor .)
    FN              reduce using rule 71 (term -> term DIVIDE factor .)
    $end            reduce using rule 71 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 71 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 71 (term -> term DIVIDE factor .)
    EQ              reduce using rule 71 (term -> term DIVIDE factor .)
    NEQ             reduce using rule 71 (term -> term DIVIDE factor .)
    LT              reduce using rule 71 (term -> term DIVIDE factor .)
    LE              reduce using rule 71 (term -> term DIVIDE factor .)
    GT              reduce using rule 71 (term -> term DIVIDE factor .)
    GE              reduce using rule 71 (term -> term DIVIDE factor .)
    AND             reduce using rule 71 (term -> term DIVIDE factor .)
    OR              reduce using rule 71 (term -> term DIVIDE factor .)
    MUT             reduce using rule 71 (term -> term DIVIDE factor .)
    ID              reduce using rule 71 (term -> term DIVIDE factor .)
    IF              reduce using rule 71 (term -> term DIVIDE factor .)
    FOR             reduce using rule 71 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 71 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 71 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 71 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 71 (term -> term DIVIDE factor .)
    LBRACE          reduce using rule 71 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 71 (term -> term DIVIDE factor .)


state 78

    (72) term -> term MOD factor .

    TIMES           reduce using rule 72 (term -> term MOD factor .)
    DIVIDE          reduce using rule 72 (term -> term MOD factor .)
    MOD             reduce using rule 72 (term -> term MOD factor .)
    PLUS            reduce using rule 72 (term -> term MOD factor .)
    MINUS           reduce using rule 72 (term -> term MOD factor .)
    CONST           reduce using rule 72 (term -> term MOD factor .)
    FN              reduce using rule 72 (term -> term MOD factor .)
    $end            reduce using rule 72 (term -> term MOD factor .)
    RPAREN          reduce using rule 72 (term -> term MOD factor .)
    COMMA           reduce using rule 72 (term -> term MOD factor .)
    EQ              reduce using rule 72 (term -> term MOD factor .)
    NEQ             reduce using rule 72 (term -> term MOD factor .)
    LT              reduce using rule 72 (term -> term MOD factor .)
    LE              reduce using rule 72 (term -> term MOD factor .)
    GT              reduce using rule 72 (term -> term MOD factor .)
    GE              reduce using rule 72 (term -> term MOD factor .)
    AND             reduce using rule 72 (term -> term MOD factor .)
    OR              reduce using rule 72 (term -> term MOD factor .)
    MUT             reduce using rule 72 (term -> term MOD factor .)
    ID              reduce using rule 72 (term -> term MOD factor .)
    IF              reduce using rule 72 (term -> term MOD factor .)
    FOR             reduce using rule 72 (term -> term MOD factor .)
    BREAK           reduce using rule 72 (term -> term MOD factor .)
    RETURN          reduce using rule 72 (term -> term MOD factor .)
    RBRACE          reduce using rule 72 (term -> term MOD factor .)
    RBRACKET        reduce using rule 72 (term -> term MOD factor .)
    LBRACE          reduce using rule 72 (term -> term MOD factor .)
    SEMICOLON       reduce using rule 72 (term -> term MOD factor .)


state 79

    (81) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    CONST           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    FN              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    MUT             reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 81 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 81 (factor -> LPAREN expression RPAREN .)


state 80

    (89) size_of_expression -> SIZEOF LPAREN expression . RPAREN
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    RPAREN          shift and go to state 115
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 81

    (90) size_of_expression -> SIZEOF LPAREN type . RPAREN

    RPAREN          shift and go to state 116


state 82

    (10) function_definition -> FN ID LPAREN params RPAREN block_statement .

    CONST           reduce using rule 10 (function_definition -> FN ID LPAREN params RPAREN block_statement .)
    FN              reduce using rule 10 (function_definition -> FN ID LPAREN params RPAREN block_statement .)
    $end            reduce using rule 10 (function_definition -> FN ID LPAREN params RPAREN block_statement .)


state 83

    (11) function_definition -> FN ID LPAREN params RPAREN type . block_statement
    (23) block_statement -> . LBRACE statements RBRACE
    (24) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 67

    block_statement                shift and go to state 117

state 84

    (14) more_params -> COMMA param . more_params
    (14) more_params -> . COMMA param more_params
    (15) more_params -> .

    COMMA           shift and go to state 65
    RPAREN          reduce using rule 15 (more_params -> .)

    more_params                    shift and go to state 118

state 85

    (23) block_statement -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 119


state 86

    (24) block_statement -> LBRACE RBRACE .

    CONST           reduce using rule 24 (block_statement -> LBRACE RBRACE .)
    FN              reduce using rule 24 (block_statement -> LBRACE RBRACE .)
    $end            reduce using rule 24 (block_statement -> LBRACE RBRACE .)
    ELSE            reduce using rule 24 (block_statement -> LBRACE RBRACE .)
    MUT             reduce using rule 24 (block_statement -> LBRACE RBRACE .)
    ID              reduce using rule 24 (block_statement -> LBRACE RBRACE .)
    IF              reduce using rule 24 (block_statement -> LBRACE RBRACE .)
    FOR             reduce using rule 24 (block_statement -> LBRACE RBRACE .)
    BREAK           reduce using rule 24 (block_statement -> LBRACE RBRACE .)
    RETURN          reduce using rule 24 (block_statement -> LBRACE RBRACE .)
    RBRACE          reduce using rule 24 (block_statement -> LBRACE RBRACE .)


state 87

    (25) statements -> statement . statements
    (26) statements -> statement .
    (25) statements -> . statement statements
    (26) statements -> . statement
    (27) statement -> . var_statement
    (28) statement -> . var_assignment
    (29) statement -> . func_call
    (30) statement -> . if_statement
    (31) statement -> . for_statement
    (32) statement -> . break_statement
    (33) statement -> . return_statement
    (34) statement -> . list_statement
    (35) statement -> . list_assignment
    (36) statement -> . increment_rule
    (37) statement -> . assignment
    (38) var_statement -> . declaration_imutable
    (39) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (40) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (41) var_assignment -> . ID ASSIGN expression
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (54) if_statement -> . IF expression_relacional block_statement
    (55) if_statement -> . IF expression_relacional block_statement elseop
    (58) for_statement -> . FOR ID IN expression block_statement
    (59) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement
    (60) for_statement -> . FOR expression_relacional block_statement
    (63) break_statement -> . BREAK
    (64) return_statement -> . RETURN expression
    (42) list_statement -> . declaration_imutable_list
    (43) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (44) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (45) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (102) assignment -> . ID PLUS_ASSIGN expression
    (103) assignment -> . ID MINUS_ASSIGN expression
    (104) assignment -> . ID TIMES_ASSIGN expression
    (105) assignment -> . ID DIVIDE_ASSIGN expression
    (106) assignment -> . ID MOD_ASSIGN expression
    (107) assignment -> . ID BIT_AND_ASSIGN expression
    (108) assignment -> . ID BIT_OR_ASSIGN expression
    (109) assignment -> . ID BIT_XOR_ASSIGN expression
    (110) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (111) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (61) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (62) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 26 (statements -> statement .)
    MUT             shift and go to state 100
    CONST           shift and go to state 102
    ID              shift and go to state 101
    IF              shift and go to state 103
    FOR             shift and go to state 104
    BREAK           shift and go to state 105
    RETURN          shift and go to state 106

    statement                      shift and go to state 87
    statements                     shift and go to state 120
    var_statement                  shift and go to state 88
    var_assignment                 shift and go to state 89
    func_call                      shift and go to state 90
    if_statement                   shift and go to state 91
    for_statement                  shift and go to state 92
    break_statement                shift and go to state 93
    return_statement               shift and go to state 94
    list_statement                 shift and go to state 95
    list_assignment                shift and go to state 96
    increment_rule                 shift and go to state 97
    assignment                     shift and go to state 98
    declaration_imutable           shift and go to state 99
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 107

state 88

    (27) statement -> var_statement .

    MUT             reduce using rule 27 (statement -> var_statement .)
    CONST           reduce using rule 27 (statement -> var_statement .)
    ID              reduce using rule 27 (statement -> var_statement .)
    IF              reduce using rule 27 (statement -> var_statement .)
    FOR             reduce using rule 27 (statement -> var_statement .)
    BREAK           reduce using rule 27 (statement -> var_statement .)
    RETURN          reduce using rule 27 (statement -> var_statement .)
    RBRACE          reduce using rule 27 (statement -> var_statement .)


state 89

    (28) statement -> var_assignment .

    MUT             reduce using rule 28 (statement -> var_assignment .)
    CONST           reduce using rule 28 (statement -> var_assignment .)
    ID              reduce using rule 28 (statement -> var_assignment .)
    IF              reduce using rule 28 (statement -> var_assignment .)
    FOR             reduce using rule 28 (statement -> var_assignment .)
    BREAK           reduce using rule 28 (statement -> var_assignment .)
    RETURN          reduce using rule 28 (statement -> var_assignment .)
    RBRACE          reduce using rule 28 (statement -> var_assignment .)


state 90

    (29) statement -> func_call .

    MUT             reduce using rule 29 (statement -> func_call .)
    CONST           reduce using rule 29 (statement -> func_call .)
    ID              reduce using rule 29 (statement -> func_call .)
    IF              reduce using rule 29 (statement -> func_call .)
    FOR             reduce using rule 29 (statement -> func_call .)
    BREAK           reduce using rule 29 (statement -> func_call .)
    RETURN          reduce using rule 29 (statement -> func_call .)
    RBRACE          reduce using rule 29 (statement -> func_call .)


state 91

    (30) statement -> if_statement .

    MUT             reduce using rule 30 (statement -> if_statement .)
    CONST           reduce using rule 30 (statement -> if_statement .)
    ID              reduce using rule 30 (statement -> if_statement .)
    IF              reduce using rule 30 (statement -> if_statement .)
    FOR             reduce using rule 30 (statement -> if_statement .)
    BREAK           reduce using rule 30 (statement -> if_statement .)
    RETURN          reduce using rule 30 (statement -> if_statement .)
    RBRACE          reduce using rule 30 (statement -> if_statement .)


state 92

    (31) statement -> for_statement .

    MUT             reduce using rule 31 (statement -> for_statement .)
    CONST           reduce using rule 31 (statement -> for_statement .)
    ID              reduce using rule 31 (statement -> for_statement .)
    IF              reduce using rule 31 (statement -> for_statement .)
    FOR             reduce using rule 31 (statement -> for_statement .)
    BREAK           reduce using rule 31 (statement -> for_statement .)
    RETURN          reduce using rule 31 (statement -> for_statement .)
    RBRACE          reduce using rule 31 (statement -> for_statement .)


state 93

    (32) statement -> break_statement .

    MUT             reduce using rule 32 (statement -> break_statement .)
    CONST           reduce using rule 32 (statement -> break_statement .)
    ID              reduce using rule 32 (statement -> break_statement .)
    IF              reduce using rule 32 (statement -> break_statement .)
    FOR             reduce using rule 32 (statement -> break_statement .)
    BREAK           reduce using rule 32 (statement -> break_statement .)
    RETURN          reduce using rule 32 (statement -> break_statement .)
    RBRACE          reduce using rule 32 (statement -> break_statement .)


state 94

    (33) statement -> return_statement .

    MUT             reduce using rule 33 (statement -> return_statement .)
    CONST           reduce using rule 33 (statement -> return_statement .)
    ID              reduce using rule 33 (statement -> return_statement .)
    IF              reduce using rule 33 (statement -> return_statement .)
    FOR             reduce using rule 33 (statement -> return_statement .)
    BREAK           reduce using rule 33 (statement -> return_statement .)
    RETURN          reduce using rule 33 (statement -> return_statement .)
    RBRACE          reduce using rule 33 (statement -> return_statement .)


state 95

    (34) statement -> list_statement .

    MUT             reduce using rule 34 (statement -> list_statement .)
    CONST           reduce using rule 34 (statement -> list_statement .)
    ID              reduce using rule 34 (statement -> list_statement .)
    IF              reduce using rule 34 (statement -> list_statement .)
    FOR             reduce using rule 34 (statement -> list_statement .)
    BREAK           reduce using rule 34 (statement -> list_statement .)
    RETURN          reduce using rule 34 (statement -> list_statement .)
    RBRACE          reduce using rule 34 (statement -> list_statement .)


state 96

    (35) statement -> list_assignment .

    MUT             reduce using rule 35 (statement -> list_assignment .)
    CONST           reduce using rule 35 (statement -> list_assignment .)
    ID              reduce using rule 35 (statement -> list_assignment .)
    IF              reduce using rule 35 (statement -> list_assignment .)
    FOR             reduce using rule 35 (statement -> list_assignment .)
    BREAK           reduce using rule 35 (statement -> list_assignment .)
    RETURN          reduce using rule 35 (statement -> list_assignment .)
    RBRACE          reduce using rule 35 (statement -> list_assignment .)


state 97

    (36) statement -> increment_rule .

    MUT             reduce using rule 36 (statement -> increment_rule .)
    CONST           reduce using rule 36 (statement -> increment_rule .)
    ID              reduce using rule 36 (statement -> increment_rule .)
    IF              reduce using rule 36 (statement -> increment_rule .)
    FOR             reduce using rule 36 (statement -> increment_rule .)
    BREAK           reduce using rule 36 (statement -> increment_rule .)
    RETURN          reduce using rule 36 (statement -> increment_rule .)
    RBRACE          reduce using rule 36 (statement -> increment_rule .)


state 98

    (37) statement -> assignment .

    MUT             reduce using rule 37 (statement -> assignment .)
    CONST           reduce using rule 37 (statement -> assignment .)
    ID              reduce using rule 37 (statement -> assignment .)
    IF              reduce using rule 37 (statement -> assignment .)
    FOR             reduce using rule 37 (statement -> assignment .)
    BREAK           reduce using rule 37 (statement -> assignment .)
    RETURN          reduce using rule 37 (statement -> assignment .)
    RBRACE          reduce using rule 37 (statement -> assignment .)


state 99

    (38) var_statement -> declaration_imutable .

    MUT             reduce using rule 38 (var_statement -> declaration_imutable .)
    CONST           reduce using rule 38 (var_statement -> declaration_imutable .)
    ID              reduce using rule 38 (var_statement -> declaration_imutable .)
    IF              reduce using rule 38 (var_statement -> declaration_imutable .)
    FOR             reduce using rule 38 (var_statement -> declaration_imutable .)
    BREAK           reduce using rule 38 (var_statement -> declaration_imutable .)
    RETURN          reduce using rule 38 (var_statement -> declaration_imutable .)
    RBRACE          reduce using rule 38 (var_statement -> declaration_imutable .)


state 100

    (39) var_statement -> MUT . ID DECLARE_ASSIGN expression
    (43) list_statement -> MUT . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (44) list_statement -> MUT . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type

    ID              shift and go to state 121


state 101

    (41) var_assignment -> ID . ASSIGN expression
    (46) func_call -> ID . LPAREN id_list RPAREN
    (47) func_call -> ID . LPAREN RPAREN
    (45) list_assignment -> ID . LBRACKET NUMBER RBRACKET ASSIGN expression
    (91) increment_rule -> ID . INCREMENT
    (92) increment_rule -> ID . DECREMENT
    (102) assignment -> ID . PLUS_ASSIGN expression
    (103) assignment -> ID . MINUS_ASSIGN expression
    (104) assignment -> ID . TIMES_ASSIGN expression
    (105) assignment -> ID . DIVIDE_ASSIGN expression
    (106) assignment -> ID . MOD_ASSIGN expression
    (107) assignment -> ID . BIT_AND_ASSIGN expression
    (108) assignment -> ID . BIT_OR_ASSIGN expression
    (109) assignment -> ID . BIT_XOR_ASSIGN expression
    (110) assignment -> ID . BIT_LSHIFT_ASSIGN expression
    (111) assignment -> ID . BIT_RSHIFT_ASSIGN expression
    (61) declaration_imutable -> ID . DECLARE_ASSIGN expression
    (49) func_call_list -> ID . LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> ID . LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (62) declaration_imutable_list -> ID . DECLARE_ASSIGN LBRACKET id_list RBRACKET

    ASSIGN          shift and go to state 122
    LPAREN          shift and go to state 47
    LBRACKET        shift and go to state 123
    INCREMENT       shift and go to state 45
    DECREMENT       shift and go to state 46
    PLUS_ASSIGN     shift and go to state 124
    MINUS_ASSIGN    shift and go to state 125
    TIMES_ASSIGN    shift and go to state 126
    DIVIDE_ASSIGN   shift and go to state 127
    MOD_ASSIGN      shift and go to state 128
    BIT_AND_ASSIGN  shift and go to state 129
    BIT_OR_ASSIGN   shift and go to state 130
    BIT_XOR_ASSIGN  shift and go to state 131
    BIT_LSHIFT_ASSIGN shift and go to state 132
    BIT_RSHIFT_ASSIGN shift and go to state 133
    DECLARE_ASSIGN  shift and go to state 134


state 102

    (40) var_statement -> CONST . ID DECLARE_ASSIGN expression

    ID              shift and go to state 135


state 103

    (54) if_statement -> IF . expression_relacional block_statement
    (55) if_statement -> IF . expression_relacional block_statement elseop
    (93) expression_relacional -> . expression EQ expression
    (94) expression_relacional -> . expression NEQ expression
    (95) expression_relacional -> . expression LT expression
    (96) expression_relacional -> . expression LE expression
    (97) expression_relacional -> . expression GT expression
    (98) expression_relacional -> . expression GE expression
    (99) expression_relacional -> . expression AND expression
    (100) expression_relacional -> . expression OR expression
    (101) expression_relacional -> . NOT expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    NOT             shift and go to state 138
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression_relacional          shift and go to state 136
    expression                     shift and go to state 137
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 104

    (58) for_statement -> FOR . ID IN expression block_statement
    (59) for_statement -> FOR . declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement
    (60) for_statement -> FOR . expression_relacional block_statement
    (61) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (93) expression_relacional -> . expression EQ expression
    (94) expression_relacional -> . expression NEQ expression
    (95) expression_relacional -> . expression LT expression
    (96) expression_relacional -> . expression LE expression
    (97) expression_relacional -> . expression GT expression
    (98) expression_relacional -> . expression GE expression
    (99) expression_relacional -> . expression AND expression
    (100) expression_relacional -> . expression OR expression
    (101) expression_relacional -> . NOT expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 139
    NOT             shift and go to state 138
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 137
    declaration_imutable           shift and go to state 140
    expression_relacional          shift and go to state 141
    increment_rule                 shift and go to state 23
    term                           shift and go to state 22
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 105

    (63) break_statement -> BREAK .

    MUT             reduce using rule 63 (break_statement -> BREAK .)
    CONST           reduce using rule 63 (break_statement -> BREAK .)
    ID              reduce using rule 63 (break_statement -> BREAK .)
    IF              reduce using rule 63 (break_statement -> BREAK .)
    FOR             reduce using rule 63 (break_statement -> BREAK .)
    BREAK           reduce using rule 63 (break_statement -> BREAK .)
    RETURN          reduce using rule 63 (break_statement -> BREAK .)
    RBRACE          reduce using rule 63 (break_statement -> BREAK .)


state 106

    (64) return_statement -> RETURN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 142
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 107

    (42) list_statement -> declaration_imutable_list .

    MUT             reduce using rule 42 (list_statement -> declaration_imutable_list .)
    CONST           reduce using rule 42 (list_statement -> declaration_imutable_list .)
    ID              reduce using rule 42 (list_statement -> declaration_imutable_list .)
    IF              reduce using rule 42 (list_statement -> declaration_imutable_list .)
    FOR             reduce using rule 42 (list_statement -> declaration_imutable_list .)
    BREAK           reduce using rule 42 (list_statement -> declaration_imutable_list .)
    RETURN          reduce using rule 42 (list_statement -> declaration_imutable_list .)
    RBRACE          reduce using rule 42 (list_statement -> declaration_imutable_list .)


state 108

    (46) func_call -> ID LPAREN id_list RPAREN .

    PLUS            reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    MINUS           reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    CONST           reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    FN              reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    $end            reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    RPAREN          reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    COMMA           reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    MUT             reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    ID              reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    IF              reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    FOR             reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    BREAK           reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    RETURN          reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    RBRACE          reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    EQ              reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    NEQ             reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    LT              reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    LE              reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    GT              reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    GE              reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    AND             reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    OR              reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    RBRACKET        reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    LBRACE          reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)
    SEMICOLON       reduce using rule 46 (func_call -> ID LPAREN id_list RPAREN .)


state 109

    (51) id_list -> expression more_expressions .

    RPAREN          reduce using rule 51 (id_list -> expression more_expressions .)
    RBRACKET        reduce using rule 51 (id_list -> expression more_expressions .)


state 110

    (52) more_expressions -> COMMA . expression more_expressions
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 143
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 111

    (49) func_call_list -> ID LBRACKET DOTDOT RBRACKET .

    PLUS            reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    MINUS           reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    CONST           reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    FN              reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    $end            reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RPAREN          reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    COMMA           reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    MUT             reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    ID              reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    IF              reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    FOR             reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    BREAK           reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RETURN          reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RBRACE          reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    EQ              reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    NEQ             reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    LT              reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    LE              reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    GT              reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    GE              reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    AND             reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    OR              reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RBRACKET        reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    LBRACE          reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    SEMICOLON       reduce using rule 49 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)


state 112

    (50) func_call_list -> ID LBRACKET NUMBER DOTDOT . NUMBER RBRACKET

    NUMBER          shift and go to state 144


state 113

    (82) factor -> ID LBRACKET NUMBER RBRACKET .

    TIMES           reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    MOD             reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    CONST           reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    FN              reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    $end            reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RPAREN          reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    COMMA           reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    EQ              reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    NEQ             reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    LT              reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    LE              reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    GT              reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    GE              reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    AND             reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    OR              reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    MUT             reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    ID              reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    IF              reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    FOR             reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    BREAK           reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RETURN          reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RBRACE          reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RBRACKET        reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    LBRACE          reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)
    SEMICOLON       reduce using rule 82 (factor -> ID LBRACKET NUMBER RBRACKET .)


state 114

    (82) factor -> ID LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 145


state 115

    (89) size_of_expression -> SIZEOF LPAREN expression RPAREN .

    TIMES           reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    MOD             reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    PLUS            reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    MINUS           reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    CONST           reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    FN              reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    $end            reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    RPAREN          reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    COMMA           reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    EQ              reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    NEQ             reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    LT              reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    LE              reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    GT              reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    GE              reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    AND             reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    OR              reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    MUT             reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    ID              reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    IF              reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    FOR             reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    BREAK           reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    RETURN          reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    RBRACE          reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    LBRACE          reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 89 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)


state 116

    (90) size_of_expression -> SIZEOF LPAREN type RPAREN .

    TIMES           reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    DIVIDE          reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    MOD             reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    PLUS            reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    MINUS           reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    CONST           reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    FN              reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    $end            reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    RPAREN          reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    COMMA           reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    EQ              reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    NEQ             reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    LT              reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    LE              reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    GT              reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    GE              reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    AND             reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    OR              reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    MUT             reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    ID              reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    IF              reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    FOR             reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    BREAK           reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    RETURN          reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    RBRACE          reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    RBRACKET        reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    LBRACE          reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    SEMICOLON       reduce using rule 90 (size_of_expression -> SIZEOF LPAREN type RPAREN .)


state 117

    (11) function_definition -> FN ID LPAREN params RPAREN type block_statement .

    CONST           reduce using rule 11 (function_definition -> FN ID LPAREN params RPAREN type block_statement .)
    FN              reduce using rule 11 (function_definition -> FN ID LPAREN params RPAREN type block_statement .)
    $end            reduce using rule 11 (function_definition -> FN ID LPAREN params RPAREN type block_statement .)


state 118

    (14) more_params -> COMMA param more_params .

    RPAREN          reduce using rule 14 (more_params -> COMMA param more_params .)


state 119

    (23) block_statement -> LBRACE statements RBRACE .

    CONST           reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)
    FN              reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)
    $end            reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)
    MUT             reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)
    ID              reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)
    IF              reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)
    FOR             reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)
    BREAK           reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 23 (block_statement -> LBRACE statements RBRACE .)


state 120

    (25) statements -> statement statements .

    RBRACE          reduce using rule 25 (statements -> statement statements .)


state 121

    (39) var_statement -> MUT ID . DECLARE_ASSIGN expression
    (43) list_statement -> MUT ID . DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (44) list_statement -> MUT ID . DECLARE_ASSIGN LBRACKET id_list RBRACKET type

    DECLARE_ASSIGN  shift and go to state 146


state 122

    (41) var_assignment -> ID ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 147
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 123

    (45) list_assignment -> ID LBRACKET . NUMBER RBRACKET ASSIGN expression
    (49) func_call_list -> ID LBRACKET . DOTDOT RBRACKET
    (50) func_call_list -> ID LBRACKET . NUMBER DOTDOT NUMBER RBRACKET

    NUMBER          shift and go to state 148
    DOTDOT          shift and go to state 71


state 124

    (102) assignment -> ID PLUS_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 149
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 125

    (103) assignment -> ID MINUS_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 150
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 126

    (104) assignment -> ID TIMES_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 151
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 127

    (105) assignment -> ID DIVIDE_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 152
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 128

    (106) assignment -> ID MOD_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 153
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 129

    (107) assignment -> ID BIT_AND_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 154
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 130

    (108) assignment -> ID BIT_OR_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 155
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 131

    (109) assignment -> ID BIT_XOR_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 156
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 132

    (110) assignment -> ID BIT_LSHIFT_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 157
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 133

    (111) assignment -> ID BIT_RSHIFT_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 158
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 134

    (61) declaration_imutable -> ID DECLARE_ASSIGN . expression
    (62) declaration_imutable_list -> ID DECLARE_ASSIGN . LBRACKET id_list RBRACKET
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    LBRACKET        shift and go to state 160
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 159
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 135

    (40) var_statement -> CONST ID . DECLARE_ASSIGN expression

    DECLARE_ASSIGN  shift and go to state 161


state 136

    (54) if_statement -> IF expression_relacional . block_statement
    (55) if_statement -> IF expression_relacional . block_statement elseop
    (23) block_statement -> . LBRACE statements RBRACE
    (24) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 67

    block_statement                shift and go to state 162

state 137

    (93) expression_relacional -> expression . EQ expression
    (94) expression_relacional -> expression . NEQ expression
    (95) expression_relacional -> expression . LT expression
    (96) expression_relacional -> expression . LE expression
    (97) expression_relacional -> expression . GT expression
    (98) expression_relacional -> expression . GE expression
    (99) expression_relacional -> expression . AND expression
    (100) expression_relacional -> expression . OR expression
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    EQ              shift and go to state 163
    NEQ             shift and go to state 164
    LT              shift and go to state 165
    LE              shift and go to state 166
    GT              shift and go to state 167
    GE              shift and go to state 168
    AND             shift and go to state 169
    OR              shift and go to state 170
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 138

    (101) expression_relacional -> NOT . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 171
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 139

    (58) for_statement -> FOR ID . IN expression block_statement
    (61) declaration_imutable -> ID . DECLARE_ASSIGN expression
    (91) increment_rule -> ID . INCREMENT
    (92) increment_rule -> ID . DECREMENT
    (46) func_call -> ID . LPAREN id_list RPAREN
    (47) func_call -> ID . LPAREN RPAREN
    (49) func_call_list -> ID . LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> ID . LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> ID .
    (82) factor -> ID . LBRACKET NUMBER RBRACKET

    IN              shift and go to state 172
    DECLARE_ASSIGN  shift and go to state 173
    INCREMENT       shift and go to state 45
    DECREMENT       shift and go to state 46
    LPAREN          shift and go to state 47
    LBRACKET        shift and go to state 48
    TIMES           reduce using rule 74 (factor -> ID .)
    DIVIDE          reduce using rule 74 (factor -> ID .)
    MOD             reduce using rule 74 (factor -> ID .)
    EQ              reduce using rule 74 (factor -> ID .)
    NEQ             reduce using rule 74 (factor -> ID .)
    LT              reduce using rule 74 (factor -> ID .)
    LE              reduce using rule 74 (factor -> ID .)
    GT              reduce using rule 74 (factor -> ID .)
    GE              reduce using rule 74 (factor -> ID .)
    AND             reduce using rule 74 (factor -> ID .)
    OR              reduce using rule 74 (factor -> ID .)
    PLUS            reduce using rule 74 (factor -> ID .)
    MINUS           reduce using rule 74 (factor -> ID .)


state 140

    (59) for_statement -> FOR declaration_imutable . SEMICOLON expression_relacional SEMICOLON increment_rule block_statement

    SEMICOLON       shift and go to state 174


state 141

    (60) for_statement -> FOR expression_relacional . block_statement
    (23) block_statement -> . LBRACE statements RBRACE
    (24) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 67

    block_statement                shift and go to state 175

state 142

    (64) return_statement -> RETURN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 64 (return_statement -> RETURN expression .)
    CONST           reduce using rule 64 (return_statement -> RETURN expression .)
    ID              reduce using rule 64 (return_statement -> RETURN expression .)
    IF              reduce using rule 64 (return_statement -> RETURN expression .)
    FOR             reduce using rule 64 (return_statement -> RETURN expression .)
    BREAK           reduce using rule 64 (return_statement -> RETURN expression .)
    RETURN          reduce using rule 64 (return_statement -> RETURN expression .)
    RBRACE          reduce using rule 64 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 143

    (52) more_expressions -> COMMA expression . more_expressions
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (52) more_expressions -> . COMMA expression more_expressions
    (53) more_expressions -> .

    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    COMMA           shift and go to state 110
    RPAREN          reduce using rule 53 (more_expressions -> .)
    RBRACKET        reduce using rule 53 (more_expressions -> .)

    more_expressions               shift and go to state 176

state 144

    (50) func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER . RBRACKET

    RBRACKET        shift and go to state 177


state 145

    (82) factor -> ID LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 113


state 146

    (39) var_statement -> MUT ID DECLARE_ASSIGN . expression
    (43) list_statement -> MUT ID DECLARE_ASSIGN . LBRACKET id_list RBRACKET
    (44) list_statement -> MUT ID DECLARE_ASSIGN . LBRACKET id_list RBRACKET type
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    LBRACKET        shift and go to state 179
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 178
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 147

    (41) var_assignment -> ID ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 41 (var_assignment -> ID ASSIGN expression .)
    CONST           reduce using rule 41 (var_assignment -> ID ASSIGN expression .)
    ID              reduce using rule 41 (var_assignment -> ID ASSIGN expression .)
    IF              reduce using rule 41 (var_assignment -> ID ASSIGN expression .)
    FOR             reduce using rule 41 (var_assignment -> ID ASSIGN expression .)
    BREAK           reduce using rule 41 (var_assignment -> ID ASSIGN expression .)
    RETURN          reduce using rule 41 (var_assignment -> ID ASSIGN expression .)
    RBRACE          reduce using rule 41 (var_assignment -> ID ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 148

    (45) list_assignment -> ID LBRACKET NUMBER . RBRACKET ASSIGN expression
    (50) func_call_list -> ID LBRACKET NUMBER . DOTDOT NUMBER RBRACKET

    RBRACKET        shift and go to state 180
    DOTDOT          shift and go to state 112


state 149

    (102) assignment -> ID PLUS_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 102 (assignment -> ID PLUS_ASSIGN expression .)
    CONST           reduce using rule 102 (assignment -> ID PLUS_ASSIGN expression .)
    ID              reduce using rule 102 (assignment -> ID PLUS_ASSIGN expression .)
    IF              reduce using rule 102 (assignment -> ID PLUS_ASSIGN expression .)
    FOR             reduce using rule 102 (assignment -> ID PLUS_ASSIGN expression .)
    BREAK           reduce using rule 102 (assignment -> ID PLUS_ASSIGN expression .)
    RETURN          reduce using rule 102 (assignment -> ID PLUS_ASSIGN expression .)
    RBRACE          reduce using rule 102 (assignment -> ID PLUS_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 150

    (103) assignment -> ID MINUS_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 103 (assignment -> ID MINUS_ASSIGN expression .)
    CONST           reduce using rule 103 (assignment -> ID MINUS_ASSIGN expression .)
    ID              reduce using rule 103 (assignment -> ID MINUS_ASSIGN expression .)
    IF              reduce using rule 103 (assignment -> ID MINUS_ASSIGN expression .)
    FOR             reduce using rule 103 (assignment -> ID MINUS_ASSIGN expression .)
    BREAK           reduce using rule 103 (assignment -> ID MINUS_ASSIGN expression .)
    RETURN          reduce using rule 103 (assignment -> ID MINUS_ASSIGN expression .)
    RBRACE          reduce using rule 103 (assignment -> ID MINUS_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 151

    (104) assignment -> ID TIMES_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 104 (assignment -> ID TIMES_ASSIGN expression .)
    CONST           reduce using rule 104 (assignment -> ID TIMES_ASSIGN expression .)
    ID              reduce using rule 104 (assignment -> ID TIMES_ASSIGN expression .)
    IF              reduce using rule 104 (assignment -> ID TIMES_ASSIGN expression .)
    FOR             reduce using rule 104 (assignment -> ID TIMES_ASSIGN expression .)
    BREAK           reduce using rule 104 (assignment -> ID TIMES_ASSIGN expression .)
    RETURN          reduce using rule 104 (assignment -> ID TIMES_ASSIGN expression .)
    RBRACE          reduce using rule 104 (assignment -> ID TIMES_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 152

    (105) assignment -> ID DIVIDE_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 105 (assignment -> ID DIVIDE_ASSIGN expression .)
    CONST           reduce using rule 105 (assignment -> ID DIVIDE_ASSIGN expression .)
    ID              reduce using rule 105 (assignment -> ID DIVIDE_ASSIGN expression .)
    IF              reduce using rule 105 (assignment -> ID DIVIDE_ASSIGN expression .)
    FOR             reduce using rule 105 (assignment -> ID DIVIDE_ASSIGN expression .)
    BREAK           reduce using rule 105 (assignment -> ID DIVIDE_ASSIGN expression .)
    RETURN          reduce using rule 105 (assignment -> ID DIVIDE_ASSIGN expression .)
    RBRACE          reduce using rule 105 (assignment -> ID DIVIDE_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 153

    (106) assignment -> ID MOD_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 106 (assignment -> ID MOD_ASSIGN expression .)
    CONST           reduce using rule 106 (assignment -> ID MOD_ASSIGN expression .)
    ID              reduce using rule 106 (assignment -> ID MOD_ASSIGN expression .)
    IF              reduce using rule 106 (assignment -> ID MOD_ASSIGN expression .)
    FOR             reduce using rule 106 (assignment -> ID MOD_ASSIGN expression .)
    BREAK           reduce using rule 106 (assignment -> ID MOD_ASSIGN expression .)
    RETURN          reduce using rule 106 (assignment -> ID MOD_ASSIGN expression .)
    RBRACE          reduce using rule 106 (assignment -> ID MOD_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 154

    (107) assignment -> ID BIT_AND_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 107 (assignment -> ID BIT_AND_ASSIGN expression .)
    CONST           reduce using rule 107 (assignment -> ID BIT_AND_ASSIGN expression .)
    ID              reduce using rule 107 (assignment -> ID BIT_AND_ASSIGN expression .)
    IF              reduce using rule 107 (assignment -> ID BIT_AND_ASSIGN expression .)
    FOR             reduce using rule 107 (assignment -> ID BIT_AND_ASSIGN expression .)
    BREAK           reduce using rule 107 (assignment -> ID BIT_AND_ASSIGN expression .)
    RETURN          reduce using rule 107 (assignment -> ID BIT_AND_ASSIGN expression .)
    RBRACE          reduce using rule 107 (assignment -> ID BIT_AND_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 155

    (108) assignment -> ID BIT_OR_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 108 (assignment -> ID BIT_OR_ASSIGN expression .)
    CONST           reduce using rule 108 (assignment -> ID BIT_OR_ASSIGN expression .)
    ID              reduce using rule 108 (assignment -> ID BIT_OR_ASSIGN expression .)
    IF              reduce using rule 108 (assignment -> ID BIT_OR_ASSIGN expression .)
    FOR             reduce using rule 108 (assignment -> ID BIT_OR_ASSIGN expression .)
    BREAK           reduce using rule 108 (assignment -> ID BIT_OR_ASSIGN expression .)
    RETURN          reduce using rule 108 (assignment -> ID BIT_OR_ASSIGN expression .)
    RBRACE          reduce using rule 108 (assignment -> ID BIT_OR_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 156

    (109) assignment -> ID BIT_XOR_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 109 (assignment -> ID BIT_XOR_ASSIGN expression .)
    CONST           reduce using rule 109 (assignment -> ID BIT_XOR_ASSIGN expression .)
    ID              reduce using rule 109 (assignment -> ID BIT_XOR_ASSIGN expression .)
    IF              reduce using rule 109 (assignment -> ID BIT_XOR_ASSIGN expression .)
    FOR             reduce using rule 109 (assignment -> ID BIT_XOR_ASSIGN expression .)
    BREAK           reduce using rule 109 (assignment -> ID BIT_XOR_ASSIGN expression .)
    RETURN          reduce using rule 109 (assignment -> ID BIT_XOR_ASSIGN expression .)
    RBRACE          reduce using rule 109 (assignment -> ID BIT_XOR_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 157

    (110) assignment -> ID BIT_LSHIFT_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 110 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    CONST           reduce using rule 110 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    ID              reduce using rule 110 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    IF              reduce using rule 110 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    FOR             reduce using rule 110 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    BREAK           reduce using rule 110 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    RETURN          reduce using rule 110 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    RBRACE          reduce using rule 110 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 158

    (111) assignment -> ID BIT_RSHIFT_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 111 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    CONST           reduce using rule 111 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    ID              reduce using rule 111 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    IF              reduce using rule 111 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    FOR             reduce using rule 111 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    BREAK           reduce using rule 111 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    RETURN          reduce using rule 111 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    RBRACE          reduce using rule 111 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 159

    (61) declaration_imutable -> ID DECLARE_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 61 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    CONST           reduce using rule 61 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    ID              reduce using rule 61 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    IF              reduce using rule 61 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    FOR             reduce using rule 61 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    BREAK           reduce using rule 61 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    RETURN          reduce using rule 61 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    RBRACE          reduce using rule 61 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    SEMICOLON       reduce using rule 61 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 160

    (62) declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET . id_list RBRACKET
    (51) id_list -> . expression more_expressions
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    id_list                        shift and go to state 181
    expression                     shift and go to state 70
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 161

    (40) var_statement -> CONST ID DECLARE_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 182
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 162

    (54) if_statement -> IF expression_relacional block_statement .
    (55) if_statement -> IF expression_relacional block_statement . elseop
    (56) elseop -> . ELSE if_statement
    (57) elseop -> . ELSE block_statement

    MUT             reduce using rule 54 (if_statement -> IF expression_relacional block_statement .)
    CONST           reduce using rule 54 (if_statement -> IF expression_relacional block_statement .)
    ID              reduce using rule 54 (if_statement -> IF expression_relacional block_statement .)
    IF              reduce using rule 54 (if_statement -> IF expression_relacional block_statement .)
    FOR             reduce using rule 54 (if_statement -> IF expression_relacional block_statement .)
    BREAK           reduce using rule 54 (if_statement -> IF expression_relacional block_statement .)
    RETURN          reduce using rule 54 (if_statement -> IF expression_relacional block_statement .)
    RBRACE          reduce using rule 54 (if_statement -> IF expression_relacional block_statement .)
    ELSE            shift and go to state 184

    elseop                         shift and go to state 183

state 163

    (93) expression_relacional -> expression EQ . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 185
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 164

    (94) expression_relacional -> expression NEQ . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 186
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 165

    (95) expression_relacional -> expression LT . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 187
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 166

    (96) expression_relacional -> expression LE . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 188
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 167

    (97) expression_relacional -> expression GT . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 189
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 168

    (98) expression_relacional -> expression GE . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 190
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 169

    (99) expression_relacional -> expression AND . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 191
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 170

    (100) expression_relacional -> expression OR . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 192
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 171

    (101) expression_relacional -> NOT expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    LBRACE          reduce using rule 101 (expression_relacional -> NOT expression .)
    SEMICOLON       reduce using rule 101 (expression_relacional -> NOT expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 172

    (58) for_statement -> FOR ID IN . expression block_statement
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 193
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 173

    (61) declaration_imutable -> ID DECLARE_ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 159
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 174

    (59) for_statement -> FOR declaration_imutable SEMICOLON . expression_relacional SEMICOLON increment_rule block_statement
    (93) expression_relacional -> . expression EQ expression
    (94) expression_relacional -> . expression NEQ expression
    (95) expression_relacional -> . expression LT expression
    (96) expression_relacional -> . expression LE expression
    (97) expression_relacional -> . expression GT expression
    (98) expression_relacional -> . expression GE expression
    (99) expression_relacional -> . expression AND expression
    (100) expression_relacional -> . expression OR expression
    (101) expression_relacional -> . NOT expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    NOT             shift and go to state 138
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression_relacional          shift and go to state 194
    increment_rule                 shift and go to state 23
    expression                     shift and go to state 137
    term                           shift and go to state 22
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 175

    (60) for_statement -> FOR expression_relacional block_statement .

    MUT             reduce using rule 60 (for_statement -> FOR expression_relacional block_statement .)
    CONST           reduce using rule 60 (for_statement -> FOR expression_relacional block_statement .)
    ID              reduce using rule 60 (for_statement -> FOR expression_relacional block_statement .)
    IF              reduce using rule 60 (for_statement -> FOR expression_relacional block_statement .)
    FOR             reduce using rule 60 (for_statement -> FOR expression_relacional block_statement .)
    BREAK           reduce using rule 60 (for_statement -> FOR expression_relacional block_statement .)
    RETURN          reduce using rule 60 (for_statement -> FOR expression_relacional block_statement .)
    RBRACE          reduce using rule 60 (for_statement -> FOR expression_relacional block_statement .)


state 176

    (52) more_expressions -> COMMA expression more_expressions .

    RPAREN          reduce using rule 52 (more_expressions -> COMMA expression more_expressions .)
    RBRACKET        reduce using rule 52 (more_expressions -> COMMA expression more_expressions .)


state 177

    (50) func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .

    PLUS            reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    MINUS           reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    CONST           reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    FN              reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    $end            reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RPAREN          reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    COMMA           reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    MUT             reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    ID              reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    IF              reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    FOR             reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    BREAK           reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RETURN          reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RBRACE          reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    EQ              reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    NEQ             reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    LT              reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    LE              reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    GT              reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    GE              reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    AND             reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    OR              reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RBRACKET        reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    LBRACE          reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    SEMICOLON       reduce using rule 50 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)


state 178

    (39) var_statement -> MUT ID DECLARE_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 39 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    CONST           reduce using rule 39 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    ID              reduce using rule 39 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    IF              reduce using rule 39 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    FOR             reduce using rule 39 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    BREAK           reduce using rule 39 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    RETURN          reduce using rule 39 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    RBRACE          reduce using rule 39 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 179

    (43) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET . id_list RBRACKET
    (44) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET . id_list RBRACKET type
    (51) id_list -> . expression more_expressions
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    id_list                        shift and go to state 195
    expression                     shift and go to state 70
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 180

    (45) list_assignment -> ID LBRACKET NUMBER RBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 196


state 181

    (62) declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list . RBRACKET

    RBRACKET        shift and go to state 197


state 182

    (40) var_statement -> CONST ID DECLARE_ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 40 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    CONST           reduce using rule 40 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    ID              reduce using rule 40 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    IF              reduce using rule 40 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    FOR             reduce using rule 40 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    BREAK           reduce using rule 40 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    RETURN          reduce using rule 40 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    RBRACE          reduce using rule 40 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 183

    (55) if_statement -> IF expression_relacional block_statement elseop .

    MUT             reduce using rule 55 (if_statement -> IF expression_relacional block_statement elseop .)
    CONST           reduce using rule 55 (if_statement -> IF expression_relacional block_statement elseop .)
    ID              reduce using rule 55 (if_statement -> IF expression_relacional block_statement elseop .)
    IF              reduce using rule 55 (if_statement -> IF expression_relacional block_statement elseop .)
    FOR             reduce using rule 55 (if_statement -> IF expression_relacional block_statement elseop .)
    BREAK           reduce using rule 55 (if_statement -> IF expression_relacional block_statement elseop .)
    RETURN          reduce using rule 55 (if_statement -> IF expression_relacional block_statement elseop .)
    RBRACE          reduce using rule 55 (if_statement -> IF expression_relacional block_statement elseop .)


state 184

    (56) elseop -> ELSE . if_statement
    (57) elseop -> ELSE . block_statement
    (54) if_statement -> . IF expression_relacional block_statement
    (55) if_statement -> . IF expression_relacional block_statement elseop
    (23) block_statement -> . LBRACE statements RBRACE
    (24) block_statement -> . LBRACE RBRACE

    IF              shift and go to state 103
    LBRACE          shift and go to state 67

    if_statement                   shift and go to state 198
    block_statement                shift and go to state 199

state 185

    (93) expression_relacional -> expression EQ expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    LBRACE          reduce using rule 93 (expression_relacional -> expression EQ expression .)
    SEMICOLON       reduce using rule 93 (expression_relacional -> expression EQ expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 186

    (94) expression_relacional -> expression NEQ expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    LBRACE          reduce using rule 94 (expression_relacional -> expression NEQ expression .)
    SEMICOLON       reduce using rule 94 (expression_relacional -> expression NEQ expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 187

    (95) expression_relacional -> expression LT expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    LBRACE          reduce using rule 95 (expression_relacional -> expression LT expression .)
    SEMICOLON       reduce using rule 95 (expression_relacional -> expression LT expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 188

    (96) expression_relacional -> expression LE expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    LBRACE          reduce using rule 96 (expression_relacional -> expression LE expression .)
    SEMICOLON       reduce using rule 96 (expression_relacional -> expression LE expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 189

    (97) expression_relacional -> expression GT expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    LBRACE          reduce using rule 97 (expression_relacional -> expression GT expression .)
    SEMICOLON       reduce using rule 97 (expression_relacional -> expression GT expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 190

    (98) expression_relacional -> expression GE expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    LBRACE          reduce using rule 98 (expression_relacional -> expression GE expression .)
    SEMICOLON       reduce using rule 98 (expression_relacional -> expression GE expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 191

    (99) expression_relacional -> expression AND expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    LBRACE          reduce using rule 99 (expression_relacional -> expression AND expression .)
    SEMICOLON       reduce using rule 99 (expression_relacional -> expression AND expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 192

    (100) expression_relacional -> expression OR expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    LBRACE          reduce using rule 100 (expression_relacional -> expression OR expression .)
    SEMICOLON       reduce using rule 100 (expression_relacional -> expression OR expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 193

    (58) for_statement -> FOR ID IN expression . block_statement
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term
    (23) block_statement -> . LBRACE statements RBRACE
    (24) block_statement -> . LBRACE RBRACE

    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    LBRACE          shift and go to state 67

    block_statement                shift and go to state 200

state 194

    (59) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional . SEMICOLON increment_rule block_statement

    SEMICOLON       shift and go to state 201


state 195

    (43) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list . RBRACKET
    (44) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list . RBRACKET type

    RBRACKET        shift and go to state 202


state 196

    (45) list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN . expression
    (65) expression -> . expression PLUS term
    (66) expression -> . expression MINUS term
    (67) expression -> . increment_rule
    (68) expression -> . func_call
    (69) expression -> . term
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT
    (46) func_call -> . ID LPAREN id_list RPAREN
    (47) func_call -> . ID LPAREN RPAREN
    (48) func_call -> . func_call_list
    (70) term -> . term TIMES factor
    (71) term -> . term DIVIDE factor
    (72) term -> . term MOD factor
    (73) term -> . factor
    (49) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (50) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (74) factor -> . ID
    (75) factor -> . NUMBER
    (76) factor -> . NUMBERFLOAT
    (77) factor -> . WORD
    (78) factor -> . TRUE
    (79) factor -> . FALSE
    (80) factor -> . RUNEVALOR
    (81) factor -> . LPAREN expression RPAREN
    (82) factor -> . ID LBRACKET NUMBER RBRACKET
    (83) factor -> . NOTACAOCIENTIFICA
    (84) factor -> . BINARY
    (85) factor -> . OCTAL
    (86) factor -> . HEX
    (87) factor -> . INTERPOLATIONSTRING
    (88) factor -> . size_of_expression
    (89) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (90) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 203
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 197

    (62) declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .

    MUT             reduce using rule 62 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    CONST           reduce using rule 62 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    ID              reduce using rule 62 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    IF              reduce using rule 62 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    FOR             reduce using rule 62 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    BREAK           reduce using rule 62 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RETURN          reduce using rule 62 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RBRACE          reduce using rule 62 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)


state 198

    (56) elseop -> ELSE if_statement .

    MUT             reduce using rule 56 (elseop -> ELSE if_statement .)
    CONST           reduce using rule 56 (elseop -> ELSE if_statement .)
    ID              reduce using rule 56 (elseop -> ELSE if_statement .)
    IF              reduce using rule 56 (elseop -> ELSE if_statement .)
    FOR             reduce using rule 56 (elseop -> ELSE if_statement .)
    BREAK           reduce using rule 56 (elseop -> ELSE if_statement .)
    RETURN          reduce using rule 56 (elseop -> ELSE if_statement .)
    RBRACE          reduce using rule 56 (elseop -> ELSE if_statement .)


state 199

    (57) elseop -> ELSE block_statement .

    MUT             reduce using rule 57 (elseop -> ELSE block_statement .)
    CONST           reduce using rule 57 (elseop -> ELSE block_statement .)
    ID              reduce using rule 57 (elseop -> ELSE block_statement .)
    IF              reduce using rule 57 (elseop -> ELSE block_statement .)
    FOR             reduce using rule 57 (elseop -> ELSE block_statement .)
    BREAK           reduce using rule 57 (elseop -> ELSE block_statement .)
    RETURN          reduce using rule 57 (elseop -> ELSE block_statement .)
    RBRACE          reduce using rule 57 (elseop -> ELSE block_statement .)


state 200

    (58) for_statement -> FOR ID IN expression block_statement .

    MUT             reduce using rule 58 (for_statement -> FOR ID IN expression block_statement .)
    CONST           reduce using rule 58 (for_statement -> FOR ID IN expression block_statement .)
    ID              reduce using rule 58 (for_statement -> FOR ID IN expression block_statement .)
    IF              reduce using rule 58 (for_statement -> FOR ID IN expression block_statement .)
    FOR             reduce using rule 58 (for_statement -> FOR ID IN expression block_statement .)
    BREAK           reduce using rule 58 (for_statement -> FOR ID IN expression block_statement .)
    RETURN          reduce using rule 58 (for_statement -> FOR ID IN expression block_statement .)
    RBRACE          reduce using rule 58 (for_statement -> FOR ID IN expression block_statement .)


state 201

    (59) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON . increment_rule block_statement
    (91) increment_rule -> . ID INCREMENT
    (92) increment_rule -> . ID DECREMENT

    ID              shift and go to state 205

    increment_rule                 shift and go to state 204

state 202

    (43) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .
    (44) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET . type
    (17) type -> . INT
    (18) type -> . F32
    (19) type -> . F64
    (20) type -> . STRING
    (21) type -> . BOOL
    (22) type -> . RUNE

    MUT             reduce using rule 43 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    CONST           reduce using rule 43 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    ID              reduce using rule 43 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    IF              reduce using rule 43 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    FOR             reduce using rule 43 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    BREAK           reduce using rule 43 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RETURN          reduce using rule 43 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RBRACE          reduce using rule 43 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    INT             shift and go to state 57
    F32             shift and go to state 58
    F64             shift and go to state 59
    STRING          shift and go to state 60
    BOOL            shift and go to state 61
    RUNE            shift and go to state 62

    type                           shift and go to state 206

state 203

    (45) list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .
    (65) expression -> expression . PLUS term
    (66) expression -> expression . MINUS term

    MUT             reduce using rule 45 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    CONST           reduce using rule 45 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    ID              reduce using rule 45 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    IF              reduce using rule 45 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    FOR             reduce using rule 45 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    BREAK           reduce using rule 45 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    RETURN          reduce using rule 45 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    RBRACE          reduce using rule 45 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 204

    (59) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule . block_statement
    (23) block_statement -> . LBRACE statements RBRACE
    (24) block_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 67

    block_statement                shift and go to state 207

state 205

    (91) increment_rule -> ID . INCREMENT
    (92) increment_rule -> ID . DECREMENT

    INCREMENT       shift and go to state 45
    DECREMENT       shift and go to state 46


state 206

    (44) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .

    MUT             reduce using rule 44 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    CONST           reduce using rule 44 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    ID              reduce using rule 44 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    IF              reduce using rule 44 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    FOR             reduce using rule 44 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    BREAK           reduce using rule 44 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    RETURN          reduce using rule 44 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    RBRACE          reduce using rule 44 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)


state 207

    (59) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement .

    MUT             reduce using rule 59 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement .)
    CONST           reduce using rule 59 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement .)
    ID              reduce using rule 59 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement .)
    IF              reduce using rule 59 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement .)
    FOR             reduce using rule 59 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement .)
    BREAK           reduce using rule 59 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement .)
    RETURN          reduce using rule 59 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement .)
    RBRACE          reduce using rule 59 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement .)

