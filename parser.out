Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    ASPASDUPLAS
    ASPASSIMPLES
    BREAK
    COLON
    DEFER
    DOLLAR
    DOT
    ENUM
    EXCLAMATION
    GLOBAL
    IS
    ISREFTYPE
    QUESTION
    SIZEOF
    TYPE
    TYPEOF
    UNION

Grammar

Rule 0     S' -> program
Rule 1     program -> program_Import function_definition
Rule 2     program -> function_definition
Rule 3     program_Import -> IMPORT ID program_Import
Rule 4     program_Import -> IMPORT ID
Rule 5     function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
Rule 6     function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
Rule 7     function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main
Rule 8     function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
Rule 9     function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
Rule 10    function_definition_without_main -> <empty>
Rule 11    params -> param more_params
Rule 12    more_params -> COMMA param more_params
Rule 13    more_params -> <empty>
Rule 14    param -> ID type
Rule 15    type -> INT
Rule 16    type -> F32
Rule 17    type -> F64
Rule 18    type -> STRING
Rule 19    type -> BOOL
Rule 20    type -> RUNE
Rule 21    block_statement -> statement
Rule 22    statement -> var_statement statement
Rule 23    statement -> var_assignment statement
Rule 24    statement -> func_call statement
Rule 25    statement -> if_statement statement
Rule 26    statement -> for_statement statement
Rule 27    statement -> return_statement
Rule 28    statement -> <empty>
Rule 29    statement -> list_statement statement
Rule 30    statement -> list_assignment statement
Rule 31    statement -> increment_rule statement
Rule 32    statement -> assignment statement
Rule 33    var_statement -> declaration_imutable
Rule 34    var_statement -> MUT ID DECLARE_ASSIGN expression
Rule 35    var_statement -> CONST ID DECLARE_ASSIGN expression
Rule 36    var_assignment -> ID ASSIGN expression
Rule 37    list_statement -> declaration_imutable_list
Rule 38    list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
Rule 39    list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
Rule 40    list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression
Rule 41    func_call -> ID LPAREN id_list RPAREN
Rule 42    func_call -> ID LPAREN RPAREN
Rule 43    func_call -> func_call_list
Rule 44    func_call_list -> ID LBRACKET DOTDOT RBRACKET
Rule 45    func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
Rule 46    id_list -> expression more_expressions
Rule 47    more_expressions -> COMMA expression more_expressions
Rule 48    more_expressions -> <empty>
Rule 49    if_statement -> IF expression_relacional LBRACE statement RBRACE
Rule 50    if_statement -> IF expression_relacional LBRACE statement RBRACE elseop
Rule 51    elseop -> ELSE if_statement
Rule 52    elseop -> ELSE LBRACE statement RBRACE
Rule 53    for_statement -> FOR ID IN expression LBRACE statement RBRACE
Rule 54    for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
Rule 55    for_statement -> FOR expression_relacional LBRACE statement RBRACE
Rule 56    declaration_imutable -> ID DECLARE_ASSIGN expression
Rule 57    declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
Rule 58    return_statement -> RETURN expression
Rule 59    expression -> expression PLUS term
Rule 60    expression -> expression MINUS term
Rule 61    expression -> increment_rule
Rule 62    expression -> func_call
Rule 63    expression -> term
Rule 64    term -> term TIMES factor
Rule 65    term -> term DIVIDE factor
Rule 66    term -> term MOD factor
Rule 67    term -> factor
Rule 68    factor -> ID
Rule 69    factor -> NUMBER
Rule 70    factor -> NUMBERFLOAT
Rule 71    factor -> STRING
Rule 72    factor -> TRUE
Rule 73    factor -> FALSE
Rule 74    factor -> RUNE
Rule 75    factor -> LPAREN expression RPAREN
Rule 76    factor -> ID LBRACKET NUMBER RBRACKET
Rule 77    factor -> NOTACAOCIENTIFICA
Rule 78    factor -> BINARY
Rule 79    factor -> OCTAL
Rule 80    factor -> HEX
Rule 81    increment_rule -> ID INCREMENT
Rule 82    increment_rule -> ID DECREMENT
Rule 83    expression_relacional -> expression EQ expression
Rule 84    expression_relacional -> expression NEQ expression
Rule 85    expression_relacional -> expression LT expression
Rule 86    expression_relacional -> expression LE expression
Rule 87    expression_relacional -> expression GT expression
Rule 88    expression_relacional -> expression GE expression
Rule 89    expression_relacional -> expression AND expression
Rule 90    expression_relacional -> expression OR expression
Rule 91    expression_relacional -> NOT expression
Rule 92    assignment -> ID PLUS_ASSIGN expression
Rule 93    assignment -> ID MINUS_ASSIGN expression
Rule 94    assignment -> ID TIMES_ASSIGN expression
Rule 95    assignment -> ID DIVIDE_ASSIGN expression
Rule 96    assignment -> ID MOD_ASSIGN expression
Rule 97    assignment -> ID BIT_AND_ASSIGN expression
Rule 98    assignment -> ID BIT_OR_ASSIGN expression
Rule 99    assignment -> ID BIT_XOR_ASSIGN expression
Rule 100   assignment -> ID BIT_LSHIFT_ASSIGN expression
Rule 101   assignment -> ID BIT_RSHIFT_ASSIGN expression

Terminals, with rules where they appear

AND                  : 89
AS                   : 
ASPASDUPLAS          : 
ASPASSIMPLES         : 
ASSIGN               : 36 40
BINARY               : 78
BIT_AND_ASSIGN       : 97
BIT_LSHIFT_ASSIGN    : 100
BIT_OR_ASSIGN        : 98
BIT_RSHIFT_ASSIGN    : 101
BIT_XOR_ASSIGN       : 99
BOOL                 : 19
BREAK                : 
COLON                : 
COMMA                : 12 47
CONST                : 35
DECLARE_ASSIGN       : 34 35 38 39 56 57
DECREMENT            : 82
DEFER                : 
DIVIDE               : 65
DIVIDE_ASSIGN        : 95
DOLLAR               : 
DOT                  : 
DOTDOT               : 44 45
ELSE                 : 51 52
ENUM                 : 
EQ                   : 83
EXCLAMATION          : 
F32                  : 16
F64                  : 17
FALSE                : 73
FN                   : 5 6 7 8 9
FOR                  : 53 54 55
GE                   : 88
GLOBAL               : 
GT                   : 87
HEX                  : 80
ID                   : 3 4 5 6 8 9 14 34 35 36 38 39 40 41 42 44 45 53 56 57 68 76 81 82 92 93 94 95 96 97 98 99 100 101
IF                   : 49 50
IMPORT               : 3 4
IN                   : 53
INCREMENT            : 81
INT                  : 15
IS                   : 
ISREFTYPE            : 
LBRACE               : 5 6 7 8 9 49 50 52 53 54 55
LBRACKET             : 38 39 40 44 45 57 76
LE                   : 86
LPAREN               : 5 6 7 8 9 41 42 75
LT                   : 85
MAIN                 : 7
MINUS                : 60
MINUS_ASSIGN         : 93
MOD                  : 66
MOD_ASSIGN           : 96
MUT                  : 34 38 39
NEQ                  : 84
NOT                  : 91
NOTACAOCIENTIFICA    : 77
NUMBER               : 39 40 45 45 69 76
NUMBERFLOAT          : 70
OCTAL                : 79
OR                   : 90
PLUS                 : 59
PLUS_ASSIGN          : 92
QUESTION             : 
RBRACE               : 5 6 7 8 9 49 50 52 53 54 55
RBRACKET             : 38 39 40 44 45 57 76
RETURN               : 58
RPAREN               : 5 6 7 8 9 41 42 75
RUNE                 : 20 74
SEMICOLON            : 54 54
SIZEOF               : 
STRING               : 18 71
TIMES                : 64
TIMES_ASSIGN         : 94
TRUE                 : 72
TYPE                 : 
TYPEOF               : 
UNION                : 
error                : 

Nonterminals, with rules where they appear

assignment           : 32
block_statement      : 5 6 7 8 9
declaration_imutable : 33 54
declaration_imutable_list : 37
elseop               : 50
expression           : 34 35 36 40 46 47 53 56 58 59 60 75 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 92 93 94 95 96 97 98 99 100 101
expression_relacional : 49 50 54 55
factor               : 64 65 66 67
for_statement        : 26
func_call            : 24 62
func_call_list       : 43
function_definition  : 1 2 5 6
function_definition_without_main : 7 8 9
id_list              : 38 41 57
if_statement         : 25 51
increment_rule       : 31 54 61
list_assignment      : 30
list_statement       : 29
more_expressions     : 46 47
more_params          : 11 12
param                : 11 12
params               : 5 6 8 9
program              : 0
program_Import       : 1 3
return_statement     : 27
statement            : 21 22 23 24 25 26 29 30 31 32 49 50 52 53 54 55
term                 : 59 60 63 64 65 66
type                 : 6 9 14 39
var_assignment       : 23
var_statement        : 22

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_Import function_definition
    (2) program -> . function_definition
    (3) program_Import -> . IMPORT ID program_Import
    (4) program_Import -> . IMPORT ID
    (5) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
    (7) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    IMPORT          shift and go to state 4
    FN              shift and go to state 5

    program                        shift and go to state 1
    program_Import                 shift and go to state 2
    function_definition            shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> program_Import . function_definition
    (5) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
    (7) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    FN              shift and go to state 5

    function_definition            shift and go to state 6

state 3

    (2) program -> function_definition .

    $end            reduce using rule 2 (program -> function_definition .)


state 4

    (3) program_Import -> IMPORT . ID program_Import
    (4) program_Import -> IMPORT . ID

    ID              shift and go to state 7


state 5

    (5) function_definition -> FN . ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> FN . ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
    (7) function_definition -> FN . MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    ID              shift and go to state 8
    MAIN            shift and go to state 9


state 6

    (1) program -> program_Import function_definition .

    $end            reduce using rule 1 (program -> program_Import function_definition .)


state 7

    (3) program_Import -> IMPORT ID . program_Import
    (4) program_Import -> IMPORT ID .
    (3) program_Import -> . IMPORT ID program_Import
    (4) program_Import -> . IMPORT ID

    FN              reduce using rule 4 (program_Import -> IMPORT ID .)
    IMPORT          shift and go to state 4

    program_Import                 shift and go to state 10

state 8

    (5) function_definition -> FN ID . LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> FN ID . LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition

    LPAREN          shift and go to state 11


state 9

    (7) function_definition -> FN MAIN . LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    LPAREN          shift and go to state 12


state 10

    (3) program_Import -> IMPORT ID program_Import .

    FN              reduce using rule 3 (program_Import -> IMPORT ID program_Import .)


state 11

    (5) function_definition -> FN ID LPAREN . params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> FN ID LPAREN . params RPAREN type LBRACE block_statement RBRACE function_definition
    (11) params -> . param more_params
    (14) param -> . ID type

    ID              shift and go to state 13

    params                         shift and go to state 14
    param                          shift and go to state 15

state 12

    (7) function_definition -> FN MAIN LPAREN . RPAREN LBRACE block_statement RBRACE function_definition_without_main

    RPAREN          shift and go to state 16


state 13

    (14) param -> ID . type
    (15) type -> . INT
    (16) type -> . F32
    (17) type -> . F64
    (18) type -> . STRING
    (19) type -> . BOOL
    (20) type -> . RUNE

    INT             shift and go to state 18
    F32             shift and go to state 19
    F64             shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    RUNE            shift and go to state 23

    type                           shift and go to state 17

state 14

    (5) function_definition -> FN ID LPAREN params . RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> FN ID LPAREN params . RPAREN type LBRACE block_statement RBRACE function_definition

    RPAREN          shift and go to state 24


state 15

    (11) params -> param . more_params
    (12) more_params -> . COMMA param more_params
    (13) more_params -> .

    COMMA           shift and go to state 26
    RPAREN          reduce using rule 13 (more_params -> .)

    more_params                    shift and go to state 25

state 16

    (7) function_definition -> FN MAIN LPAREN RPAREN . LBRACE block_statement RBRACE function_definition_without_main

    LBRACE          shift and go to state 27


state 17

    (14) param -> ID type .

    COMMA           reduce using rule 14 (param -> ID type .)
    RPAREN          reduce using rule 14 (param -> ID type .)


state 18

    (15) type -> INT .

    COMMA           reduce using rule 15 (type -> INT .)
    RPAREN          reduce using rule 15 (type -> INT .)
    LBRACE          reduce using rule 15 (type -> INT .)
    MUT             reduce using rule 15 (type -> INT .)
    CONST           reduce using rule 15 (type -> INT .)
    ID              reduce using rule 15 (type -> INT .)
    IF              reduce using rule 15 (type -> INT .)
    FOR             reduce using rule 15 (type -> INT .)
    RETURN          reduce using rule 15 (type -> INT .)
    RBRACE          reduce using rule 15 (type -> INT .)


state 19

    (16) type -> F32 .

    COMMA           reduce using rule 16 (type -> F32 .)
    RPAREN          reduce using rule 16 (type -> F32 .)
    LBRACE          reduce using rule 16 (type -> F32 .)
    MUT             reduce using rule 16 (type -> F32 .)
    CONST           reduce using rule 16 (type -> F32 .)
    ID              reduce using rule 16 (type -> F32 .)
    IF              reduce using rule 16 (type -> F32 .)
    FOR             reduce using rule 16 (type -> F32 .)
    RETURN          reduce using rule 16 (type -> F32 .)
    RBRACE          reduce using rule 16 (type -> F32 .)


state 20

    (17) type -> F64 .

    COMMA           reduce using rule 17 (type -> F64 .)
    RPAREN          reduce using rule 17 (type -> F64 .)
    LBRACE          reduce using rule 17 (type -> F64 .)
    MUT             reduce using rule 17 (type -> F64 .)
    CONST           reduce using rule 17 (type -> F64 .)
    ID              reduce using rule 17 (type -> F64 .)
    IF              reduce using rule 17 (type -> F64 .)
    FOR             reduce using rule 17 (type -> F64 .)
    RETURN          reduce using rule 17 (type -> F64 .)
    RBRACE          reduce using rule 17 (type -> F64 .)


state 21

    (18) type -> STRING .

    COMMA           reduce using rule 18 (type -> STRING .)
    RPAREN          reduce using rule 18 (type -> STRING .)
    LBRACE          reduce using rule 18 (type -> STRING .)
    MUT             reduce using rule 18 (type -> STRING .)
    CONST           reduce using rule 18 (type -> STRING .)
    ID              reduce using rule 18 (type -> STRING .)
    IF              reduce using rule 18 (type -> STRING .)
    FOR             reduce using rule 18 (type -> STRING .)
    RETURN          reduce using rule 18 (type -> STRING .)
    RBRACE          reduce using rule 18 (type -> STRING .)


state 22

    (19) type -> BOOL .

    COMMA           reduce using rule 19 (type -> BOOL .)
    RPAREN          reduce using rule 19 (type -> BOOL .)
    LBRACE          reduce using rule 19 (type -> BOOL .)
    MUT             reduce using rule 19 (type -> BOOL .)
    CONST           reduce using rule 19 (type -> BOOL .)
    ID              reduce using rule 19 (type -> BOOL .)
    IF              reduce using rule 19 (type -> BOOL .)
    FOR             reduce using rule 19 (type -> BOOL .)
    RETURN          reduce using rule 19 (type -> BOOL .)
    RBRACE          reduce using rule 19 (type -> BOOL .)


state 23

    (20) type -> RUNE .

    COMMA           reduce using rule 20 (type -> RUNE .)
    RPAREN          reduce using rule 20 (type -> RUNE .)
    LBRACE          reduce using rule 20 (type -> RUNE .)
    MUT             reduce using rule 20 (type -> RUNE .)
    CONST           reduce using rule 20 (type -> RUNE .)
    ID              reduce using rule 20 (type -> RUNE .)
    IF              reduce using rule 20 (type -> RUNE .)
    FOR             reduce using rule 20 (type -> RUNE .)
    RETURN          reduce using rule 20 (type -> RUNE .)
    RBRACE          reduce using rule 20 (type -> RUNE .)


state 24

    (5) function_definition -> FN ID LPAREN params RPAREN . LBRACE block_statement RBRACE function_definition
    (6) function_definition -> FN ID LPAREN params RPAREN . type LBRACE block_statement RBRACE function_definition
    (15) type -> . INT
    (16) type -> . F32
    (17) type -> . F64
    (18) type -> . STRING
    (19) type -> . BOOL
    (20) type -> . RUNE

    LBRACE          shift and go to state 28
    INT             shift and go to state 18
    F32             shift and go to state 19
    F64             shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    RUNE            shift and go to state 23

    type                           shift and go to state 29

state 25

    (11) params -> param more_params .

    RPAREN          reduce using rule 11 (params -> param more_params .)


state 26

    (12) more_params -> COMMA . param more_params
    (14) param -> . ID type

    ID              shift and go to state 13

    param                          shift and go to state 30

state 27

    (7) function_definition -> FN MAIN LPAREN RPAREN LBRACE . block_statement RBRACE function_definition_without_main
    (21) block_statement -> . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    block_statement                shift and go to state 31
    statement                      shift and go to state 32
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 28

    (5) function_definition -> FN ID LPAREN params RPAREN LBRACE . block_statement RBRACE function_definition
    (21) block_statement -> . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    block_statement                shift and go to state 52
    statement                      shift and go to state 32
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 29

    (6) function_definition -> FN ID LPAREN params RPAREN type . LBRACE block_statement RBRACE function_definition

    LBRACE          shift and go to state 53


state 30

    (12) more_params -> COMMA param . more_params
    (12) more_params -> . COMMA param more_params
    (13) more_params -> .

    COMMA           shift and go to state 26
    RPAREN          reduce using rule 13 (more_params -> .)

    more_params                    shift and go to state 54

state 31

    (7) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement . RBRACE function_definition_without_main

    RBRACE          shift and go to state 55


state 32

    (21) block_statement -> statement .

    RBRACE          reduce using rule 21 (block_statement -> statement .)


state 33

    (22) statement -> var_statement . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    var_statement                  shift and go to state 33
    statement                      shift and go to state 56
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 34

    (23) statement -> var_assignment . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    var_assignment                 shift and go to state 34
    statement                      shift and go to state 57
    var_statement                  shift and go to state 33
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 35

    (24) statement -> func_call . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    func_call                      shift and go to state 35
    statement                      shift and go to state 58
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 36

    (25) statement -> if_statement . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    if_statement                   shift and go to state 36
    statement                      shift and go to state 59
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 37

    (26) statement -> for_statement . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    for_statement                  shift and go to state 37
    statement                      shift and go to state 60
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 38

    (27) statement -> return_statement .

    RBRACE          reduce using rule 27 (statement -> return_statement .)


state 39

    (29) statement -> list_statement . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    list_statement                 shift and go to state 39
    statement                      shift and go to state 61
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 40

    (30) statement -> list_assignment . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    list_assignment                shift and go to state 40
    statement                      shift and go to state 62
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 41

    (31) statement -> increment_rule . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    increment_rule                 shift and go to state 41
    statement                      shift and go to state 63
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 42

    (32) statement -> assignment . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    assignment                     shift and go to state 42
    statement                      shift and go to state 64
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 43

    (33) var_statement -> declaration_imutable .

    MUT             reduce using rule 33 (var_statement -> declaration_imutable .)
    CONST           reduce using rule 33 (var_statement -> declaration_imutable .)
    ID              reduce using rule 33 (var_statement -> declaration_imutable .)
    IF              reduce using rule 33 (var_statement -> declaration_imutable .)
    FOR             reduce using rule 33 (var_statement -> declaration_imutable .)
    RETURN          reduce using rule 33 (var_statement -> declaration_imutable .)
    RBRACE          reduce using rule 33 (var_statement -> declaration_imutable .)


state 44

    (34) var_statement -> MUT . ID DECLARE_ASSIGN expression
    (38) list_statement -> MUT . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> MUT . ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type

    ID              shift and go to state 65


state 45

    (36) var_assignment -> ID . ASSIGN expression
    (41) func_call -> ID . LPAREN id_list RPAREN
    (42) func_call -> ID . LPAREN RPAREN
    (40) list_assignment -> ID . LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> ID . INCREMENT
    (82) increment_rule -> ID . DECREMENT
    (92) assignment -> ID . PLUS_ASSIGN expression
    (93) assignment -> ID . MINUS_ASSIGN expression
    (94) assignment -> ID . TIMES_ASSIGN expression
    (95) assignment -> ID . DIVIDE_ASSIGN expression
    (96) assignment -> ID . MOD_ASSIGN expression
    (97) assignment -> ID . BIT_AND_ASSIGN expression
    (98) assignment -> ID . BIT_OR_ASSIGN expression
    (99) assignment -> ID . BIT_XOR_ASSIGN expression
    (100) assignment -> ID . BIT_LSHIFT_ASSIGN expression
    (101) assignment -> ID . BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> ID . DECLARE_ASSIGN expression
    (44) func_call_list -> ID . LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> ID . LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> ID . DECLARE_ASSIGN LBRACKET id_list RBRACKET

    ASSIGN          shift and go to state 66
    LPAREN          shift and go to state 67
    LBRACKET        shift and go to state 68
    INCREMENT       shift and go to state 69
    DECREMENT       shift and go to state 70
    PLUS_ASSIGN     shift and go to state 71
    MINUS_ASSIGN    shift and go to state 72
    TIMES_ASSIGN    shift and go to state 73
    DIVIDE_ASSIGN   shift and go to state 74
    MOD_ASSIGN      shift and go to state 75
    BIT_AND_ASSIGN  shift and go to state 76
    BIT_OR_ASSIGN   shift and go to state 77
    BIT_XOR_ASSIGN  shift and go to state 78
    BIT_LSHIFT_ASSIGN shift and go to state 79
    BIT_RSHIFT_ASSIGN shift and go to state 80
    DECLARE_ASSIGN  shift and go to state 81


state 46

    (35) var_statement -> CONST . ID DECLARE_ASSIGN expression

    ID              shift and go to state 82


state 47

    (43) func_call -> func_call_list .

    MUT             reduce using rule 43 (func_call -> func_call_list .)
    CONST           reduce using rule 43 (func_call -> func_call_list .)
    ID              reduce using rule 43 (func_call -> func_call_list .)
    IF              reduce using rule 43 (func_call -> func_call_list .)
    FOR             reduce using rule 43 (func_call -> func_call_list .)
    RETURN          reduce using rule 43 (func_call -> func_call_list .)
    RBRACE          reduce using rule 43 (func_call -> func_call_list .)
    EQ              reduce using rule 43 (func_call -> func_call_list .)
    NEQ             reduce using rule 43 (func_call -> func_call_list .)
    LT              reduce using rule 43 (func_call -> func_call_list .)
    LE              reduce using rule 43 (func_call -> func_call_list .)
    GT              reduce using rule 43 (func_call -> func_call_list .)
    GE              reduce using rule 43 (func_call -> func_call_list .)
    AND             reduce using rule 43 (func_call -> func_call_list .)
    OR              reduce using rule 43 (func_call -> func_call_list .)
    PLUS            reduce using rule 43 (func_call -> func_call_list .)
    MINUS           reduce using rule 43 (func_call -> func_call_list .)
    COMMA           reduce using rule 43 (func_call -> func_call_list .)
    RPAREN          reduce using rule 43 (func_call -> func_call_list .)
    LBRACE          reduce using rule 43 (func_call -> func_call_list .)
    SEMICOLON       reduce using rule 43 (func_call -> func_call_list .)
    RBRACKET        reduce using rule 43 (func_call -> func_call_list .)


state 48

    (49) if_statement -> IF . expression_relacional LBRACE statement RBRACE
    (50) if_statement -> IF . expression_relacional LBRACE statement RBRACE elseop
    (83) expression_relacional -> . expression EQ expression
    (84) expression_relacional -> . expression NEQ expression
    (85) expression_relacional -> . expression LT expression
    (86) expression_relacional -> . expression LE expression
    (87) expression_relacional -> . expression GT expression
    (88) expression_relacional -> . expression GE expression
    (89) expression_relacional -> . expression AND expression
    (90) expression_relacional -> . expression OR expression
    (91) expression_relacional -> . NOT expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    NOT             shift and go to state 85
    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression_relacional          shift and go to state 83
    expression                     shift and go to state 84
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 49

    (53) for_statement -> FOR . ID IN expression LBRACE statement RBRACE
    (54) for_statement -> FOR . declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> FOR . expression_relacional LBRACE statement RBRACE
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (83) expression_relacional -> . expression EQ expression
    (84) expression_relacional -> . expression NEQ expression
    (85) expression_relacional -> . expression LT expression
    (86) expression_relacional -> . expression LE expression
    (87) expression_relacional -> . expression GT expression
    (88) expression_relacional -> . expression GE expression
    (89) expression_relacional -> . expression AND expression
    (90) expression_relacional -> . expression OR expression
    (91) expression_relacional -> . NOT expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 102
    NOT             shift and go to state 85
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 84
    declaration_imutable           shift and go to state 103
    expression_relacional          shift and go to state 104
    increment_rule                 shift and go to state 87
    term                           shift and go to state 86
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 50

    (58) return_statement -> RETURN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 105
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 51

    (37) list_statement -> declaration_imutable_list .

    MUT             reduce using rule 37 (list_statement -> declaration_imutable_list .)
    CONST           reduce using rule 37 (list_statement -> declaration_imutable_list .)
    ID              reduce using rule 37 (list_statement -> declaration_imutable_list .)
    IF              reduce using rule 37 (list_statement -> declaration_imutable_list .)
    FOR             reduce using rule 37 (list_statement -> declaration_imutable_list .)
    RETURN          reduce using rule 37 (list_statement -> declaration_imutable_list .)
    RBRACE          reduce using rule 37 (list_statement -> declaration_imutable_list .)


state 52

    (5) function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement . RBRACE function_definition

    RBRACE          shift and go to state 106


state 53

    (6) function_definition -> FN ID LPAREN params RPAREN type LBRACE . block_statement RBRACE function_definition
    (21) block_statement -> . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    block_statement                shift and go to state 107
    statement                      shift and go to state 32
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 54

    (12) more_params -> COMMA param more_params .

    RPAREN          reduce using rule 12 (more_params -> COMMA param more_params .)


state 55

    (7) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE . function_definition_without_main
    (8) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (10) function_definition_without_main -> .

    FN              shift and go to state 108
    $end            reduce using rule 10 (function_definition_without_main -> .)

    function_definition_without_main shift and go to state 109

state 56

    (22) statement -> var_statement statement .

    RBRACE          reduce using rule 22 (statement -> var_statement statement .)


state 57

    (23) statement -> var_assignment statement .

    RBRACE          reduce using rule 23 (statement -> var_assignment statement .)


state 58

    (24) statement -> func_call statement .

    RBRACE          reduce using rule 24 (statement -> func_call statement .)


state 59

    (25) statement -> if_statement statement .

    RBRACE          reduce using rule 25 (statement -> if_statement statement .)


state 60

    (26) statement -> for_statement statement .

    RBRACE          reduce using rule 26 (statement -> for_statement statement .)


state 61

    (29) statement -> list_statement statement .

    RBRACE          reduce using rule 29 (statement -> list_statement statement .)


state 62

    (30) statement -> list_assignment statement .

    RBRACE          reduce using rule 30 (statement -> list_assignment statement .)


state 63

    (31) statement -> increment_rule statement .

    RBRACE          reduce using rule 31 (statement -> increment_rule statement .)


state 64

    (32) statement -> assignment statement .

    RBRACE          reduce using rule 32 (statement -> assignment statement .)


state 65

    (34) var_statement -> MUT ID . DECLARE_ASSIGN expression
    (38) list_statement -> MUT ID . DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> MUT ID . DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type

    DECLARE_ASSIGN  shift and go to state 110


state 66

    (36) var_assignment -> ID ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 111
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 67

    (41) func_call -> ID LPAREN . id_list RPAREN
    (42) func_call -> ID LPAREN . RPAREN
    (46) id_list -> . expression more_expressions
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    RPAREN          shift and go to state 113
    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    id_list                        shift and go to state 112
    expression                     shift and go to state 114
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 68

    (40) list_assignment -> ID LBRACKET . NUMBER RBRACKET ASSIGN expression
    (44) func_call_list -> ID LBRACKET . DOTDOT RBRACKET
    (45) func_call_list -> ID LBRACKET . NUMBER DOTDOT NUMBER RBRACKET

    NUMBER          shift and go to state 115
    DOTDOT          shift and go to state 116


state 69

    (81) increment_rule -> ID INCREMENT .

    MUT             reduce using rule 81 (increment_rule -> ID INCREMENT .)
    CONST           reduce using rule 81 (increment_rule -> ID INCREMENT .)
    ID              reduce using rule 81 (increment_rule -> ID INCREMENT .)
    IF              reduce using rule 81 (increment_rule -> ID INCREMENT .)
    FOR             reduce using rule 81 (increment_rule -> ID INCREMENT .)
    RETURN          reduce using rule 81 (increment_rule -> ID INCREMENT .)
    RBRACE          reduce using rule 81 (increment_rule -> ID INCREMENT .)
    EQ              reduce using rule 81 (increment_rule -> ID INCREMENT .)
    NEQ             reduce using rule 81 (increment_rule -> ID INCREMENT .)
    LT              reduce using rule 81 (increment_rule -> ID INCREMENT .)
    LE              reduce using rule 81 (increment_rule -> ID INCREMENT .)
    GT              reduce using rule 81 (increment_rule -> ID INCREMENT .)
    GE              reduce using rule 81 (increment_rule -> ID INCREMENT .)
    AND             reduce using rule 81 (increment_rule -> ID INCREMENT .)
    OR              reduce using rule 81 (increment_rule -> ID INCREMENT .)
    PLUS            reduce using rule 81 (increment_rule -> ID INCREMENT .)
    MINUS           reduce using rule 81 (increment_rule -> ID INCREMENT .)
    COMMA           reduce using rule 81 (increment_rule -> ID INCREMENT .)
    RPAREN          reduce using rule 81 (increment_rule -> ID INCREMENT .)
    LBRACE          reduce using rule 81 (increment_rule -> ID INCREMENT .)
    SEMICOLON       reduce using rule 81 (increment_rule -> ID INCREMENT .)
    RBRACKET        reduce using rule 81 (increment_rule -> ID INCREMENT .)


state 70

    (82) increment_rule -> ID DECREMENT .

    MUT             reduce using rule 82 (increment_rule -> ID DECREMENT .)
    CONST           reduce using rule 82 (increment_rule -> ID DECREMENT .)
    ID              reduce using rule 82 (increment_rule -> ID DECREMENT .)
    IF              reduce using rule 82 (increment_rule -> ID DECREMENT .)
    FOR             reduce using rule 82 (increment_rule -> ID DECREMENT .)
    RETURN          reduce using rule 82 (increment_rule -> ID DECREMENT .)
    RBRACE          reduce using rule 82 (increment_rule -> ID DECREMENT .)
    EQ              reduce using rule 82 (increment_rule -> ID DECREMENT .)
    NEQ             reduce using rule 82 (increment_rule -> ID DECREMENT .)
    LT              reduce using rule 82 (increment_rule -> ID DECREMENT .)
    LE              reduce using rule 82 (increment_rule -> ID DECREMENT .)
    GT              reduce using rule 82 (increment_rule -> ID DECREMENT .)
    GE              reduce using rule 82 (increment_rule -> ID DECREMENT .)
    AND             reduce using rule 82 (increment_rule -> ID DECREMENT .)
    OR              reduce using rule 82 (increment_rule -> ID DECREMENT .)
    PLUS            reduce using rule 82 (increment_rule -> ID DECREMENT .)
    MINUS           reduce using rule 82 (increment_rule -> ID DECREMENT .)
    COMMA           reduce using rule 82 (increment_rule -> ID DECREMENT .)
    RPAREN          reduce using rule 82 (increment_rule -> ID DECREMENT .)
    LBRACE          reduce using rule 82 (increment_rule -> ID DECREMENT .)
    SEMICOLON       reduce using rule 82 (increment_rule -> ID DECREMENT .)
    RBRACKET        reduce using rule 82 (increment_rule -> ID DECREMENT .)


state 71

    (92) assignment -> ID PLUS_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 117
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 72

    (93) assignment -> ID MINUS_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 118
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 73

    (94) assignment -> ID TIMES_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 119
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 74

    (95) assignment -> ID DIVIDE_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 120
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 75

    (96) assignment -> ID MOD_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 121
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 76

    (97) assignment -> ID BIT_AND_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 122
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 77

    (98) assignment -> ID BIT_OR_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 123
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 78

    (99) assignment -> ID BIT_XOR_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 124
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 79

    (100) assignment -> ID BIT_LSHIFT_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 125
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 80

    (101) assignment -> ID BIT_RSHIFT_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 126
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 81

    (56) declaration_imutable -> ID DECLARE_ASSIGN . expression
    (57) declaration_imutable_list -> ID DECLARE_ASSIGN . LBRACKET id_list RBRACKET
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    LBRACKET        shift and go to state 128
    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 127
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 82

    (35) var_statement -> CONST ID . DECLARE_ASSIGN expression

    DECLARE_ASSIGN  shift and go to state 129


state 83

    (49) if_statement -> IF expression_relacional . LBRACE statement RBRACE
    (50) if_statement -> IF expression_relacional . LBRACE statement RBRACE elseop

    LBRACE          shift and go to state 130


state 84

    (83) expression_relacional -> expression . EQ expression
    (84) expression_relacional -> expression . NEQ expression
    (85) expression_relacional -> expression . LT expression
    (86) expression_relacional -> expression . LE expression
    (87) expression_relacional -> expression . GT expression
    (88) expression_relacional -> expression . GE expression
    (89) expression_relacional -> expression . AND expression
    (90) expression_relacional -> expression . OR expression
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    EQ              shift and go to state 131
    NEQ             shift and go to state 132
    LT              shift and go to state 133
    LE              shift and go to state 134
    GT              shift and go to state 135
    GE              shift and go to state 136
    AND             shift and go to state 137
    OR              shift and go to state 138
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 85

    (91) expression_relacional -> NOT . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 141
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 86

    (63) expression -> term .
    (64) term -> term . TIMES factor
    (65) term -> term . DIVIDE factor
    (66) term -> term . MOD factor

    EQ              reduce using rule 63 (expression -> term .)
    NEQ             reduce using rule 63 (expression -> term .)
    LT              reduce using rule 63 (expression -> term .)
    LE              reduce using rule 63 (expression -> term .)
    GT              reduce using rule 63 (expression -> term .)
    GE              reduce using rule 63 (expression -> term .)
    AND             reduce using rule 63 (expression -> term .)
    OR              reduce using rule 63 (expression -> term .)
    PLUS            reduce using rule 63 (expression -> term .)
    MINUS           reduce using rule 63 (expression -> term .)
    RBRACE          reduce using rule 63 (expression -> term .)
    MUT             reduce using rule 63 (expression -> term .)
    CONST           reduce using rule 63 (expression -> term .)
    ID              reduce using rule 63 (expression -> term .)
    IF              reduce using rule 63 (expression -> term .)
    FOR             reduce using rule 63 (expression -> term .)
    RETURN          reduce using rule 63 (expression -> term .)
    COMMA           reduce using rule 63 (expression -> term .)
    RPAREN          reduce using rule 63 (expression -> term .)
    LBRACE          reduce using rule 63 (expression -> term .)
    SEMICOLON       reduce using rule 63 (expression -> term .)
    RBRACKET        reduce using rule 63 (expression -> term .)
    TIMES           shift and go to state 142
    DIVIDE          shift and go to state 143
    MOD             shift and go to state 144


state 87

    (61) expression -> increment_rule .

    EQ              reduce using rule 61 (expression -> increment_rule .)
    NEQ             reduce using rule 61 (expression -> increment_rule .)
    LT              reduce using rule 61 (expression -> increment_rule .)
    LE              reduce using rule 61 (expression -> increment_rule .)
    GT              reduce using rule 61 (expression -> increment_rule .)
    GE              reduce using rule 61 (expression -> increment_rule .)
    AND             reduce using rule 61 (expression -> increment_rule .)
    OR              reduce using rule 61 (expression -> increment_rule .)
    PLUS            reduce using rule 61 (expression -> increment_rule .)
    MINUS           reduce using rule 61 (expression -> increment_rule .)
    RBRACE          reduce using rule 61 (expression -> increment_rule .)
    MUT             reduce using rule 61 (expression -> increment_rule .)
    CONST           reduce using rule 61 (expression -> increment_rule .)
    ID              reduce using rule 61 (expression -> increment_rule .)
    IF              reduce using rule 61 (expression -> increment_rule .)
    FOR             reduce using rule 61 (expression -> increment_rule .)
    RETURN          reduce using rule 61 (expression -> increment_rule .)
    COMMA           reduce using rule 61 (expression -> increment_rule .)
    RPAREN          reduce using rule 61 (expression -> increment_rule .)
    LBRACE          reduce using rule 61 (expression -> increment_rule .)
    SEMICOLON       reduce using rule 61 (expression -> increment_rule .)
    RBRACKET        reduce using rule 61 (expression -> increment_rule .)


state 88

    (62) expression -> func_call .

    EQ              reduce using rule 62 (expression -> func_call .)
    NEQ             reduce using rule 62 (expression -> func_call .)
    LT              reduce using rule 62 (expression -> func_call .)
    LE              reduce using rule 62 (expression -> func_call .)
    GT              reduce using rule 62 (expression -> func_call .)
    GE              reduce using rule 62 (expression -> func_call .)
    AND             reduce using rule 62 (expression -> func_call .)
    OR              reduce using rule 62 (expression -> func_call .)
    PLUS            reduce using rule 62 (expression -> func_call .)
    MINUS           reduce using rule 62 (expression -> func_call .)
    RBRACE          reduce using rule 62 (expression -> func_call .)
    MUT             reduce using rule 62 (expression -> func_call .)
    CONST           reduce using rule 62 (expression -> func_call .)
    ID              reduce using rule 62 (expression -> func_call .)
    IF              reduce using rule 62 (expression -> func_call .)
    FOR             reduce using rule 62 (expression -> func_call .)
    RETURN          reduce using rule 62 (expression -> func_call .)
    COMMA           reduce using rule 62 (expression -> func_call .)
    RPAREN          reduce using rule 62 (expression -> func_call .)
    LBRACE          reduce using rule 62 (expression -> func_call .)
    SEMICOLON       reduce using rule 62 (expression -> func_call .)
    RBRACKET        reduce using rule 62 (expression -> func_call .)


state 89

    (81) increment_rule -> ID . INCREMENT
    (82) increment_rule -> ID . DECREMENT
    (41) func_call -> ID . LPAREN id_list RPAREN
    (42) func_call -> ID . LPAREN RPAREN
    (44) func_call_list -> ID . LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> ID . LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> ID .
    (76) factor -> ID . LBRACKET NUMBER RBRACKET

    INCREMENT       shift and go to state 69
    DECREMENT       shift and go to state 70
    LPAREN          shift and go to state 67
    LBRACKET        shift and go to state 145
    TIMES           reduce using rule 68 (factor -> ID .)
    DIVIDE          reduce using rule 68 (factor -> ID .)
    MOD             reduce using rule 68 (factor -> ID .)
    EQ              reduce using rule 68 (factor -> ID .)
    NEQ             reduce using rule 68 (factor -> ID .)
    LT              reduce using rule 68 (factor -> ID .)
    LE              reduce using rule 68 (factor -> ID .)
    GT              reduce using rule 68 (factor -> ID .)
    GE              reduce using rule 68 (factor -> ID .)
    AND             reduce using rule 68 (factor -> ID .)
    OR              reduce using rule 68 (factor -> ID .)
    PLUS            reduce using rule 68 (factor -> ID .)
    MINUS           reduce using rule 68 (factor -> ID .)
    RBRACE          reduce using rule 68 (factor -> ID .)
    MUT             reduce using rule 68 (factor -> ID .)
    CONST           reduce using rule 68 (factor -> ID .)
    ID              reduce using rule 68 (factor -> ID .)
    IF              reduce using rule 68 (factor -> ID .)
    FOR             reduce using rule 68 (factor -> ID .)
    RETURN          reduce using rule 68 (factor -> ID .)
    COMMA           reduce using rule 68 (factor -> ID .)
    RPAREN          reduce using rule 68 (factor -> ID .)
    LBRACE          reduce using rule 68 (factor -> ID .)
    SEMICOLON       reduce using rule 68 (factor -> ID .)
    RBRACKET        reduce using rule 68 (factor -> ID .)


state 90

    (75) factor -> LPAREN . expression RPAREN
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 146
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 91

    (67) term -> factor .

    TIMES           reduce using rule 67 (term -> factor .)
    DIVIDE          reduce using rule 67 (term -> factor .)
    MOD             reduce using rule 67 (term -> factor .)
    EQ              reduce using rule 67 (term -> factor .)
    NEQ             reduce using rule 67 (term -> factor .)
    LT              reduce using rule 67 (term -> factor .)
    LE              reduce using rule 67 (term -> factor .)
    GT              reduce using rule 67 (term -> factor .)
    GE              reduce using rule 67 (term -> factor .)
    AND             reduce using rule 67 (term -> factor .)
    OR              reduce using rule 67 (term -> factor .)
    PLUS            reduce using rule 67 (term -> factor .)
    MINUS           reduce using rule 67 (term -> factor .)
    RBRACE          reduce using rule 67 (term -> factor .)
    MUT             reduce using rule 67 (term -> factor .)
    CONST           reduce using rule 67 (term -> factor .)
    ID              reduce using rule 67 (term -> factor .)
    IF              reduce using rule 67 (term -> factor .)
    FOR             reduce using rule 67 (term -> factor .)
    RETURN          reduce using rule 67 (term -> factor .)
    COMMA           reduce using rule 67 (term -> factor .)
    RPAREN          reduce using rule 67 (term -> factor .)
    LBRACE          reduce using rule 67 (term -> factor .)
    SEMICOLON       reduce using rule 67 (term -> factor .)
    RBRACKET        reduce using rule 67 (term -> factor .)


state 92

    (69) factor -> NUMBER .

    TIMES           reduce using rule 69 (factor -> NUMBER .)
    DIVIDE          reduce using rule 69 (factor -> NUMBER .)
    MOD             reduce using rule 69 (factor -> NUMBER .)
    EQ              reduce using rule 69 (factor -> NUMBER .)
    NEQ             reduce using rule 69 (factor -> NUMBER .)
    LT              reduce using rule 69 (factor -> NUMBER .)
    LE              reduce using rule 69 (factor -> NUMBER .)
    GT              reduce using rule 69 (factor -> NUMBER .)
    GE              reduce using rule 69 (factor -> NUMBER .)
    AND             reduce using rule 69 (factor -> NUMBER .)
    OR              reduce using rule 69 (factor -> NUMBER .)
    PLUS            reduce using rule 69 (factor -> NUMBER .)
    MINUS           reduce using rule 69 (factor -> NUMBER .)
    RBRACE          reduce using rule 69 (factor -> NUMBER .)
    MUT             reduce using rule 69 (factor -> NUMBER .)
    CONST           reduce using rule 69 (factor -> NUMBER .)
    ID              reduce using rule 69 (factor -> NUMBER .)
    IF              reduce using rule 69 (factor -> NUMBER .)
    FOR             reduce using rule 69 (factor -> NUMBER .)
    RETURN          reduce using rule 69 (factor -> NUMBER .)
    COMMA           reduce using rule 69 (factor -> NUMBER .)
    RPAREN          reduce using rule 69 (factor -> NUMBER .)
    LBRACE          reduce using rule 69 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 69 (factor -> NUMBER .)
    RBRACKET        reduce using rule 69 (factor -> NUMBER .)


state 93

    (70) factor -> NUMBERFLOAT .

    TIMES           reduce using rule 70 (factor -> NUMBERFLOAT .)
    DIVIDE          reduce using rule 70 (factor -> NUMBERFLOAT .)
    MOD             reduce using rule 70 (factor -> NUMBERFLOAT .)
    EQ              reduce using rule 70 (factor -> NUMBERFLOAT .)
    NEQ             reduce using rule 70 (factor -> NUMBERFLOAT .)
    LT              reduce using rule 70 (factor -> NUMBERFLOAT .)
    LE              reduce using rule 70 (factor -> NUMBERFLOAT .)
    GT              reduce using rule 70 (factor -> NUMBERFLOAT .)
    GE              reduce using rule 70 (factor -> NUMBERFLOAT .)
    AND             reduce using rule 70 (factor -> NUMBERFLOAT .)
    OR              reduce using rule 70 (factor -> NUMBERFLOAT .)
    PLUS            reduce using rule 70 (factor -> NUMBERFLOAT .)
    MINUS           reduce using rule 70 (factor -> NUMBERFLOAT .)
    RBRACE          reduce using rule 70 (factor -> NUMBERFLOAT .)
    MUT             reduce using rule 70 (factor -> NUMBERFLOAT .)
    CONST           reduce using rule 70 (factor -> NUMBERFLOAT .)
    ID              reduce using rule 70 (factor -> NUMBERFLOAT .)
    IF              reduce using rule 70 (factor -> NUMBERFLOAT .)
    FOR             reduce using rule 70 (factor -> NUMBERFLOAT .)
    RETURN          reduce using rule 70 (factor -> NUMBERFLOAT .)
    COMMA           reduce using rule 70 (factor -> NUMBERFLOAT .)
    RPAREN          reduce using rule 70 (factor -> NUMBERFLOAT .)
    LBRACE          reduce using rule 70 (factor -> NUMBERFLOAT .)
    SEMICOLON       reduce using rule 70 (factor -> NUMBERFLOAT .)
    RBRACKET        reduce using rule 70 (factor -> NUMBERFLOAT .)


state 94

    (71) factor -> STRING .

    TIMES           reduce using rule 71 (factor -> STRING .)
    DIVIDE          reduce using rule 71 (factor -> STRING .)
    MOD             reduce using rule 71 (factor -> STRING .)
    EQ              reduce using rule 71 (factor -> STRING .)
    NEQ             reduce using rule 71 (factor -> STRING .)
    LT              reduce using rule 71 (factor -> STRING .)
    LE              reduce using rule 71 (factor -> STRING .)
    GT              reduce using rule 71 (factor -> STRING .)
    GE              reduce using rule 71 (factor -> STRING .)
    AND             reduce using rule 71 (factor -> STRING .)
    OR              reduce using rule 71 (factor -> STRING .)
    PLUS            reduce using rule 71 (factor -> STRING .)
    MINUS           reduce using rule 71 (factor -> STRING .)
    RBRACE          reduce using rule 71 (factor -> STRING .)
    MUT             reduce using rule 71 (factor -> STRING .)
    CONST           reduce using rule 71 (factor -> STRING .)
    ID              reduce using rule 71 (factor -> STRING .)
    IF              reduce using rule 71 (factor -> STRING .)
    FOR             reduce using rule 71 (factor -> STRING .)
    RETURN          reduce using rule 71 (factor -> STRING .)
    COMMA           reduce using rule 71 (factor -> STRING .)
    RPAREN          reduce using rule 71 (factor -> STRING .)
    LBRACE          reduce using rule 71 (factor -> STRING .)
    SEMICOLON       reduce using rule 71 (factor -> STRING .)
    RBRACKET        reduce using rule 71 (factor -> STRING .)


state 95

    (72) factor -> TRUE .

    TIMES           reduce using rule 72 (factor -> TRUE .)
    DIVIDE          reduce using rule 72 (factor -> TRUE .)
    MOD             reduce using rule 72 (factor -> TRUE .)
    EQ              reduce using rule 72 (factor -> TRUE .)
    NEQ             reduce using rule 72 (factor -> TRUE .)
    LT              reduce using rule 72 (factor -> TRUE .)
    LE              reduce using rule 72 (factor -> TRUE .)
    GT              reduce using rule 72 (factor -> TRUE .)
    GE              reduce using rule 72 (factor -> TRUE .)
    AND             reduce using rule 72 (factor -> TRUE .)
    OR              reduce using rule 72 (factor -> TRUE .)
    PLUS            reduce using rule 72 (factor -> TRUE .)
    MINUS           reduce using rule 72 (factor -> TRUE .)
    RBRACE          reduce using rule 72 (factor -> TRUE .)
    MUT             reduce using rule 72 (factor -> TRUE .)
    CONST           reduce using rule 72 (factor -> TRUE .)
    ID              reduce using rule 72 (factor -> TRUE .)
    IF              reduce using rule 72 (factor -> TRUE .)
    FOR             reduce using rule 72 (factor -> TRUE .)
    RETURN          reduce using rule 72 (factor -> TRUE .)
    COMMA           reduce using rule 72 (factor -> TRUE .)
    RPAREN          reduce using rule 72 (factor -> TRUE .)
    LBRACE          reduce using rule 72 (factor -> TRUE .)
    SEMICOLON       reduce using rule 72 (factor -> TRUE .)
    RBRACKET        reduce using rule 72 (factor -> TRUE .)


state 96

    (73) factor -> FALSE .

    TIMES           reduce using rule 73 (factor -> FALSE .)
    DIVIDE          reduce using rule 73 (factor -> FALSE .)
    MOD             reduce using rule 73 (factor -> FALSE .)
    EQ              reduce using rule 73 (factor -> FALSE .)
    NEQ             reduce using rule 73 (factor -> FALSE .)
    LT              reduce using rule 73 (factor -> FALSE .)
    LE              reduce using rule 73 (factor -> FALSE .)
    GT              reduce using rule 73 (factor -> FALSE .)
    GE              reduce using rule 73 (factor -> FALSE .)
    AND             reduce using rule 73 (factor -> FALSE .)
    OR              reduce using rule 73 (factor -> FALSE .)
    PLUS            reduce using rule 73 (factor -> FALSE .)
    MINUS           reduce using rule 73 (factor -> FALSE .)
    RBRACE          reduce using rule 73 (factor -> FALSE .)
    MUT             reduce using rule 73 (factor -> FALSE .)
    CONST           reduce using rule 73 (factor -> FALSE .)
    ID              reduce using rule 73 (factor -> FALSE .)
    IF              reduce using rule 73 (factor -> FALSE .)
    FOR             reduce using rule 73 (factor -> FALSE .)
    RETURN          reduce using rule 73 (factor -> FALSE .)
    COMMA           reduce using rule 73 (factor -> FALSE .)
    RPAREN          reduce using rule 73 (factor -> FALSE .)
    LBRACE          reduce using rule 73 (factor -> FALSE .)
    SEMICOLON       reduce using rule 73 (factor -> FALSE .)
    RBRACKET        reduce using rule 73 (factor -> FALSE .)


state 97

    (74) factor -> RUNE .

    TIMES           reduce using rule 74 (factor -> RUNE .)
    DIVIDE          reduce using rule 74 (factor -> RUNE .)
    MOD             reduce using rule 74 (factor -> RUNE .)
    EQ              reduce using rule 74 (factor -> RUNE .)
    NEQ             reduce using rule 74 (factor -> RUNE .)
    LT              reduce using rule 74 (factor -> RUNE .)
    LE              reduce using rule 74 (factor -> RUNE .)
    GT              reduce using rule 74 (factor -> RUNE .)
    GE              reduce using rule 74 (factor -> RUNE .)
    AND             reduce using rule 74 (factor -> RUNE .)
    OR              reduce using rule 74 (factor -> RUNE .)
    PLUS            reduce using rule 74 (factor -> RUNE .)
    MINUS           reduce using rule 74 (factor -> RUNE .)
    RBRACE          reduce using rule 74 (factor -> RUNE .)
    MUT             reduce using rule 74 (factor -> RUNE .)
    CONST           reduce using rule 74 (factor -> RUNE .)
    ID              reduce using rule 74 (factor -> RUNE .)
    IF              reduce using rule 74 (factor -> RUNE .)
    FOR             reduce using rule 74 (factor -> RUNE .)
    RETURN          reduce using rule 74 (factor -> RUNE .)
    COMMA           reduce using rule 74 (factor -> RUNE .)
    RPAREN          reduce using rule 74 (factor -> RUNE .)
    LBRACE          reduce using rule 74 (factor -> RUNE .)
    SEMICOLON       reduce using rule 74 (factor -> RUNE .)
    RBRACKET        reduce using rule 74 (factor -> RUNE .)


state 98

    (77) factor -> NOTACAOCIENTIFICA .

    TIMES           reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    DIVIDE          reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    MOD             reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    EQ              reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    NEQ             reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    LT              reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    LE              reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    GT              reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    GE              reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    AND             reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    OR              reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    PLUS            reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    MINUS           reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    RBRACE          reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    MUT             reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    CONST           reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    ID              reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    IF              reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    FOR             reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    RETURN          reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    COMMA           reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    RPAREN          reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    LBRACE          reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    SEMICOLON       reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)
    RBRACKET        reduce using rule 77 (factor -> NOTACAOCIENTIFICA .)


state 99

    (78) factor -> BINARY .

    TIMES           reduce using rule 78 (factor -> BINARY .)
    DIVIDE          reduce using rule 78 (factor -> BINARY .)
    MOD             reduce using rule 78 (factor -> BINARY .)
    EQ              reduce using rule 78 (factor -> BINARY .)
    NEQ             reduce using rule 78 (factor -> BINARY .)
    LT              reduce using rule 78 (factor -> BINARY .)
    LE              reduce using rule 78 (factor -> BINARY .)
    GT              reduce using rule 78 (factor -> BINARY .)
    GE              reduce using rule 78 (factor -> BINARY .)
    AND             reduce using rule 78 (factor -> BINARY .)
    OR              reduce using rule 78 (factor -> BINARY .)
    PLUS            reduce using rule 78 (factor -> BINARY .)
    MINUS           reduce using rule 78 (factor -> BINARY .)
    RBRACE          reduce using rule 78 (factor -> BINARY .)
    MUT             reduce using rule 78 (factor -> BINARY .)
    CONST           reduce using rule 78 (factor -> BINARY .)
    ID              reduce using rule 78 (factor -> BINARY .)
    IF              reduce using rule 78 (factor -> BINARY .)
    FOR             reduce using rule 78 (factor -> BINARY .)
    RETURN          reduce using rule 78 (factor -> BINARY .)
    COMMA           reduce using rule 78 (factor -> BINARY .)
    RPAREN          reduce using rule 78 (factor -> BINARY .)
    LBRACE          reduce using rule 78 (factor -> BINARY .)
    SEMICOLON       reduce using rule 78 (factor -> BINARY .)
    RBRACKET        reduce using rule 78 (factor -> BINARY .)


state 100

    (79) factor -> OCTAL .

    TIMES           reduce using rule 79 (factor -> OCTAL .)
    DIVIDE          reduce using rule 79 (factor -> OCTAL .)
    MOD             reduce using rule 79 (factor -> OCTAL .)
    EQ              reduce using rule 79 (factor -> OCTAL .)
    NEQ             reduce using rule 79 (factor -> OCTAL .)
    LT              reduce using rule 79 (factor -> OCTAL .)
    LE              reduce using rule 79 (factor -> OCTAL .)
    GT              reduce using rule 79 (factor -> OCTAL .)
    GE              reduce using rule 79 (factor -> OCTAL .)
    AND             reduce using rule 79 (factor -> OCTAL .)
    OR              reduce using rule 79 (factor -> OCTAL .)
    PLUS            reduce using rule 79 (factor -> OCTAL .)
    MINUS           reduce using rule 79 (factor -> OCTAL .)
    RBRACE          reduce using rule 79 (factor -> OCTAL .)
    MUT             reduce using rule 79 (factor -> OCTAL .)
    CONST           reduce using rule 79 (factor -> OCTAL .)
    ID              reduce using rule 79 (factor -> OCTAL .)
    IF              reduce using rule 79 (factor -> OCTAL .)
    FOR             reduce using rule 79 (factor -> OCTAL .)
    RETURN          reduce using rule 79 (factor -> OCTAL .)
    COMMA           reduce using rule 79 (factor -> OCTAL .)
    RPAREN          reduce using rule 79 (factor -> OCTAL .)
    LBRACE          reduce using rule 79 (factor -> OCTAL .)
    SEMICOLON       reduce using rule 79 (factor -> OCTAL .)
    RBRACKET        reduce using rule 79 (factor -> OCTAL .)


state 101

    (80) factor -> HEX .

    TIMES           reduce using rule 80 (factor -> HEX .)
    DIVIDE          reduce using rule 80 (factor -> HEX .)
    MOD             reduce using rule 80 (factor -> HEX .)
    EQ              reduce using rule 80 (factor -> HEX .)
    NEQ             reduce using rule 80 (factor -> HEX .)
    LT              reduce using rule 80 (factor -> HEX .)
    LE              reduce using rule 80 (factor -> HEX .)
    GT              reduce using rule 80 (factor -> HEX .)
    GE              reduce using rule 80 (factor -> HEX .)
    AND             reduce using rule 80 (factor -> HEX .)
    OR              reduce using rule 80 (factor -> HEX .)
    PLUS            reduce using rule 80 (factor -> HEX .)
    MINUS           reduce using rule 80 (factor -> HEX .)
    RBRACE          reduce using rule 80 (factor -> HEX .)
    MUT             reduce using rule 80 (factor -> HEX .)
    CONST           reduce using rule 80 (factor -> HEX .)
    ID              reduce using rule 80 (factor -> HEX .)
    IF              reduce using rule 80 (factor -> HEX .)
    FOR             reduce using rule 80 (factor -> HEX .)
    RETURN          reduce using rule 80 (factor -> HEX .)
    COMMA           reduce using rule 80 (factor -> HEX .)
    RPAREN          reduce using rule 80 (factor -> HEX .)
    LBRACE          reduce using rule 80 (factor -> HEX .)
    SEMICOLON       reduce using rule 80 (factor -> HEX .)
    RBRACKET        reduce using rule 80 (factor -> HEX .)


state 102

    (53) for_statement -> FOR ID . IN expression LBRACE statement RBRACE
    (56) declaration_imutable -> ID . DECLARE_ASSIGN expression
    (81) increment_rule -> ID . INCREMENT
    (82) increment_rule -> ID . DECREMENT
    (41) func_call -> ID . LPAREN id_list RPAREN
    (42) func_call -> ID . LPAREN RPAREN
    (44) func_call_list -> ID . LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> ID . LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> ID .
    (76) factor -> ID . LBRACKET NUMBER RBRACKET

    IN              shift and go to state 147
    DECLARE_ASSIGN  shift and go to state 148
    INCREMENT       shift and go to state 69
    DECREMENT       shift and go to state 70
    LPAREN          shift and go to state 67
    LBRACKET        shift and go to state 145
    TIMES           reduce using rule 68 (factor -> ID .)
    DIVIDE          reduce using rule 68 (factor -> ID .)
    MOD             reduce using rule 68 (factor -> ID .)
    EQ              reduce using rule 68 (factor -> ID .)
    NEQ             reduce using rule 68 (factor -> ID .)
    LT              reduce using rule 68 (factor -> ID .)
    LE              reduce using rule 68 (factor -> ID .)
    GT              reduce using rule 68 (factor -> ID .)
    GE              reduce using rule 68 (factor -> ID .)
    AND             reduce using rule 68 (factor -> ID .)
    OR              reduce using rule 68 (factor -> ID .)
    PLUS            reduce using rule 68 (factor -> ID .)
    MINUS           reduce using rule 68 (factor -> ID .)


state 103

    (54) for_statement -> FOR declaration_imutable . SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE

    SEMICOLON       shift and go to state 149


state 104

    (55) for_statement -> FOR expression_relacional . LBRACE statement RBRACE

    LBRACE          shift and go to state 150


state 105

    (58) return_statement -> RETURN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    RBRACE          reduce using rule 58 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 106

    (5) function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE . function_definition
    (5) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
    (7) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    FN              shift and go to state 5

    function_definition            shift and go to state 151

state 107

    (6) function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement . RBRACE function_definition

    RBRACE          shift and go to state 152


state 108

    (8) function_definition_without_main -> FN . ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> FN . ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main

    ID              shift and go to state 153


state 109

    (7) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main .

    $end            reduce using rule 7 (function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main .)


state 110

    (34) var_statement -> MUT ID DECLARE_ASSIGN . expression
    (38) list_statement -> MUT ID DECLARE_ASSIGN . LBRACKET id_list RBRACKET
    (39) list_statement -> MUT ID DECLARE_ASSIGN . LBRACKET NUMBER RBRACKET type
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    LBRACKET        shift and go to state 155
    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 154
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 111

    (36) var_assignment -> ID ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 36 (var_assignment -> ID ASSIGN expression .)
    CONST           reduce using rule 36 (var_assignment -> ID ASSIGN expression .)
    ID              reduce using rule 36 (var_assignment -> ID ASSIGN expression .)
    IF              reduce using rule 36 (var_assignment -> ID ASSIGN expression .)
    FOR             reduce using rule 36 (var_assignment -> ID ASSIGN expression .)
    RETURN          reduce using rule 36 (var_assignment -> ID ASSIGN expression .)
    RBRACE          reduce using rule 36 (var_assignment -> ID ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 112

    (41) func_call -> ID LPAREN id_list . RPAREN

    RPAREN          shift and go to state 156


state 113

    (42) func_call -> ID LPAREN RPAREN .

    MUT             reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    CONST           reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    ID              reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    IF              reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    FOR             reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    EQ              reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    NEQ             reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    LT              reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    LE              reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    GT              reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    GE              reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    LBRACE          reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 42 (func_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 42 (func_call -> ID LPAREN RPAREN .)


state 114

    (46) id_list -> expression . more_expressions
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term
    (47) more_expressions -> . COMMA expression more_expressions
    (48) more_expressions -> .

    PLUS            shift and go to state 139
    MINUS           shift and go to state 140
    COMMA           shift and go to state 158
    RPAREN          reduce using rule 48 (more_expressions -> .)
    RBRACKET        reduce using rule 48 (more_expressions -> .)

    more_expressions               shift and go to state 157

state 115

    (40) list_assignment -> ID LBRACKET NUMBER . RBRACKET ASSIGN expression
    (45) func_call_list -> ID LBRACKET NUMBER . DOTDOT NUMBER RBRACKET

    RBRACKET        shift and go to state 159
    DOTDOT          shift and go to state 160


state 116

    (44) func_call_list -> ID LBRACKET DOTDOT . RBRACKET

    RBRACKET        shift and go to state 161


state 117

    (92) assignment -> ID PLUS_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 92 (assignment -> ID PLUS_ASSIGN expression .)
    CONST           reduce using rule 92 (assignment -> ID PLUS_ASSIGN expression .)
    ID              reduce using rule 92 (assignment -> ID PLUS_ASSIGN expression .)
    IF              reduce using rule 92 (assignment -> ID PLUS_ASSIGN expression .)
    FOR             reduce using rule 92 (assignment -> ID PLUS_ASSIGN expression .)
    RETURN          reduce using rule 92 (assignment -> ID PLUS_ASSIGN expression .)
    RBRACE          reduce using rule 92 (assignment -> ID PLUS_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 118

    (93) assignment -> ID MINUS_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 93 (assignment -> ID MINUS_ASSIGN expression .)
    CONST           reduce using rule 93 (assignment -> ID MINUS_ASSIGN expression .)
    ID              reduce using rule 93 (assignment -> ID MINUS_ASSIGN expression .)
    IF              reduce using rule 93 (assignment -> ID MINUS_ASSIGN expression .)
    FOR             reduce using rule 93 (assignment -> ID MINUS_ASSIGN expression .)
    RETURN          reduce using rule 93 (assignment -> ID MINUS_ASSIGN expression .)
    RBRACE          reduce using rule 93 (assignment -> ID MINUS_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 119

    (94) assignment -> ID TIMES_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 94 (assignment -> ID TIMES_ASSIGN expression .)
    CONST           reduce using rule 94 (assignment -> ID TIMES_ASSIGN expression .)
    ID              reduce using rule 94 (assignment -> ID TIMES_ASSIGN expression .)
    IF              reduce using rule 94 (assignment -> ID TIMES_ASSIGN expression .)
    FOR             reduce using rule 94 (assignment -> ID TIMES_ASSIGN expression .)
    RETURN          reduce using rule 94 (assignment -> ID TIMES_ASSIGN expression .)
    RBRACE          reduce using rule 94 (assignment -> ID TIMES_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 120

    (95) assignment -> ID DIVIDE_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 95 (assignment -> ID DIVIDE_ASSIGN expression .)
    CONST           reduce using rule 95 (assignment -> ID DIVIDE_ASSIGN expression .)
    ID              reduce using rule 95 (assignment -> ID DIVIDE_ASSIGN expression .)
    IF              reduce using rule 95 (assignment -> ID DIVIDE_ASSIGN expression .)
    FOR             reduce using rule 95 (assignment -> ID DIVIDE_ASSIGN expression .)
    RETURN          reduce using rule 95 (assignment -> ID DIVIDE_ASSIGN expression .)
    RBRACE          reduce using rule 95 (assignment -> ID DIVIDE_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 121

    (96) assignment -> ID MOD_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 96 (assignment -> ID MOD_ASSIGN expression .)
    CONST           reduce using rule 96 (assignment -> ID MOD_ASSIGN expression .)
    ID              reduce using rule 96 (assignment -> ID MOD_ASSIGN expression .)
    IF              reduce using rule 96 (assignment -> ID MOD_ASSIGN expression .)
    FOR             reduce using rule 96 (assignment -> ID MOD_ASSIGN expression .)
    RETURN          reduce using rule 96 (assignment -> ID MOD_ASSIGN expression .)
    RBRACE          reduce using rule 96 (assignment -> ID MOD_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 122

    (97) assignment -> ID BIT_AND_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 97 (assignment -> ID BIT_AND_ASSIGN expression .)
    CONST           reduce using rule 97 (assignment -> ID BIT_AND_ASSIGN expression .)
    ID              reduce using rule 97 (assignment -> ID BIT_AND_ASSIGN expression .)
    IF              reduce using rule 97 (assignment -> ID BIT_AND_ASSIGN expression .)
    FOR             reduce using rule 97 (assignment -> ID BIT_AND_ASSIGN expression .)
    RETURN          reduce using rule 97 (assignment -> ID BIT_AND_ASSIGN expression .)
    RBRACE          reduce using rule 97 (assignment -> ID BIT_AND_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 123

    (98) assignment -> ID BIT_OR_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 98 (assignment -> ID BIT_OR_ASSIGN expression .)
    CONST           reduce using rule 98 (assignment -> ID BIT_OR_ASSIGN expression .)
    ID              reduce using rule 98 (assignment -> ID BIT_OR_ASSIGN expression .)
    IF              reduce using rule 98 (assignment -> ID BIT_OR_ASSIGN expression .)
    FOR             reduce using rule 98 (assignment -> ID BIT_OR_ASSIGN expression .)
    RETURN          reduce using rule 98 (assignment -> ID BIT_OR_ASSIGN expression .)
    RBRACE          reduce using rule 98 (assignment -> ID BIT_OR_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 124

    (99) assignment -> ID BIT_XOR_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 99 (assignment -> ID BIT_XOR_ASSIGN expression .)
    CONST           reduce using rule 99 (assignment -> ID BIT_XOR_ASSIGN expression .)
    ID              reduce using rule 99 (assignment -> ID BIT_XOR_ASSIGN expression .)
    IF              reduce using rule 99 (assignment -> ID BIT_XOR_ASSIGN expression .)
    FOR             reduce using rule 99 (assignment -> ID BIT_XOR_ASSIGN expression .)
    RETURN          reduce using rule 99 (assignment -> ID BIT_XOR_ASSIGN expression .)
    RBRACE          reduce using rule 99 (assignment -> ID BIT_XOR_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 125

    (100) assignment -> ID BIT_LSHIFT_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 100 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    CONST           reduce using rule 100 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    ID              reduce using rule 100 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    IF              reduce using rule 100 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    FOR             reduce using rule 100 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    RETURN          reduce using rule 100 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    RBRACE          reduce using rule 100 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 126

    (101) assignment -> ID BIT_RSHIFT_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 101 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    CONST           reduce using rule 101 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    ID              reduce using rule 101 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    IF              reduce using rule 101 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    FOR             reduce using rule 101 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    RETURN          reduce using rule 101 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    RBRACE          reduce using rule 101 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 127

    (56) declaration_imutable -> ID DECLARE_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 56 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    CONST           reduce using rule 56 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    ID              reduce using rule 56 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    IF              reduce using rule 56 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    FOR             reduce using rule 56 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    RETURN          reduce using rule 56 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    RBRACE          reduce using rule 56 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    SEMICOLON       reduce using rule 56 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 128

    (57) declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET . id_list RBRACKET
    (46) id_list -> . expression more_expressions
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    id_list                        shift and go to state 162
    expression                     shift and go to state 114
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 129

    (35) var_statement -> CONST ID DECLARE_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 163
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 130

    (49) if_statement -> IF expression_relacional LBRACE . statement RBRACE
    (50) if_statement -> IF expression_relacional LBRACE . statement RBRACE elseop
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    statement                      shift and go to state 164
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 131

    (83) expression_relacional -> expression EQ . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 165
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 132

    (84) expression_relacional -> expression NEQ . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 166
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 133

    (85) expression_relacional -> expression LT . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 167
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 134

    (86) expression_relacional -> expression LE . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 168
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 135

    (87) expression_relacional -> expression GT . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 169
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 136

    (88) expression_relacional -> expression GE . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 170
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 137

    (89) expression_relacional -> expression AND . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 171
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 138

    (90) expression_relacional -> expression OR . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 172
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 139

    (59) expression -> expression PLUS . term
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 174
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    term                           shift and go to state 173
    factor                         shift and go to state 91

state 140

    (60) expression -> expression MINUS . term
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 174
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    term                           shift and go to state 175
    factor                         shift and go to state 91

state 141

    (91) expression_relacional -> NOT expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    LBRACE          reduce using rule 91 (expression_relacional -> NOT expression .)
    SEMICOLON       reduce using rule 91 (expression_relacional -> NOT expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 142

    (64) term -> term TIMES . factor
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 174
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    factor                         shift and go to state 176

state 143

    (65) term -> term DIVIDE . factor
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 174
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    factor                         shift and go to state 177

state 144

    (66) term -> term MOD . factor
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 174
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    factor                         shift and go to state 178

state 145

    (44) func_call_list -> ID LBRACKET . DOTDOT RBRACKET
    (45) func_call_list -> ID LBRACKET . NUMBER DOTDOT NUMBER RBRACKET
    (76) factor -> ID LBRACKET . NUMBER RBRACKET

    DOTDOT          shift and go to state 116
    NUMBER          shift and go to state 179


state 146

    (75) factor -> LPAREN expression . RPAREN
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    RPAREN          shift and go to state 180
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 147

    (53) for_statement -> FOR ID IN . expression LBRACE statement RBRACE
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 181
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 148

    (56) declaration_imutable -> ID DECLARE_ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 127
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 149

    (54) for_statement -> FOR declaration_imutable SEMICOLON . expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (83) expression_relacional -> . expression EQ expression
    (84) expression_relacional -> . expression NEQ expression
    (85) expression_relacional -> . expression LT expression
    (86) expression_relacional -> . expression LE expression
    (87) expression_relacional -> . expression GT expression
    (88) expression_relacional -> . expression GE expression
    (89) expression_relacional -> . expression AND expression
    (90) expression_relacional -> . expression OR expression
    (91) expression_relacional -> . NOT expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    NOT             shift and go to state 85
    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression_relacional          shift and go to state 182
    increment_rule                 shift and go to state 87
    expression                     shift and go to state 84
    term                           shift and go to state 86
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 150

    (55) for_statement -> FOR expression_relacional LBRACE . statement RBRACE
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    statement                      shift and go to state 183
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 151

    (5) function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition .

    $end            reduce using rule 5 (function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition .)


state 152

    (6) function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE . function_definition
    (5) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
    (7) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    FN              shift and go to state 5

    function_definition            shift and go to state 184

state 153

    (8) function_definition_without_main -> FN ID . LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> FN ID . LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main

    LPAREN          shift and go to state 185


state 154

    (34) var_statement -> MUT ID DECLARE_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 34 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    CONST           reduce using rule 34 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    ID              reduce using rule 34 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    IF              reduce using rule 34 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    FOR             reduce using rule 34 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    RETURN          reduce using rule 34 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    RBRACE          reduce using rule 34 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 155

    (38) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET . id_list RBRACKET
    (39) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET . NUMBER RBRACKET type
    (46) id_list -> . expression more_expressions
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    NUMBER          shift and go to state 187
    ID              shift and go to state 89
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    id_list                        shift and go to state 186
    expression                     shift and go to state 114
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 156

    (41) func_call -> ID LPAREN id_list RPAREN .

    MUT             reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    CONST           reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    ID              reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    IF              reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    FOR             reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    RETURN          reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    RBRACE          reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    EQ              reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    NEQ             reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    LT              reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    LE              reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    GT              reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    GE              reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    AND             reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    OR              reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    PLUS            reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    MINUS           reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    COMMA           reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    RPAREN          reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    LBRACE          reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    SEMICOLON       reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)
    RBRACKET        reduce using rule 41 (func_call -> ID LPAREN id_list RPAREN .)


state 157

    (46) id_list -> expression more_expressions .

    RPAREN          reduce using rule 46 (id_list -> expression more_expressions .)
    RBRACKET        reduce using rule 46 (id_list -> expression more_expressions .)


state 158

    (47) more_expressions -> COMMA . expression more_expressions
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 188
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 159

    (40) list_assignment -> ID LBRACKET NUMBER RBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 189


state 160

    (45) func_call_list -> ID LBRACKET NUMBER DOTDOT . NUMBER RBRACKET

    NUMBER          shift and go to state 190


state 161

    (44) func_call_list -> ID LBRACKET DOTDOT RBRACKET .

    MUT             reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    CONST           reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    ID              reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    IF              reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    FOR             reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RETURN          reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RBRACE          reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    EQ              reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    NEQ             reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    LT              reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    LE              reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    GT              reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    GE              reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    AND             reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    OR              reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    PLUS            reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    MINUS           reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    COMMA           reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RPAREN          reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    LBRACE          reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    SEMICOLON       reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RBRACKET        reduce using rule 44 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)


state 162

    (57) declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list . RBRACKET

    RBRACKET        shift and go to state 191


state 163

    (35) var_statement -> CONST ID DECLARE_ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 35 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    CONST           reduce using rule 35 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    ID              reduce using rule 35 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    IF              reduce using rule 35 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    FOR             reduce using rule 35 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    RETURN          reduce using rule 35 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    RBRACE          reduce using rule 35 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 164

    (49) if_statement -> IF expression_relacional LBRACE statement . RBRACE
    (50) if_statement -> IF expression_relacional LBRACE statement . RBRACE elseop

    RBRACE          shift and go to state 192


state 165

    (83) expression_relacional -> expression EQ expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    LBRACE          reduce using rule 83 (expression_relacional -> expression EQ expression .)
    SEMICOLON       reduce using rule 83 (expression_relacional -> expression EQ expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 166

    (84) expression_relacional -> expression NEQ expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    LBRACE          reduce using rule 84 (expression_relacional -> expression NEQ expression .)
    SEMICOLON       reduce using rule 84 (expression_relacional -> expression NEQ expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 167

    (85) expression_relacional -> expression LT expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    LBRACE          reduce using rule 85 (expression_relacional -> expression LT expression .)
    SEMICOLON       reduce using rule 85 (expression_relacional -> expression LT expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 168

    (86) expression_relacional -> expression LE expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    LBRACE          reduce using rule 86 (expression_relacional -> expression LE expression .)
    SEMICOLON       reduce using rule 86 (expression_relacional -> expression LE expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 169

    (87) expression_relacional -> expression GT expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    LBRACE          reduce using rule 87 (expression_relacional -> expression GT expression .)
    SEMICOLON       reduce using rule 87 (expression_relacional -> expression GT expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 170

    (88) expression_relacional -> expression GE expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    LBRACE          reduce using rule 88 (expression_relacional -> expression GE expression .)
    SEMICOLON       reduce using rule 88 (expression_relacional -> expression GE expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 171

    (89) expression_relacional -> expression AND expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    LBRACE          reduce using rule 89 (expression_relacional -> expression AND expression .)
    SEMICOLON       reduce using rule 89 (expression_relacional -> expression AND expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 172

    (90) expression_relacional -> expression OR expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    LBRACE          reduce using rule 90 (expression_relacional -> expression OR expression .)
    SEMICOLON       reduce using rule 90 (expression_relacional -> expression OR expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 173

    (59) expression -> expression PLUS term .
    (64) term -> term . TIMES factor
    (65) term -> term . DIVIDE factor
    (66) term -> term . MOD factor

    EQ              reduce using rule 59 (expression -> expression PLUS term .)
    NEQ             reduce using rule 59 (expression -> expression PLUS term .)
    LT              reduce using rule 59 (expression -> expression PLUS term .)
    LE              reduce using rule 59 (expression -> expression PLUS term .)
    GT              reduce using rule 59 (expression -> expression PLUS term .)
    GE              reduce using rule 59 (expression -> expression PLUS term .)
    AND             reduce using rule 59 (expression -> expression PLUS term .)
    OR              reduce using rule 59 (expression -> expression PLUS term .)
    PLUS            reduce using rule 59 (expression -> expression PLUS term .)
    MINUS           reduce using rule 59 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 59 (expression -> expression PLUS term .)
    MUT             reduce using rule 59 (expression -> expression PLUS term .)
    CONST           reduce using rule 59 (expression -> expression PLUS term .)
    ID              reduce using rule 59 (expression -> expression PLUS term .)
    IF              reduce using rule 59 (expression -> expression PLUS term .)
    FOR             reduce using rule 59 (expression -> expression PLUS term .)
    RETURN          reduce using rule 59 (expression -> expression PLUS term .)
    COMMA           reduce using rule 59 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 59 (expression -> expression PLUS term .)
    LBRACE          reduce using rule 59 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 59 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 59 (expression -> expression PLUS term .)
    TIMES           shift and go to state 142
    DIVIDE          shift and go to state 143
    MOD             shift and go to state 144


state 174

    (68) factor -> ID .
    (76) factor -> ID . LBRACKET NUMBER RBRACKET

    TIMES           reduce using rule 68 (factor -> ID .)
    DIVIDE          reduce using rule 68 (factor -> ID .)
    MOD             reduce using rule 68 (factor -> ID .)
    EQ              reduce using rule 68 (factor -> ID .)
    NEQ             reduce using rule 68 (factor -> ID .)
    LT              reduce using rule 68 (factor -> ID .)
    LE              reduce using rule 68 (factor -> ID .)
    GT              reduce using rule 68 (factor -> ID .)
    GE              reduce using rule 68 (factor -> ID .)
    AND             reduce using rule 68 (factor -> ID .)
    OR              reduce using rule 68 (factor -> ID .)
    PLUS            reduce using rule 68 (factor -> ID .)
    MINUS           reduce using rule 68 (factor -> ID .)
    RBRACE          reduce using rule 68 (factor -> ID .)
    MUT             reduce using rule 68 (factor -> ID .)
    CONST           reduce using rule 68 (factor -> ID .)
    ID              reduce using rule 68 (factor -> ID .)
    IF              reduce using rule 68 (factor -> ID .)
    FOR             reduce using rule 68 (factor -> ID .)
    RETURN          reduce using rule 68 (factor -> ID .)
    COMMA           reduce using rule 68 (factor -> ID .)
    RPAREN          reduce using rule 68 (factor -> ID .)
    LBRACE          reduce using rule 68 (factor -> ID .)
    SEMICOLON       reduce using rule 68 (factor -> ID .)
    RBRACKET        reduce using rule 68 (factor -> ID .)
    LBRACKET        shift and go to state 193


state 175

    (60) expression -> expression MINUS term .
    (64) term -> term . TIMES factor
    (65) term -> term . DIVIDE factor
    (66) term -> term . MOD factor

    EQ              reduce using rule 60 (expression -> expression MINUS term .)
    NEQ             reduce using rule 60 (expression -> expression MINUS term .)
    LT              reduce using rule 60 (expression -> expression MINUS term .)
    LE              reduce using rule 60 (expression -> expression MINUS term .)
    GT              reduce using rule 60 (expression -> expression MINUS term .)
    GE              reduce using rule 60 (expression -> expression MINUS term .)
    AND             reduce using rule 60 (expression -> expression MINUS term .)
    OR              reduce using rule 60 (expression -> expression MINUS term .)
    PLUS            reduce using rule 60 (expression -> expression MINUS term .)
    MINUS           reduce using rule 60 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 60 (expression -> expression MINUS term .)
    MUT             reduce using rule 60 (expression -> expression MINUS term .)
    CONST           reduce using rule 60 (expression -> expression MINUS term .)
    ID              reduce using rule 60 (expression -> expression MINUS term .)
    IF              reduce using rule 60 (expression -> expression MINUS term .)
    FOR             reduce using rule 60 (expression -> expression MINUS term .)
    RETURN          reduce using rule 60 (expression -> expression MINUS term .)
    COMMA           reduce using rule 60 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 60 (expression -> expression MINUS term .)
    LBRACE          reduce using rule 60 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 60 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 60 (expression -> expression MINUS term .)
    TIMES           shift and go to state 142
    DIVIDE          shift and go to state 143
    MOD             shift and go to state 144


state 176

    (64) term -> term TIMES factor .

    TIMES           reduce using rule 64 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 64 (term -> term TIMES factor .)
    MOD             reduce using rule 64 (term -> term TIMES factor .)
    EQ              reduce using rule 64 (term -> term TIMES factor .)
    NEQ             reduce using rule 64 (term -> term TIMES factor .)
    LT              reduce using rule 64 (term -> term TIMES factor .)
    LE              reduce using rule 64 (term -> term TIMES factor .)
    GT              reduce using rule 64 (term -> term TIMES factor .)
    GE              reduce using rule 64 (term -> term TIMES factor .)
    AND             reduce using rule 64 (term -> term TIMES factor .)
    OR              reduce using rule 64 (term -> term TIMES factor .)
    PLUS            reduce using rule 64 (term -> term TIMES factor .)
    MINUS           reduce using rule 64 (term -> term TIMES factor .)
    RBRACE          reduce using rule 64 (term -> term TIMES factor .)
    MUT             reduce using rule 64 (term -> term TIMES factor .)
    CONST           reduce using rule 64 (term -> term TIMES factor .)
    ID              reduce using rule 64 (term -> term TIMES factor .)
    IF              reduce using rule 64 (term -> term TIMES factor .)
    FOR             reduce using rule 64 (term -> term TIMES factor .)
    RETURN          reduce using rule 64 (term -> term TIMES factor .)
    COMMA           reduce using rule 64 (term -> term TIMES factor .)
    RPAREN          reduce using rule 64 (term -> term TIMES factor .)
    LBRACE          reduce using rule 64 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 64 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 64 (term -> term TIMES factor .)


state 177

    (65) term -> term DIVIDE factor .

    TIMES           reduce using rule 65 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 65 (term -> term DIVIDE factor .)
    MOD             reduce using rule 65 (term -> term DIVIDE factor .)
    EQ              reduce using rule 65 (term -> term DIVIDE factor .)
    NEQ             reduce using rule 65 (term -> term DIVIDE factor .)
    LT              reduce using rule 65 (term -> term DIVIDE factor .)
    LE              reduce using rule 65 (term -> term DIVIDE factor .)
    GT              reduce using rule 65 (term -> term DIVIDE factor .)
    GE              reduce using rule 65 (term -> term DIVIDE factor .)
    AND             reduce using rule 65 (term -> term DIVIDE factor .)
    OR              reduce using rule 65 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 65 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 65 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 65 (term -> term DIVIDE factor .)
    MUT             reduce using rule 65 (term -> term DIVIDE factor .)
    CONST           reduce using rule 65 (term -> term DIVIDE factor .)
    ID              reduce using rule 65 (term -> term DIVIDE factor .)
    IF              reduce using rule 65 (term -> term DIVIDE factor .)
    FOR             reduce using rule 65 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 65 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 65 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 65 (term -> term DIVIDE factor .)
    LBRACE          reduce using rule 65 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 65 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 65 (term -> term DIVIDE factor .)


state 178

    (66) term -> term MOD factor .

    TIMES           reduce using rule 66 (term -> term MOD factor .)
    DIVIDE          reduce using rule 66 (term -> term MOD factor .)
    MOD             reduce using rule 66 (term -> term MOD factor .)
    EQ              reduce using rule 66 (term -> term MOD factor .)
    NEQ             reduce using rule 66 (term -> term MOD factor .)
    LT              reduce using rule 66 (term -> term MOD factor .)
    LE              reduce using rule 66 (term -> term MOD factor .)
    GT              reduce using rule 66 (term -> term MOD factor .)
    GE              reduce using rule 66 (term -> term MOD factor .)
    AND             reduce using rule 66 (term -> term MOD factor .)
    OR              reduce using rule 66 (term -> term MOD factor .)
    PLUS            reduce using rule 66 (term -> term MOD factor .)
    MINUS           reduce using rule 66 (term -> term MOD factor .)
    RBRACE          reduce using rule 66 (term -> term MOD factor .)
    MUT             reduce using rule 66 (term -> term MOD factor .)
    CONST           reduce using rule 66 (term -> term MOD factor .)
    ID              reduce using rule 66 (term -> term MOD factor .)
    IF              reduce using rule 66 (term -> term MOD factor .)
    FOR             reduce using rule 66 (term -> term MOD factor .)
    RETURN          reduce using rule 66 (term -> term MOD factor .)
    COMMA           reduce using rule 66 (term -> term MOD factor .)
    RPAREN          reduce using rule 66 (term -> term MOD factor .)
    LBRACE          reduce using rule 66 (term -> term MOD factor .)
    SEMICOLON       reduce using rule 66 (term -> term MOD factor .)
    RBRACKET        reduce using rule 66 (term -> term MOD factor .)


state 179

    (45) func_call_list -> ID LBRACKET NUMBER . DOTDOT NUMBER RBRACKET
    (76) factor -> ID LBRACKET NUMBER . RBRACKET

    DOTDOT          shift and go to state 160
    RBRACKET        shift and go to state 194


state 180

    (75) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    MUT             reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    CONST           reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 75 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 75 (factor -> LPAREN expression RPAREN .)


state 181

    (53) for_statement -> FOR ID IN expression . LBRACE statement RBRACE
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    LBRACE          shift and go to state 195
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 182

    (54) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional . SEMICOLON increment_rule LBRACE statement RBRACE

    SEMICOLON       shift and go to state 196


state 183

    (55) for_statement -> FOR expression_relacional LBRACE statement . RBRACE

    RBRACE          shift and go to state 197


state 184

    (6) function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition .

    $end            reduce using rule 6 (function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition .)


state 185

    (8) function_definition_without_main -> FN ID LPAREN . params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> FN ID LPAREN . params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (11) params -> . param more_params
    (14) param -> . ID type

    ID              shift and go to state 13

    params                         shift and go to state 198
    param                          shift and go to state 15

state 186

    (38) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list . RBRACKET

    RBRACKET        shift and go to state 199


state 187

    (39) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER . RBRACKET type
    (69) factor -> NUMBER .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 200
    TIMES           reduce using rule 69 (factor -> NUMBER .)
    DIVIDE          reduce using rule 69 (factor -> NUMBER .)
    MOD             reduce using rule 69 (factor -> NUMBER .)
    PLUS            reduce using rule 69 (factor -> NUMBER .)
    MINUS           reduce using rule 69 (factor -> NUMBER .)
    COMMA           reduce using rule 69 (factor -> NUMBER .)

  ! RBRACKET        [ reduce using rule 69 (factor -> NUMBER .) ]


state 188

    (47) more_expressions -> COMMA expression . more_expressions
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term
    (47) more_expressions -> . COMMA expression more_expressions
    (48) more_expressions -> .

    PLUS            shift and go to state 139
    MINUS           shift and go to state 140
    COMMA           shift and go to state 158
    RPAREN          reduce using rule 48 (more_expressions -> .)
    RBRACKET        reduce using rule 48 (more_expressions -> .)

    more_expressions               shift and go to state 201

state 189

    (40) list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN . expression
    (59) expression -> . expression PLUS term
    (60) expression -> . expression MINUS term
    (61) expression -> . increment_rule
    (62) expression -> . func_call
    (63) expression -> . term
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MOD factor
    (67) term -> . factor
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (68) factor -> . ID
    (69) factor -> . NUMBER
    (70) factor -> . NUMBERFLOAT
    (71) factor -> . STRING
    (72) factor -> . TRUE
    (73) factor -> . FALSE
    (74) factor -> . RUNE
    (75) factor -> . LPAREN expression RPAREN
    (76) factor -> . ID LBRACKET NUMBER RBRACKET
    (77) factor -> . NOTACAOCIENTIFICA
    (78) factor -> . BINARY
    (79) factor -> . OCTAL
    (80) factor -> . HEX

    ID              shift and go to state 89
    NUMBER          shift and go to state 92
    NUMBERFLOAT     shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    RUNE            shift and go to state 97
    LPAREN          shift and go to state 90
    NOTACAOCIENTIFICA shift and go to state 98
    BINARY          shift and go to state 99
    OCTAL           shift and go to state 100
    HEX             shift and go to state 101

    expression                     shift and go to state 202
    term                           shift and go to state 86
    increment_rule                 shift and go to state 87
    func_call                      shift and go to state 88
    func_call_list                 shift and go to state 47
    factor                         shift and go to state 91

state 190

    (45) func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER . RBRACKET

    RBRACKET        shift and go to state 203


state 191

    (57) declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .

    MUT             reduce using rule 57 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    CONST           reduce using rule 57 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    ID              reduce using rule 57 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    IF              reduce using rule 57 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    FOR             reduce using rule 57 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RETURN          reduce using rule 57 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RBRACE          reduce using rule 57 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)


state 192

    (49) if_statement -> IF expression_relacional LBRACE statement RBRACE .
    (50) if_statement -> IF expression_relacional LBRACE statement RBRACE . elseop
    (51) elseop -> . ELSE if_statement
    (52) elseop -> . ELSE LBRACE statement RBRACE

    MUT             reduce using rule 49 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    CONST           reduce using rule 49 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    ID              reduce using rule 49 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    IF              reduce using rule 49 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    FOR             reduce using rule 49 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    RETURN          reduce using rule 49 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    RBRACE          reduce using rule 49 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    ELSE            shift and go to state 205

    elseop                         shift and go to state 204

state 193

    (76) factor -> ID LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 206


state 194

    (76) factor -> ID LBRACKET NUMBER RBRACKET .

    TIMES           reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    MOD             reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    EQ              reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    NEQ             reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    LT              reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    LE              reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    GT              reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    GE              reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    AND             reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    OR              reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RBRACE          reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    MUT             reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    CONST           reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    ID              reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    IF              reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    FOR             reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RETURN          reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    COMMA           reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RPAREN          reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    LBRACE          reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    SEMICOLON       reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RBRACKET        reduce using rule 76 (factor -> ID LBRACKET NUMBER RBRACKET .)


state 195

    (53) for_statement -> FOR ID IN expression LBRACE . statement RBRACE
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    statement                      shift and go to state 207
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 196

    (54) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON . increment_rule LBRACE statement RBRACE
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT

    ID              shift and go to state 209

    increment_rule                 shift and go to state 208

state 197

    (55) for_statement -> FOR expression_relacional LBRACE statement RBRACE .

    MUT             reduce using rule 55 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    CONST           reduce using rule 55 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    ID              reduce using rule 55 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    IF              reduce using rule 55 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    FOR             reduce using rule 55 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    RETURN          reduce using rule 55 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    RBRACE          reduce using rule 55 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)


state 198

    (8) function_definition_without_main -> FN ID LPAREN params . RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> FN ID LPAREN params . RPAREN type LBRACE block_statement RBRACE function_definition_without_main

    RPAREN          shift and go to state 210


state 199

    (38) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .

    MUT             reduce using rule 38 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    CONST           reduce using rule 38 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    ID              reduce using rule 38 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    IF              reduce using rule 38 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    FOR             reduce using rule 38 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RETURN          reduce using rule 38 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RBRACE          reduce using rule 38 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)


state 200

    (39) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET . type
    (15) type -> . INT
    (16) type -> . F32
    (17) type -> . F64
    (18) type -> . STRING
    (19) type -> . BOOL
    (20) type -> . RUNE

    INT             shift and go to state 18
    F32             shift and go to state 19
    F64             shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    RUNE            shift and go to state 23

    type                           shift and go to state 211

state 201

    (47) more_expressions -> COMMA expression more_expressions .

    RPAREN          reduce using rule 47 (more_expressions -> COMMA expression more_expressions .)
    RBRACKET        reduce using rule 47 (more_expressions -> COMMA expression more_expressions .)


state 202

    (40) list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .
    (59) expression -> expression . PLUS term
    (60) expression -> expression . MINUS term

    MUT             reduce using rule 40 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    CONST           reduce using rule 40 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    ID              reduce using rule 40 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    IF              reduce using rule 40 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    FOR             reduce using rule 40 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    RETURN          reduce using rule 40 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    RBRACE          reduce using rule 40 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140


state 203

    (45) func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .

    MUT             reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    CONST           reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    ID              reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    IF              reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    FOR             reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RETURN          reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RBRACE          reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    EQ              reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    NEQ             reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    LT              reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    LE              reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    GT              reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    GE              reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    AND             reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    OR              reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    PLUS            reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    MINUS           reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    COMMA           reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RPAREN          reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    LBRACE          reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    SEMICOLON       reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RBRACKET        reduce using rule 45 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)


state 204

    (50) if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .

    MUT             reduce using rule 50 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    CONST           reduce using rule 50 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    ID              reduce using rule 50 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    IF              reduce using rule 50 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    FOR             reduce using rule 50 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    RETURN          reduce using rule 50 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    RBRACE          reduce using rule 50 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)


state 205

    (51) elseop -> ELSE . if_statement
    (52) elseop -> ELSE . LBRACE statement RBRACE
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop

    LBRACE          shift and go to state 213
    IF              shift and go to state 48

    if_statement                   shift and go to state 212

state 206

    (76) factor -> ID LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 194


state 207

    (53) for_statement -> FOR ID IN expression LBRACE statement . RBRACE

    RBRACE          shift and go to state 214


state 208

    (54) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule . LBRACE statement RBRACE

    LBRACE          shift and go to state 215


state 209

    (81) increment_rule -> ID . INCREMENT
    (82) increment_rule -> ID . DECREMENT

    INCREMENT       shift and go to state 69
    DECREMENT       shift and go to state 70


state 210

    (8) function_definition_without_main -> FN ID LPAREN params RPAREN . LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> FN ID LPAREN params RPAREN . type LBRACE block_statement RBRACE function_definition_without_main
    (15) type -> . INT
    (16) type -> . F32
    (17) type -> . F64
    (18) type -> . STRING
    (19) type -> . BOOL
    (20) type -> . RUNE

    LBRACE          shift and go to state 216
    INT             shift and go to state 18
    F32             shift and go to state 19
    F64             shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    RUNE            shift and go to state 23

    type                           shift and go to state 217

state 211

    (39) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type .

    MUT             reduce using rule 39 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type .)
    CONST           reduce using rule 39 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type .)
    ID              reduce using rule 39 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type .)
    IF              reduce using rule 39 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type .)
    FOR             reduce using rule 39 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type .)
    RETURN          reduce using rule 39 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type .)
    RBRACE          reduce using rule 39 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type .)


state 212

    (51) elseop -> ELSE if_statement .

    MUT             reduce using rule 51 (elseop -> ELSE if_statement .)
    CONST           reduce using rule 51 (elseop -> ELSE if_statement .)
    ID              reduce using rule 51 (elseop -> ELSE if_statement .)
    IF              reduce using rule 51 (elseop -> ELSE if_statement .)
    FOR             reduce using rule 51 (elseop -> ELSE if_statement .)
    RETURN          reduce using rule 51 (elseop -> ELSE if_statement .)
    RBRACE          reduce using rule 51 (elseop -> ELSE if_statement .)


state 213

    (52) elseop -> ELSE LBRACE . statement RBRACE
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    statement                      shift and go to state 218
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 214

    (53) for_statement -> FOR ID IN expression LBRACE statement RBRACE .

    MUT             reduce using rule 53 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    CONST           reduce using rule 53 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    ID              reduce using rule 53 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    IF              reduce using rule 53 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    FOR             reduce using rule 53 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    RETURN          reduce using rule 53 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    RBRACE          reduce using rule 53 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)


state 215

    (54) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE . statement RBRACE
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    declaration_imutable           shift and go to state 43
    increment_rule                 shift and go to state 41
    statement                      shift and go to state 219
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    assignment                     shift and go to state 42
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 216

    (8) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE . block_statement RBRACE function_definition_without_main
    (21) block_statement -> . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    block_statement                shift and go to state 220
    statement                      shift and go to state 32
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 217

    (9) function_definition_without_main -> FN ID LPAREN params RPAREN type . LBRACE block_statement RBRACE function_definition_without_main

    LBRACE          shift and go to state 221


state 218

    (52) elseop -> ELSE LBRACE statement . RBRACE

    RBRACE          shift and go to state 222


state 219

    (54) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement . RBRACE

    RBRACE          shift and go to state 223


state 220

    (8) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement . RBRACE function_definition_without_main

    RBRACE          shift and go to state 224


state 221

    (9) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE . block_statement RBRACE function_definition_without_main
    (21) block_statement -> . statement
    (22) statement -> . var_statement statement
    (23) statement -> . var_assignment statement
    (24) statement -> . func_call statement
    (25) statement -> . if_statement statement
    (26) statement -> . for_statement statement
    (27) statement -> . return_statement
    (28) statement -> .
    (29) statement -> . list_statement statement
    (30) statement -> . list_assignment statement
    (31) statement -> . increment_rule statement
    (32) statement -> . assignment statement
    (33) var_statement -> . declaration_imutable
    (34) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (35) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (36) var_assignment -> . ID ASSIGN expression
    (41) func_call -> . ID LPAREN id_list RPAREN
    (42) func_call -> . ID LPAREN RPAREN
    (43) func_call -> . func_call_list
    (49) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (50) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (53) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (54) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (55) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (58) return_statement -> . RETURN expression
    (37) list_statement -> . declaration_imutable_list
    (38) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (39) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET type
    (40) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (81) increment_rule -> . ID INCREMENT
    (82) increment_rule -> . ID DECREMENT
    (92) assignment -> . ID PLUS_ASSIGN expression
    (93) assignment -> . ID MINUS_ASSIGN expression
    (94) assignment -> . ID TIMES_ASSIGN expression
    (95) assignment -> . ID DIVIDE_ASSIGN expression
    (96) assignment -> . ID MOD_ASSIGN expression
    (97) assignment -> . ID BIT_AND_ASSIGN expression
    (98) assignment -> . ID BIT_OR_ASSIGN expression
    (99) assignment -> . ID BIT_XOR_ASSIGN expression
    (100) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (101) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (56) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (44) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (45) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (57) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 28 (statement -> .)
    MUT             shift and go to state 44
    CONST           shift and go to state 46
    ID              shift and go to state 45
    IF              shift and go to state 48
    FOR             shift and go to state 49
    RETURN          shift and go to state 50

    block_statement                shift and go to state 225
    statement                      shift and go to state 32
    var_statement                  shift and go to state 33
    var_assignment                 shift and go to state 34
    func_call                      shift and go to state 35
    if_statement                   shift and go to state 36
    for_statement                  shift and go to state 37
    return_statement               shift and go to state 38
    list_statement                 shift and go to state 39
    list_assignment                shift and go to state 40
    increment_rule                 shift and go to state 41
    assignment                     shift and go to state 42
    declaration_imutable           shift and go to state 43
    func_call_list                 shift and go to state 47
    declaration_imutable_list      shift and go to state 51

state 222

    (52) elseop -> ELSE LBRACE statement RBRACE .

    MUT             reduce using rule 52 (elseop -> ELSE LBRACE statement RBRACE .)
    CONST           reduce using rule 52 (elseop -> ELSE LBRACE statement RBRACE .)
    ID              reduce using rule 52 (elseop -> ELSE LBRACE statement RBRACE .)
    IF              reduce using rule 52 (elseop -> ELSE LBRACE statement RBRACE .)
    FOR             reduce using rule 52 (elseop -> ELSE LBRACE statement RBRACE .)
    RETURN          reduce using rule 52 (elseop -> ELSE LBRACE statement RBRACE .)
    RBRACE          reduce using rule 52 (elseop -> ELSE LBRACE statement RBRACE .)


state 223

    (54) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .

    MUT             reduce using rule 54 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    CONST           reduce using rule 54 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    ID              reduce using rule 54 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    IF              reduce using rule 54 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    FOR             reduce using rule 54 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    RETURN          reduce using rule 54 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    RBRACE          reduce using rule 54 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)


state 224

    (8) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE . function_definition_without_main
    (8) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (10) function_definition_without_main -> .

    FN              shift and go to state 108
    $end            reduce using rule 10 (function_definition_without_main -> .)

    function_definition_without_main shift and go to state 226

state 225

    (9) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement . RBRACE function_definition_without_main

    RBRACE          shift and go to state 227


state 226

    (8) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main .

    $end            reduce using rule 8 (function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main .)


state 227

    (9) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE . function_definition_without_main
    (8) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (10) function_definition_without_main -> .

    FN              shift and go to state 108
    $end            reduce using rule 10 (function_definition_without_main -> .)

    function_definition_without_main shift and go to state 228

state 228

    (9) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main .

    $end            reduce using rule 9 (function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACKET in state 187 resolved as shift
