Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    ASPASDUPLAS
    ASPASSIMPLES
    ASSERT
    BINARY
    BIT_AND
    BIT_AND_ASSIGN
    BIT_LSHIFT_ASSIGN
    BIT_NOT
    BIT_OR
    BIT_OR_ASSIGN
    BIT_RSHIFT_ASSIGN
    BIT_XOR
    BIT_XOR_ASSIGN
    BREAK
    COLON
    CONTINUE
    DECREMENT
    DEFER
    DIVIDE_ASSIGN
    DOLLAR
    DOT
    DOTDOT
    ENUM
    EXCLAMATION
    GLOBAL
    INCREMENT
    IS
    ISREFTYPE
    LBRACKET
    LSHIFT
    MATCH
    MINUS_ASSIGN
    MOD_ASSIGN
    NONE
    NOTACAOCIENTIFICA
    NUMBERFLOAT
    OCTALHEX
    PLUS_ASSIGN
    QUESTION
    RBRACKET
    RSHIFT
    SIZEOF
    TIMES_ASSIGN
    TYPE
    TYPEOF
    UNION
    UNSAFE

Grammar

Rule 0     S' -> program
Rule 1     program -> program_Import function_definition
Rule 2     program -> function_definition
Rule 3     program_Import -> IMPORT ID program_Import
Rule 4     program_Import -> IMPORT ID
Rule 5     function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
Rule 6     function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
Rule 7     function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main
Rule 8     function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
Rule 9     function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
Rule 10    function_definition_without_main -> <empty>
Rule 11    params -> param more_params
Rule 12    more_params -> COMMA param more_params
Rule 13    more_params -> <empty>
Rule 14    param -> ID type
Rule 15    type -> INT
Rule 16    type -> F32
Rule 17    type -> F64
Rule 18    type -> STRING
Rule 19    type -> BOOL
Rule 20    type -> RUNE
Rule 21    block_statement -> var_statement
Rule 22    block_statement -> var_assignment
Rule 23    block_statement -> func_call
Rule 24    block_statement -> if_statement
Rule 25    block_statement -> for_statement
Rule 26    block_statement -> return_statement
Rule 27    var_statement -> declaration_imutable
Rule 28    var_statement -> MUT ID DECLARE_ASSIGN expression
Rule 29    var_statement -> CONST ID DECLARE_ASSIGN expression
Rule 30    var_assignment -> ID ASSIGN expression
Rule 31    func_call -> ID LPAREN id_list RPAREN
Rule 32    func_call -> ID LPAREN RPAREN
Rule 33    id_list -> expression more_expressions
Rule 34    more_expressions -> COMMA expression more_expressions
Rule 35    more_expressions -> <empty>
Rule 36    if_statement -> IF expression_relacional LBRACE block_statement RBRACE
Rule 37    if_statement -> IF expression_relacional LBRACE block_statement RBRACE elseop
Rule 38    elseop -> ELSE if_statement
Rule 39    elseop -> ELSE LBRACE block_statement RBRACE
Rule 40    for_statement -> FOR ID IN expression LBRACE block_statement RBRACE
Rule 41    for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
Rule 42    for_statement -> FOR expression_relacional LBRACE block_statement RBRACE
Rule 43    declaration_imutable -> ID DECLARE_ASSIGN expression
Rule 44    return_statement -> RETURN expression
Rule 45    expression -> expression PLUS term
Rule 46    expression -> expression MINUS term
Rule 47    expression -> term
Rule 48    term -> term TIMES factor
Rule 49    term -> term DIVIDE factor
Rule 50    term -> term MOD factor
Rule 51    term -> factor
Rule 52    factor -> ID
Rule 53    factor -> NUMBER
Rule 54    factor -> STRING
Rule 55    factor -> TRUE
Rule 56    factor -> FALSE
Rule 57    factor -> RUNE
Rule 58    factor -> LPAREN expression RPAREN
Rule 59    increment -> ID PLUS PLUS
Rule 60    increment -> ID MINUS MINUS
Rule 61    expression_relacional -> expression EQ expression
Rule 62    expression_relacional -> expression NEQ expression
Rule 63    expression_relacional -> expression LT expression
Rule 64    expression_relacional -> expression LE expression
Rule 65    expression_relacional -> expression GT expression
Rule 66    expression_relacional -> expression GE expression
Rule 67    expression_relacional -> expression AND expression
Rule 68    expression_relacional -> expression OR expression
Rule 69    expression_relacional -> NOT expression

Terminals, with rules where they appear

AND                  : 67
AS                   : 
ASPASDUPLAS          : 
ASPASSIMPLES         : 
ASSERT               : 
ASSIGN               : 30
BINARY               : 
BIT_AND              : 
BIT_AND_ASSIGN       : 
BIT_LSHIFT_ASSIGN    : 
BIT_NOT              : 
BIT_OR               : 
BIT_OR_ASSIGN        : 
BIT_RSHIFT_ASSIGN    : 
BIT_XOR              : 
BIT_XOR_ASSIGN       : 
BOOL                 : 19
BREAK                : 
COLON                : 
COMMA                : 12 34
CONST                : 29
CONTINUE             : 
DECLARE_ASSIGN       : 28 29 43
DECREMENT            : 
DEFER                : 
DIVIDE               : 49
DIVIDE_ASSIGN        : 
DOLLAR               : 
DOT                  : 
DOTDOT               : 
ELSE                 : 38 39
ENUM                 : 
EQ                   : 61
EXCLAMATION          : 
F32                  : 16
F64                  : 17
FALSE                : 56
FN                   : 5 6 7 8 9
FOR                  : 40 41 42
GE                   : 66
GLOBAL               : 
GT                   : 65
ID                   : 3 4 5 6 8 9 14 28 29 30 31 32 40 43 52 59 60
IF                   : 36 37
IMPORT               : 3 4
IN                   : 40
INCREMENT            : 
INT                  : 15
IS                   : 
ISREFTYPE            : 
LBRACE               : 5 6 7 8 9 36 37 39 40 41 42
LBRACKET             : 
LE                   : 64
LPAREN               : 5 6 7 8 9 31 32 58
LSHIFT               : 
LT                   : 63
MAIN                 : 7
MATCH                : 
MINUS                : 46 60 60
MINUS_ASSIGN         : 
MOD                  : 50
MOD_ASSIGN           : 
MUT                  : 28
NEQ                  : 62
NONE                 : 
NOT                  : 69
NOTACAOCIENTIFICA    : 
NUMBER               : 53
NUMBERFLOAT          : 
OCTALHEX             : 
OR                   : 68
PLUS                 : 45 59 59
PLUS_ASSIGN          : 
QUESTION             : 
RBRACE               : 5 6 7 8 9 36 37 39 40 41 42
RBRACKET             : 
RETURN               : 44
RPAREN               : 5 6 7 8 9 31 32 58
RSHIFT               : 
RUNE                 : 20 57
SEMICOLON            : 41 41
SIZEOF               : 
STRING               : 18 54
TIMES                : 48
TIMES_ASSIGN         : 
TRUE                 : 55
TYPE                 : 
TYPEOF               : 
UNION                : 
UNSAFE               : 
error                : 

Nonterminals, with rules where they appear

block_statement      : 5 6 7 8 9 36 37 39 40 41 42
declaration_imutable : 27 41
elseop               : 37
expression           : 28 29 30 33 34 40 43 44 45 46 58 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69
expression_relacional : 36 37 41 42
factor               : 48 49 50 51
for_statement        : 25
func_call            : 23
function_definition  : 1 2 5 6
function_definition_without_main : 7 8 9
id_list              : 31
if_statement         : 24 38
increment            : 41
more_expressions     : 33 34
more_params          : 11 12
param                : 11 12
params               : 5 6 8 9
program              : 0
program_Import       : 1 3
return_statement     : 26
term                 : 45 46 47 48 49 50
type                 : 6 9 14
var_assignment       : 22
var_statement        : 21

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_Import function_definition
    (2) program -> . function_definition
    (3) program_Import -> . IMPORT ID program_Import
    (4) program_Import -> . IMPORT ID
    (5) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
    (7) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    IMPORT          shift and go to state 4
    FN              shift and go to state 5

    program                        shift and go to state 1
    program_Import                 shift and go to state 2
    function_definition            shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> program_Import . function_definition
    (5) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
    (7) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    FN              shift and go to state 5

    function_definition            shift and go to state 6

state 3

    (2) program -> function_definition .

    $end            reduce using rule 2 (program -> function_definition .)


state 4

    (3) program_Import -> IMPORT . ID program_Import
    (4) program_Import -> IMPORT . ID

    ID              shift and go to state 7


state 5

    (5) function_definition -> FN . ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> FN . ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
    (7) function_definition -> FN . MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    ID              shift and go to state 8
    MAIN            shift and go to state 9


state 6

    (1) program -> program_Import function_definition .

    $end            reduce using rule 1 (program -> program_Import function_definition .)


state 7

    (3) program_Import -> IMPORT ID . program_Import
    (4) program_Import -> IMPORT ID .
    (3) program_Import -> . IMPORT ID program_Import
    (4) program_Import -> . IMPORT ID

    FN              reduce using rule 4 (program_Import -> IMPORT ID .)
    IMPORT          shift and go to state 4

    program_Import                 shift and go to state 10

state 8

    (5) function_definition -> FN ID . LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> FN ID . LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition

    LPAREN          shift and go to state 11


state 9

    (7) function_definition -> FN MAIN . LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    LPAREN          shift and go to state 12


state 10

    (3) program_Import -> IMPORT ID program_Import .

    FN              reduce using rule 3 (program_Import -> IMPORT ID program_Import .)


state 11

    (5) function_definition -> FN ID LPAREN . params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> FN ID LPAREN . params RPAREN type LBRACE block_statement RBRACE function_definition
    (11) params -> . param more_params
    (14) param -> . ID type

    ID              shift and go to state 13

    params                         shift and go to state 14
    param                          shift and go to state 15

state 12

    (7) function_definition -> FN MAIN LPAREN . RPAREN LBRACE block_statement RBRACE function_definition_without_main

    RPAREN          shift and go to state 16


state 13

    (14) param -> ID . type
    (15) type -> . INT
    (16) type -> . F32
    (17) type -> . F64
    (18) type -> . STRING
    (19) type -> . BOOL
    (20) type -> . RUNE

    INT             shift and go to state 18
    F32             shift and go to state 19
    F64             shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    RUNE            shift and go to state 23

    type                           shift and go to state 17

state 14

    (5) function_definition -> FN ID LPAREN params . RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> FN ID LPAREN params . RPAREN type LBRACE block_statement RBRACE function_definition

    RPAREN          shift and go to state 24


state 15

    (11) params -> param . more_params
    (12) more_params -> . COMMA param more_params
    (13) more_params -> .

    COMMA           shift and go to state 26
    RPAREN          reduce using rule 13 (more_params -> .)

    more_params                    shift and go to state 25

state 16

    (7) function_definition -> FN MAIN LPAREN RPAREN . LBRACE block_statement RBRACE function_definition_without_main

    LBRACE          shift and go to state 27


state 17

    (14) param -> ID type .

    COMMA           reduce using rule 14 (param -> ID type .)
    RPAREN          reduce using rule 14 (param -> ID type .)


state 18

    (15) type -> INT .

    COMMA           reduce using rule 15 (type -> INT .)
    RPAREN          reduce using rule 15 (type -> INT .)
    LBRACE          reduce using rule 15 (type -> INT .)


state 19

    (16) type -> F32 .

    COMMA           reduce using rule 16 (type -> F32 .)
    RPAREN          reduce using rule 16 (type -> F32 .)
    LBRACE          reduce using rule 16 (type -> F32 .)


state 20

    (17) type -> F64 .

    COMMA           reduce using rule 17 (type -> F64 .)
    RPAREN          reduce using rule 17 (type -> F64 .)
    LBRACE          reduce using rule 17 (type -> F64 .)


state 21

    (18) type -> STRING .

    COMMA           reduce using rule 18 (type -> STRING .)
    RPAREN          reduce using rule 18 (type -> STRING .)
    LBRACE          reduce using rule 18 (type -> STRING .)


state 22

    (19) type -> BOOL .

    COMMA           reduce using rule 19 (type -> BOOL .)
    RPAREN          reduce using rule 19 (type -> BOOL .)
    LBRACE          reduce using rule 19 (type -> BOOL .)


state 23

    (20) type -> RUNE .

    COMMA           reduce using rule 20 (type -> RUNE .)
    RPAREN          reduce using rule 20 (type -> RUNE .)
    LBRACE          reduce using rule 20 (type -> RUNE .)


state 24

    (5) function_definition -> FN ID LPAREN params RPAREN . LBRACE block_statement RBRACE function_definition
    (6) function_definition -> FN ID LPAREN params RPAREN . type LBRACE block_statement RBRACE function_definition
    (15) type -> . INT
    (16) type -> . F32
    (17) type -> . F64
    (18) type -> . STRING
    (19) type -> . BOOL
    (20) type -> . RUNE

    LBRACE          shift and go to state 28
    INT             shift and go to state 18
    F32             shift and go to state 19
    F64             shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    RUNE            shift and go to state 23

    type                           shift and go to state 29

state 25

    (11) params -> param more_params .

    RPAREN          reduce using rule 11 (params -> param more_params .)


state 26

    (12) more_params -> COMMA . param more_params
    (14) param -> . ID type

    ID              shift and go to state 13

    param                          shift and go to state 30

state 27

    (7) function_definition -> FN MAIN LPAREN RPAREN LBRACE . block_statement RBRACE function_definition_without_main
    (21) block_statement -> . var_statement
    (22) block_statement -> . var_assignment
    (23) block_statement -> . func_call
    (24) block_statement -> . if_statement
    (25) block_statement -> . for_statement
    (26) block_statement -> . return_statement
    (27) var_statement -> . declaration_imutable
    (28) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (29) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (30) var_assignment -> . ID ASSIGN expression
    (31) func_call -> . ID LPAREN id_list RPAREN
    (32) func_call -> . ID LPAREN RPAREN
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop
    (40) for_statement -> . FOR ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> . FOR expression_relacional LBRACE block_statement RBRACE
    (44) return_statement -> . RETURN expression
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression

    MUT             shift and go to state 39
    CONST           shift and go to state 41
    ID              shift and go to state 40
    IF              shift and go to state 42
    FOR             shift and go to state 43
    RETURN          shift and go to state 44

    block_statement                shift and go to state 31
    var_statement                  shift and go to state 32
    var_assignment                 shift and go to state 33
    func_call                      shift and go to state 34
    if_statement                   shift and go to state 35
    for_statement                  shift and go to state 36
    return_statement               shift and go to state 37
    declaration_imutable           shift and go to state 38

state 28

    (5) function_definition -> FN ID LPAREN params RPAREN LBRACE . block_statement RBRACE function_definition
    (21) block_statement -> . var_statement
    (22) block_statement -> . var_assignment
    (23) block_statement -> . func_call
    (24) block_statement -> . if_statement
    (25) block_statement -> . for_statement
    (26) block_statement -> . return_statement
    (27) var_statement -> . declaration_imutable
    (28) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (29) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (30) var_assignment -> . ID ASSIGN expression
    (31) func_call -> . ID LPAREN id_list RPAREN
    (32) func_call -> . ID LPAREN RPAREN
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop
    (40) for_statement -> . FOR ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> . FOR expression_relacional LBRACE block_statement RBRACE
    (44) return_statement -> . RETURN expression
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression

    MUT             shift and go to state 39
    CONST           shift and go to state 41
    ID              shift and go to state 40
    IF              shift and go to state 42
    FOR             shift and go to state 43
    RETURN          shift and go to state 44

    block_statement                shift and go to state 45
    var_statement                  shift and go to state 32
    var_assignment                 shift and go to state 33
    func_call                      shift and go to state 34
    if_statement                   shift and go to state 35
    for_statement                  shift and go to state 36
    return_statement               shift and go to state 37
    declaration_imutable           shift and go to state 38

state 29

    (6) function_definition -> FN ID LPAREN params RPAREN type . LBRACE block_statement RBRACE function_definition

    LBRACE          shift and go to state 46


state 30

    (12) more_params -> COMMA param . more_params
    (12) more_params -> . COMMA param more_params
    (13) more_params -> .

    COMMA           shift and go to state 26
    RPAREN          reduce using rule 13 (more_params -> .)

    more_params                    shift and go to state 47

state 31

    (7) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement . RBRACE function_definition_without_main

    RBRACE          shift and go to state 48


state 32

    (21) block_statement -> var_statement .

    RBRACE          reduce using rule 21 (block_statement -> var_statement .)


state 33

    (22) block_statement -> var_assignment .

    RBRACE          reduce using rule 22 (block_statement -> var_assignment .)


state 34

    (23) block_statement -> func_call .

    RBRACE          reduce using rule 23 (block_statement -> func_call .)


state 35

    (24) block_statement -> if_statement .

    RBRACE          reduce using rule 24 (block_statement -> if_statement .)


state 36

    (25) block_statement -> for_statement .

    RBRACE          reduce using rule 25 (block_statement -> for_statement .)


state 37

    (26) block_statement -> return_statement .

    RBRACE          reduce using rule 26 (block_statement -> return_statement .)


state 38

    (27) var_statement -> declaration_imutable .

    RBRACE          reduce using rule 27 (var_statement -> declaration_imutable .)


state 39

    (28) var_statement -> MUT . ID DECLARE_ASSIGN expression

    ID              shift and go to state 49


state 40

    (30) var_assignment -> ID . ASSIGN expression
    (31) func_call -> ID . LPAREN id_list RPAREN
    (32) func_call -> ID . LPAREN RPAREN
    (43) declaration_imutable -> ID . DECLARE_ASSIGN expression

    ASSIGN          shift and go to state 50
    LPAREN          shift and go to state 51
    DECLARE_ASSIGN  shift and go to state 52


state 41

    (29) var_statement -> CONST . ID DECLARE_ASSIGN expression

    ID              shift and go to state 53


state 42

    (36) if_statement -> IF . expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> IF . expression_relacional LBRACE block_statement RBRACE elseop
    (61) expression_relacional -> . expression EQ expression
    (62) expression_relacional -> . expression NEQ expression
    (63) expression_relacional -> . expression LT expression
    (64) expression_relacional -> . expression LE expression
    (65) expression_relacional -> . expression GT expression
    (66) expression_relacional -> . expression GE expression
    (67) expression_relacional -> . expression AND expression
    (68) expression_relacional -> . expression OR expression
    (69) expression_relacional -> . NOT expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 56
    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression_relacional          shift and go to state 54
    expression                     shift and go to state 55
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 43

    (40) for_statement -> FOR . ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> FOR . declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> FOR . expression_relacional LBRACE block_statement RBRACE
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (61) expression_relacional -> . expression EQ expression
    (62) expression_relacional -> . expression NEQ expression
    (63) expression_relacional -> . expression LT expression
    (64) expression_relacional -> . expression LE expression
    (65) expression_relacional -> . expression GT expression
    (66) expression_relacional -> . expression GE expression
    (67) expression_relacional -> . expression AND expression
    (68) expression_relacional -> . expression OR expression
    (69) expression_relacional -> . NOT expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 66
    NOT             shift and go to state 56
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 55
    declaration_imutable           shift and go to state 67
    expression_relacional          shift and go to state 68
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 44

    (44) return_statement -> RETURN . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 69
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 45

    (5) function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement . RBRACE function_definition

    RBRACE          shift and go to state 70


state 46

    (6) function_definition -> FN ID LPAREN params RPAREN type LBRACE . block_statement RBRACE function_definition
    (21) block_statement -> . var_statement
    (22) block_statement -> . var_assignment
    (23) block_statement -> . func_call
    (24) block_statement -> . if_statement
    (25) block_statement -> . for_statement
    (26) block_statement -> . return_statement
    (27) var_statement -> . declaration_imutable
    (28) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (29) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (30) var_assignment -> . ID ASSIGN expression
    (31) func_call -> . ID LPAREN id_list RPAREN
    (32) func_call -> . ID LPAREN RPAREN
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop
    (40) for_statement -> . FOR ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> . FOR expression_relacional LBRACE block_statement RBRACE
    (44) return_statement -> . RETURN expression
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression

    MUT             shift and go to state 39
    CONST           shift and go to state 41
    ID              shift and go to state 40
    IF              shift and go to state 42
    FOR             shift and go to state 43
    RETURN          shift and go to state 44

    block_statement                shift and go to state 71
    var_statement                  shift and go to state 32
    var_assignment                 shift and go to state 33
    func_call                      shift and go to state 34
    if_statement                   shift and go to state 35
    for_statement                  shift and go to state 36
    return_statement               shift and go to state 37
    declaration_imutable           shift and go to state 38

state 47

    (12) more_params -> COMMA param more_params .

    RPAREN          reduce using rule 12 (more_params -> COMMA param more_params .)


state 48

    (7) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE . function_definition_without_main
    (8) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (10) function_definition_without_main -> .

    FN              shift and go to state 72
    $end            reduce using rule 10 (function_definition_without_main -> .)

    function_definition_without_main shift and go to state 73

state 49

    (28) var_statement -> MUT ID . DECLARE_ASSIGN expression

    DECLARE_ASSIGN  shift and go to state 74


state 50

    (30) var_assignment -> ID ASSIGN . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 75
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 51

    (31) func_call -> ID LPAREN . id_list RPAREN
    (32) func_call -> ID LPAREN . RPAREN
    (33) id_list -> . expression more_expressions
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 77
    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    id_list                        shift and go to state 76
    expression                     shift and go to state 78
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 52

    (43) declaration_imutable -> ID DECLARE_ASSIGN . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 79
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 53

    (29) var_statement -> CONST ID . DECLARE_ASSIGN expression

    DECLARE_ASSIGN  shift and go to state 80


state 54

    (36) if_statement -> IF expression_relacional . LBRACE block_statement RBRACE
    (37) if_statement -> IF expression_relacional . LBRACE block_statement RBRACE elseop

    LBRACE          shift and go to state 81


state 55

    (61) expression_relacional -> expression . EQ expression
    (62) expression_relacional -> expression . NEQ expression
    (63) expression_relacional -> expression . LT expression
    (64) expression_relacional -> expression . LE expression
    (65) expression_relacional -> expression . GT expression
    (66) expression_relacional -> expression . GE expression
    (67) expression_relacional -> expression . AND expression
    (68) expression_relacional -> expression . OR expression
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    EQ              shift and go to state 82
    NEQ             shift and go to state 83
    LT              shift and go to state 84
    LE              shift and go to state 85
    GT              shift and go to state 86
    GE              shift and go to state 87
    AND             shift and go to state 88
    OR              shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 56

    (69) expression_relacional -> NOT . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 92
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 57

    (47) expression -> term .
    (48) term -> term . TIMES factor
    (49) term -> term . DIVIDE factor
    (50) term -> term . MOD factor

    EQ              reduce using rule 47 (expression -> term .)
    NEQ             reduce using rule 47 (expression -> term .)
    LT              reduce using rule 47 (expression -> term .)
    LE              reduce using rule 47 (expression -> term .)
    GT              reduce using rule 47 (expression -> term .)
    GE              reduce using rule 47 (expression -> term .)
    AND             reduce using rule 47 (expression -> term .)
    OR              reduce using rule 47 (expression -> term .)
    PLUS            reduce using rule 47 (expression -> term .)
    MINUS           reduce using rule 47 (expression -> term .)
    RBRACE          reduce using rule 47 (expression -> term .)
    COMMA           reduce using rule 47 (expression -> term .)
    RPAREN          reduce using rule 47 (expression -> term .)
    SEMICOLON       reduce using rule 47 (expression -> term .)
    LBRACE          reduce using rule 47 (expression -> term .)
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95


state 58

    (51) term -> factor .

    TIMES           reduce using rule 51 (term -> factor .)
    DIVIDE          reduce using rule 51 (term -> factor .)
    MOD             reduce using rule 51 (term -> factor .)
    EQ              reduce using rule 51 (term -> factor .)
    NEQ             reduce using rule 51 (term -> factor .)
    LT              reduce using rule 51 (term -> factor .)
    LE              reduce using rule 51 (term -> factor .)
    GT              reduce using rule 51 (term -> factor .)
    GE              reduce using rule 51 (term -> factor .)
    AND             reduce using rule 51 (term -> factor .)
    OR              reduce using rule 51 (term -> factor .)
    PLUS            reduce using rule 51 (term -> factor .)
    MINUS           reduce using rule 51 (term -> factor .)
    RBRACE          reduce using rule 51 (term -> factor .)
    COMMA           reduce using rule 51 (term -> factor .)
    RPAREN          reduce using rule 51 (term -> factor .)
    SEMICOLON       reduce using rule 51 (term -> factor .)
    LBRACE          reduce using rule 51 (term -> factor .)


state 59

    (52) factor -> ID .

    TIMES           reduce using rule 52 (factor -> ID .)
    DIVIDE          reduce using rule 52 (factor -> ID .)
    MOD             reduce using rule 52 (factor -> ID .)
    EQ              reduce using rule 52 (factor -> ID .)
    NEQ             reduce using rule 52 (factor -> ID .)
    LT              reduce using rule 52 (factor -> ID .)
    LE              reduce using rule 52 (factor -> ID .)
    GT              reduce using rule 52 (factor -> ID .)
    GE              reduce using rule 52 (factor -> ID .)
    AND             reduce using rule 52 (factor -> ID .)
    OR              reduce using rule 52 (factor -> ID .)
    PLUS            reduce using rule 52 (factor -> ID .)
    MINUS           reduce using rule 52 (factor -> ID .)
    RBRACE          reduce using rule 52 (factor -> ID .)
    COMMA           reduce using rule 52 (factor -> ID .)
    RPAREN          reduce using rule 52 (factor -> ID .)
    SEMICOLON       reduce using rule 52 (factor -> ID .)
    LBRACE          reduce using rule 52 (factor -> ID .)


state 60

    (53) factor -> NUMBER .

    TIMES           reduce using rule 53 (factor -> NUMBER .)
    DIVIDE          reduce using rule 53 (factor -> NUMBER .)
    MOD             reduce using rule 53 (factor -> NUMBER .)
    EQ              reduce using rule 53 (factor -> NUMBER .)
    NEQ             reduce using rule 53 (factor -> NUMBER .)
    LT              reduce using rule 53 (factor -> NUMBER .)
    LE              reduce using rule 53 (factor -> NUMBER .)
    GT              reduce using rule 53 (factor -> NUMBER .)
    GE              reduce using rule 53 (factor -> NUMBER .)
    AND             reduce using rule 53 (factor -> NUMBER .)
    OR              reduce using rule 53 (factor -> NUMBER .)
    PLUS            reduce using rule 53 (factor -> NUMBER .)
    MINUS           reduce using rule 53 (factor -> NUMBER .)
    RBRACE          reduce using rule 53 (factor -> NUMBER .)
    COMMA           reduce using rule 53 (factor -> NUMBER .)
    RPAREN          reduce using rule 53 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 53 (factor -> NUMBER .)
    LBRACE          reduce using rule 53 (factor -> NUMBER .)


state 61

    (54) factor -> STRING .

    TIMES           reduce using rule 54 (factor -> STRING .)
    DIVIDE          reduce using rule 54 (factor -> STRING .)
    MOD             reduce using rule 54 (factor -> STRING .)
    EQ              reduce using rule 54 (factor -> STRING .)
    NEQ             reduce using rule 54 (factor -> STRING .)
    LT              reduce using rule 54 (factor -> STRING .)
    LE              reduce using rule 54 (factor -> STRING .)
    GT              reduce using rule 54 (factor -> STRING .)
    GE              reduce using rule 54 (factor -> STRING .)
    AND             reduce using rule 54 (factor -> STRING .)
    OR              reduce using rule 54 (factor -> STRING .)
    PLUS            reduce using rule 54 (factor -> STRING .)
    MINUS           reduce using rule 54 (factor -> STRING .)
    RBRACE          reduce using rule 54 (factor -> STRING .)
    COMMA           reduce using rule 54 (factor -> STRING .)
    RPAREN          reduce using rule 54 (factor -> STRING .)
    SEMICOLON       reduce using rule 54 (factor -> STRING .)
    LBRACE          reduce using rule 54 (factor -> STRING .)


state 62

    (55) factor -> TRUE .

    TIMES           reduce using rule 55 (factor -> TRUE .)
    DIVIDE          reduce using rule 55 (factor -> TRUE .)
    MOD             reduce using rule 55 (factor -> TRUE .)
    EQ              reduce using rule 55 (factor -> TRUE .)
    NEQ             reduce using rule 55 (factor -> TRUE .)
    LT              reduce using rule 55 (factor -> TRUE .)
    LE              reduce using rule 55 (factor -> TRUE .)
    GT              reduce using rule 55 (factor -> TRUE .)
    GE              reduce using rule 55 (factor -> TRUE .)
    AND             reduce using rule 55 (factor -> TRUE .)
    OR              reduce using rule 55 (factor -> TRUE .)
    PLUS            reduce using rule 55 (factor -> TRUE .)
    MINUS           reduce using rule 55 (factor -> TRUE .)
    RBRACE          reduce using rule 55 (factor -> TRUE .)
    COMMA           reduce using rule 55 (factor -> TRUE .)
    RPAREN          reduce using rule 55 (factor -> TRUE .)
    SEMICOLON       reduce using rule 55 (factor -> TRUE .)
    LBRACE          reduce using rule 55 (factor -> TRUE .)


state 63

    (56) factor -> FALSE .

    TIMES           reduce using rule 56 (factor -> FALSE .)
    DIVIDE          reduce using rule 56 (factor -> FALSE .)
    MOD             reduce using rule 56 (factor -> FALSE .)
    EQ              reduce using rule 56 (factor -> FALSE .)
    NEQ             reduce using rule 56 (factor -> FALSE .)
    LT              reduce using rule 56 (factor -> FALSE .)
    LE              reduce using rule 56 (factor -> FALSE .)
    GT              reduce using rule 56 (factor -> FALSE .)
    GE              reduce using rule 56 (factor -> FALSE .)
    AND             reduce using rule 56 (factor -> FALSE .)
    OR              reduce using rule 56 (factor -> FALSE .)
    PLUS            reduce using rule 56 (factor -> FALSE .)
    MINUS           reduce using rule 56 (factor -> FALSE .)
    RBRACE          reduce using rule 56 (factor -> FALSE .)
    COMMA           reduce using rule 56 (factor -> FALSE .)
    RPAREN          reduce using rule 56 (factor -> FALSE .)
    SEMICOLON       reduce using rule 56 (factor -> FALSE .)
    LBRACE          reduce using rule 56 (factor -> FALSE .)


state 64

    (57) factor -> RUNE .

    TIMES           reduce using rule 57 (factor -> RUNE .)
    DIVIDE          reduce using rule 57 (factor -> RUNE .)
    MOD             reduce using rule 57 (factor -> RUNE .)
    EQ              reduce using rule 57 (factor -> RUNE .)
    NEQ             reduce using rule 57 (factor -> RUNE .)
    LT              reduce using rule 57 (factor -> RUNE .)
    LE              reduce using rule 57 (factor -> RUNE .)
    GT              reduce using rule 57 (factor -> RUNE .)
    GE              reduce using rule 57 (factor -> RUNE .)
    AND             reduce using rule 57 (factor -> RUNE .)
    OR              reduce using rule 57 (factor -> RUNE .)
    PLUS            reduce using rule 57 (factor -> RUNE .)
    MINUS           reduce using rule 57 (factor -> RUNE .)
    RBRACE          reduce using rule 57 (factor -> RUNE .)
    COMMA           reduce using rule 57 (factor -> RUNE .)
    RPAREN          reduce using rule 57 (factor -> RUNE .)
    SEMICOLON       reduce using rule 57 (factor -> RUNE .)
    LBRACE          reduce using rule 57 (factor -> RUNE .)


state 65

    (58) factor -> LPAREN . expression RPAREN
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 96
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 66

    (40) for_statement -> FOR ID . IN expression LBRACE block_statement RBRACE
    (43) declaration_imutable -> ID . DECLARE_ASSIGN expression
    (52) factor -> ID .

    IN              shift and go to state 97
    DECLARE_ASSIGN  shift and go to state 52
    TIMES           reduce using rule 52 (factor -> ID .)
    DIVIDE          reduce using rule 52 (factor -> ID .)
    MOD             reduce using rule 52 (factor -> ID .)
    EQ              reduce using rule 52 (factor -> ID .)
    NEQ             reduce using rule 52 (factor -> ID .)
    LT              reduce using rule 52 (factor -> ID .)
    LE              reduce using rule 52 (factor -> ID .)
    GT              reduce using rule 52 (factor -> ID .)
    GE              reduce using rule 52 (factor -> ID .)
    AND             reduce using rule 52 (factor -> ID .)
    OR              reduce using rule 52 (factor -> ID .)
    PLUS            reduce using rule 52 (factor -> ID .)
    MINUS           reduce using rule 52 (factor -> ID .)


state 67

    (41) for_statement -> FOR declaration_imutable . SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE

    SEMICOLON       shift and go to state 98


state 68

    (42) for_statement -> FOR expression_relacional . LBRACE block_statement RBRACE

    LBRACE          shift and go to state 99


state 69

    (44) return_statement -> RETURN expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    RBRACE          reduce using rule 44 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 70

    (5) function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE . function_definition
    (5) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
    (7) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    FN              shift and go to state 5

    function_definition            shift and go to state 100

state 71

    (6) function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement . RBRACE function_definition

    RBRACE          shift and go to state 101


state 72

    (8) function_definition_without_main -> FN . ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> FN . ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main

    ID              shift and go to state 102


state 73

    (7) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main .

    $end            reduce using rule 7 (function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main .)


state 74

    (28) var_statement -> MUT ID DECLARE_ASSIGN . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 103
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 75

    (30) var_assignment -> ID ASSIGN expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    RBRACE          reduce using rule 30 (var_assignment -> ID ASSIGN expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 76

    (31) func_call -> ID LPAREN id_list . RPAREN

    RPAREN          shift and go to state 104


state 77

    (32) func_call -> ID LPAREN RPAREN .

    RBRACE          reduce using rule 32 (func_call -> ID LPAREN RPAREN .)


state 78

    (33) id_list -> expression . more_expressions
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term
    (34) more_expressions -> . COMMA expression more_expressions
    (35) more_expressions -> .

    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    COMMA           shift and go to state 106
    RPAREN          reduce using rule 35 (more_expressions -> .)

    more_expressions               shift and go to state 105

state 79

    (43) declaration_imutable -> ID DECLARE_ASSIGN expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    RBRACE          reduce using rule 43 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    SEMICOLON       reduce using rule 43 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 80

    (29) var_statement -> CONST ID DECLARE_ASSIGN . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 107
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 81

    (36) if_statement -> IF expression_relacional LBRACE . block_statement RBRACE
    (37) if_statement -> IF expression_relacional LBRACE . block_statement RBRACE elseop
    (21) block_statement -> . var_statement
    (22) block_statement -> . var_assignment
    (23) block_statement -> . func_call
    (24) block_statement -> . if_statement
    (25) block_statement -> . for_statement
    (26) block_statement -> . return_statement
    (27) var_statement -> . declaration_imutable
    (28) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (29) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (30) var_assignment -> . ID ASSIGN expression
    (31) func_call -> . ID LPAREN id_list RPAREN
    (32) func_call -> . ID LPAREN RPAREN
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop
    (40) for_statement -> . FOR ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> . FOR expression_relacional LBRACE block_statement RBRACE
    (44) return_statement -> . RETURN expression
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression

    MUT             shift and go to state 39
    CONST           shift and go to state 41
    ID              shift and go to state 40
    IF              shift and go to state 42
    FOR             shift and go to state 43
    RETURN          shift and go to state 44

    block_statement                shift and go to state 108
    var_statement                  shift and go to state 32
    var_assignment                 shift and go to state 33
    func_call                      shift and go to state 34
    if_statement                   shift and go to state 35
    for_statement                  shift and go to state 36
    return_statement               shift and go to state 37
    declaration_imutable           shift and go to state 38

state 82

    (61) expression_relacional -> expression EQ . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 109
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 83

    (62) expression_relacional -> expression NEQ . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 110
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 84

    (63) expression_relacional -> expression LT . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 111
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 85

    (64) expression_relacional -> expression LE . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 112
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 86

    (65) expression_relacional -> expression GT . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 113
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 87

    (66) expression_relacional -> expression GE . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 114
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 88

    (67) expression_relacional -> expression AND . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 115
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 89

    (68) expression_relacional -> expression OR . expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 116
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 90

    (45) expression -> expression PLUS . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    term                           shift and go to state 117
    factor                         shift and go to state 58

state 91

    (46) expression -> expression MINUS . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    term                           shift and go to state 118
    factor                         shift and go to state 58

state 92

    (69) expression_relacional -> NOT expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    LBRACE          reduce using rule 69 (expression_relacional -> NOT expression .)
    SEMICOLON       reduce using rule 69 (expression_relacional -> NOT expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 93

    (48) term -> term TIMES . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    factor                         shift and go to state 119

state 94

    (49) term -> term DIVIDE . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    factor                         shift and go to state 120

state 95

    (50) term -> term MOD . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    factor                         shift and go to state 121

state 96

    (58) factor -> LPAREN expression . RPAREN
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    RPAREN          shift and go to state 122
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 97

    (40) for_statement -> FOR ID IN . expression LBRACE block_statement RBRACE
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 123
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 98

    (41) for_statement -> FOR declaration_imutable SEMICOLON . expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (61) expression_relacional -> . expression EQ expression
    (62) expression_relacional -> . expression NEQ expression
    (63) expression_relacional -> . expression LT expression
    (64) expression_relacional -> . expression LE expression
    (65) expression_relacional -> . expression GT expression
    (66) expression_relacional -> . expression GE expression
    (67) expression_relacional -> . expression AND expression
    (68) expression_relacional -> . expression OR expression
    (69) expression_relacional -> . NOT expression
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 56
    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression_relacional          shift and go to state 124
    expression                     shift and go to state 55
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 99

    (42) for_statement -> FOR expression_relacional LBRACE . block_statement RBRACE
    (21) block_statement -> . var_statement
    (22) block_statement -> . var_assignment
    (23) block_statement -> . func_call
    (24) block_statement -> . if_statement
    (25) block_statement -> . for_statement
    (26) block_statement -> . return_statement
    (27) var_statement -> . declaration_imutable
    (28) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (29) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (30) var_assignment -> . ID ASSIGN expression
    (31) func_call -> . ID LPAREN id_list RPAREN
    (32) func_call -> . ID LPAREN RPAREN
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop
    (40) for_statement -> . FOR ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> . FOR expression_relacional LBRACE block_statement RBRACE
    (44) return_statement -> . RETURN expression
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression

    MUT             shift and go to state 39
    CONST           shift and go to state 41
    ID              shift and go to state 40
    IF              shift and go to state 42
    FOR             shift and go to state 43
    RETURN          shift and go to state 44

    block_statement                shift and go to state 125
    var_statement                  shift and go to state 32
    var_assignment                 shift and go to state 33
    func_call                      shift and go to state 34
    if_statement                   shift and go to state 35
    for_statement                  shift and go to state 36
    return_statement               shift and go to state 37
    declaration_imutable           shift and go to state 38

state 100

    (5) function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition .

    $end            reduce using rule 5 (function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition .)


state 101

    (6) function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE . function_definition
    (5) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition
    (6) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition
    (7) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main

    FN              shift and go to state 5

    function_definition            shift and go to state 126

state 102

    (8) function_definition_without_main -> FN ID . LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> FN ID . LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main

    LPAREN          shift and go to state 127


state 103

    (28) var_statement -> MUT ID DECLARE_ASSIGN expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    RBRACE          reduce using rule 28 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 104

    (31) func_call -> ID LPAREN id_list RPAREN .

    RBRACE          reduce using rule 31 (func_call -> ID LPAREN id_list RPAREN .)


state 105

    (33) id_list -> expression more_expressions .

    RPAREN          reduce using rule 33 (id_list -> expression more_expressions .)


state 106

    (34) more_expressions -> COMMA . expression more_expressions
    (45) expression -> . expression PLUS term
    (46) expression -> . expression MINUS term
    (47) expression -> . term
    (48) term -> . term TIMES factor
    (49) term -> . term DIVIDE factor
    (50) term -> . term MOD factor
    (51) term -> . factor
    (52) factor -> . ID
    (53) factor -> . NUMBER
    (54) factor -> . STRING
    (55) factor -> . TRUE
    (56) factor -> . FALSE
    (57) factor -> . RUNE
    (58) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    STRING          shift and go to state 61
    TRUE            shift and go to state 62
    FALSE           shift and go to state 63
    RUNE            shift and go to state 64
    LPAREN          shift and go to state 65

    expression                     shift and go to state 128
    term                           shift and go to state 57
    factor                         shift and go to state 58

state 107

    (29) var_statement -> CONST ID DECLARE_ASSIGN expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    RBRACE          reduce using rule 29 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 108

    (36) if_statement -> IF expression_relacional LBRACE block_statement . RBRACE
    (37) if_statement -> IF expression_relacional LBRACE block_statement . RBRACE elseop

    RBRACE          shift and go to state 129


state 109

    (61) expression_relacional -> expression EQ expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    LBRACE          reduce using rule 61 (expression_relacional -> expression EQ expression .)
    SEMICOLON       reduce using rule 61 (expression_relacional -> expression EQ expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 110

    (62) expression_relacional -> expression NEQ expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    LBRACE          reduce using rule 62 (expression_relacional -> expression NEQ expression .)
    SEMICOLON       reduce using rule 62 (expression_relacional -> expression NEQ expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 111

    (63) expression_relacional -> expression LT expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    LBRACE          reduce using rule 63 (expression_relacional -> expression LT expression .)
    SEMICOLON       reduce using rule 63 (expression_relacional -> expression LT expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 112

    (64) expression_relacional -> expression LE expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    LBRACE          reduce using rule 64 (expression_relacional -> expression LE expression .)
    SEMICOLON       reduce using rule 64 (expression_relacional -> expression LE expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 113

    (65) expression_relacional -> expression GT expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    LBRACE          reduce using rule 65 (expression_relacional -> expression GT expression .)
    SEMICOLON       reduce using rule 65 (expression_relacional -> expression GT expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 114

    (66) expression_relacional -> expression GE expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    LBRACE          reduce using rule 66 (expression_relacional -> expression GE expression .)
    SEMICOLON       reduce using rule 66 (expression_relacional -> expression GE expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 115

    (67) expression_relacional -> expression AND expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    LBRACE          reduce using rule 67 (expression_relacional -> expression AND expression .)
    SEMICOLON       reduce using rule 67 (expression_relacional -> expression AND expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 116

    (68) expression_relacional -> expression OR expression .
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    LBRACE          reduce using rule 68 (expression_relacional -> expression OR expression .)
    SEMICOLON       reduce using rule 68 (expression_relacional -> expression OR expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 117

    (45) expression -> expression PLUS term .
    (48) term -> term . TIMES factor
    (49) term -> term . DIVIDE factor
    (50) term -> term . MOD factor

    EQ              reduce using rule 45 (expression -> expression PLUS term .)
    NEQ             reduce using rule 45 (expression -> expression PLUS term .)
    LT              reduce using rule 45 (expression -> expression PLUS term .)
    LE              reduce using rule 45 (expression -> expression PLUS term .)
    GT              reduce using rule 45 (expression -> expression PLUS term .)
    GE              reduce using rule 45 (expression -> expression PLUS term .)
    AND             reduce using rule 45 (expression -> expression PLUS term .)
    OR              reduce using rule 45 (expression -> expression PLUS term .)
    PLUS            reduce using rule 45 (expression -> expression PLUS term .)
    MINUS           reduce using rule 45 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 45 (expression -> expression PLUS term .)
    COMMA           reduce using rule 45 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 45 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 45 (expression -> expression PLUS term .)
    LBRACE          reduce using rule 45 (expression -> expression PLUS term .)
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95


state 118

    (46) expression -> expression MINUS term .
    (48) term -> term . TIMES factor
    (49) term -> term . DIVIDE factor
    (50) term -> term . MOD factor

    EQ              reduce using rule 46 (expression -> expression MINUS term .)
    NEQ             reduce using rule 46 (expression -> expression MINUS term .)
    LT              reduce using rule 46 (expression -> expression MINUS term .)
    LE              reduce using rule 46 (expression -> expression MINUS term .)
    GT              reduce using rule 46 (expression -> expression MINUS term .)
    GE              reduce using rule 46 (expression -> expression MINUS term .)
    AND             reduce using rule 46 (expression -> expression MINUS term .)
    OR              reduce using rule 46 (expression -> expression MINUS term .)
    PLUS            reduce using rule 46 (expression -> expression MINUS term .)
    MINUS           reduce using rule 46 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 46 (expression -> expression MINUS term .)
    COMMA           reduce using rule 46 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 46 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 46 (expression -> expression MINUS term .)
    LBRACE          reduce using rule 46 (expression -> expression MINUS term .)
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 94
    MOD             shift and go to state 95


state 119

    (48) term -> term TIMES factor .

    TIMES           reduce using rule 48 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 48 (term -> term TIMES factor .)
    MOD             reduce using rule 48 (term -> term TIMES factor .)
    EQ              reduce using rule 48 (term -> term TIMES factor .)
    NEQ             reduce using rule 48 (term -> term TIMES factor .)
    LT              reduce using rule 48 (term -> term TIMES factor .)
    LE              reduce using rule 48 (term -> term TIMES factor .)
    GT              reduce using rule 48 (term -> term TIMES factor .)
    GE              reduce using rule 48 (term -> term TIMES factor .)
    AND             reduce using rule 48 (term -> term TIMES factor .)
    OR              reduce using rule 48 (term -> term TIMES factor .)
    PLUS            reduce using rule 48 (term -> term TIMES factor .)
    MINUS           reduce using rule 48 (term -> term TIMES factor .)
    RBRACE          reduce using rule 48 (term -> term TIMES factor .)
    COMMA           reduce using rule 48 (term -> term TIMES factor .)
    RPAREN          reduce using rule 48 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 48 (term -> term TIMES factor .)
    LBRACE          reduce using rule 48 (term -> term TIMES factor .)


state 120

    (49) term -> term DIVIDE factor .

    TIMES           reduce using rule 49 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 49 (term -> term DIVIDE factor .)
    MOD             reduce using rule 49 (term -> term DIVIDE factor .)
    EQ              reduce using rule 49 (term -> term DIVIDE factor .)
    NEQ             reduce using rule 49 (term -> term DIVIDE factor .)
    LT              reduce using rule 49 (term -> term DIVIDE factor .)
    LE              reduce using rule 49 (term -> term DIVIDE factor .)
    GT              reduce using rule 49 (term -> term DIVIDE factor .)
    GE              reduce using rule 49 (term -> term DIVIDE factor .)
    AND             reduce using rule 49 (term -> term DIVIDE factor .)
    OR              reduce using rule 49 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 49 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 49 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 49 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 49 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 49 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 49 (term -> term DIVIDE factor .)
    LBRACE          reduce using rule 49 (term -> term DIVIDE factor .)


state 121

    (50) term -> term MOD factor .

    TIMES           reduce using rule 50 (term -> term MOD factor .)
    DIVIDE          reduce using rule 50 (term -> term MOD factor .)
    MOD             reduce using rule 50 (term -> term MOD factor .)
    EQ              reduce using rule 50 (term -> term MOD factor .)
    NEQ             reduce using rule 50 (term -> term MOD factor .)
    LT              reduce using rule 50 (term -> term MOD factor .)
    LE              reduce using rule 50 (term -> term MOD factor .)
    GT              reduce using rule 50 (term -> term MOD factor .)
    GE              reduce using rule 50 (term -> term MOD factor .)
    AND             reduce using rule 50 (term -> term MOD factor .)
    OR              reduce using rule 50 (term -> term MOD factor .)
    PLUS            reduce using rule 50 (term -> term MOD factor .)
    MINUS           reduce using rule 50 (term -> term MOD factor .)
    RBRACE          reduce using rule 50 (term -> term MOD factor .)
    COMMA           reduce using rule 50 (term -> term MOD factor .)
    RPAREN          reduce using rule 50 (term -> term MOD factor .)
    SEMICOLON       reduce using rule 50 (term -> term MOD factor .)
    LBRACE          reduce using rule 50 (term -> term MOD factor .)


state 122

    (58) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 58 (factor -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 58 (factor -> LPAREN expression RPAREN .)


state 123

    (40) for_statement -> FOR ID IN expression . LBRACE block_statement RBRACE
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term

    LBRACE          shift and go to state 130
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91


state 124

    (41) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional . SEMICOLON increment LBRACE block_statement RBRACE

    SEMICOLON       shift and go to state 131


state 125

    (42) for_statement -> FOR expression_relacional LBRACE block_statement . RBRACE

    RBRACE          shift and go to state 132


state 126

    (6) function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition .

    $end            reduce using rule 6 (function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition .)


state 127

    (8) function_definition_without_main -> FN ID LPAREN . params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> FN ID LPAREN . params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (11) params -> . param more_params
    (14) param -> . ID type

    ID              shift and go to state 13

    params                         shift and go to state 133
    param                          shift and go to state 15

state 128

    (34) more_expressions -> COMMA expression . more_expressions
    (45) expression -> expression . PLUS term
    (46) expression -> expression . MINUS term
    (34) more_expressions -> . COMMA expression more_expressions
    (35) more_expressions -> .

    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    COMMA           shift and go to state 106
    RPAREN          reduce using rule 35 (more_expressions -> .)

    more_expressions               shift and go to state 134

state 129

    (36) if_statement -> IF expression_relacional LBRACE block_statement RBRACE .
    (37) if_statement -> IF expression_relacional LBRACE block_statement RBRACE . elseop
    (38) elseop -> . ELSE if_statement
    (39) elseop -> . ELSE LBRACE block_statement RBRACE

    RBRACE          reduce using rule 36 (if_statement -> IF expression_relacional LBRACE block_statement RBRACE .)
    ELSE            shift and go to state 136

    elseop                         shift and go to state 135

state 130

    (40) for_statement -> FOR ID IN expression LBRACE . block_statement RBRACE
    (21) block_statement -> . var_statement
    (22) block_statement -> . var_assignment
    (23) block_statement -> . func_call
    (24) block_statement -> . if_statement
    (25) block_statement -> . for_statement
    (26) block_statement -> . return_statement
    (27) var_statement -> . declaration_imutable
    (28) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (29) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (30) var_assignment -> . ID ASSIGN expression
    (31) func_call -> . ID LPAREN id_list RPAREN
    (32) func_call -> . ID LPAREN RPAREN
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop
    (40) for_statement -> . FOR ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> . FOR expression_relacional LBRACE block_statement RBRACE
    (44) return_statement -> . RETURN expression
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression

    MUT             shift and go to state 39
    CONST           shift and go to state 41
    ID              shift and go to state 40
    IF              shift and go to state 42
    FOR             shift and go to state 43
    RETURN          shift and go to state 44

    block_statement                shift and go to state 137
    var_statement                  shift and go to state 32
    var_assignment                 shift and go to state 33
    func_call                      shift and go to state 34
    if_statement                   shift and go to state 35
    for_statement                  shift and go to state 36
    return_statement               shift and go to state 37
    declaration_imutable           shift and go to state 38

state 131

    (41) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON . increment LBRACE block_statement RBRACE
    (59) increment -> . ID PLUS PLUS
    (60) increment -> . ID MINUS MINUS

    ID              shift and go to state 139

    increment                      shift and go to state 138

state 132

    (42) for_statement -> FOR expression_relacional LBRACE block_statement RBRACE .

    RBRACE          reduce using rule 42 (for_statement -> FOR expression_relacional LBRACE block_statement RBRACE .)


state 133

    (8) function_definition_without_main -> FN ID LPAREN params . RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> FN ID LPAREN params . RPAREN type LBRACE block_statement RBRACE function_definition_without_main

    RPAREN          shift and go to state 140


state 134

    (34) more_expressions -> COMMA expression more_expressions .

    RPAREN          reduce using rule 34 (more_expressions -> COMMA expression more_expressions .)


state 135

    (37) if_statement -> IF expression_relacional LBRACE block_statement RBRACE elseop .

    RBRACE          reduce using rule 37 (if_statement -> IF expression_relacional LBRACE block_statement RBRACE elseop .)


state 136

    (38) elseop -> ELSE . if_statement
    (39) elseop -> ELSE . LBRACE block_statement RBRACE
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop

    LBRACE          shift and go to state 142
    IF              shift and go to state 42

    if_statement                   shift and go to state 141

state 137

    (40) for_statement -> FOR ID IN expression LBRACE block_statement . RBRACE

    RBRACE          shift and go to state 143


state 138

    (41) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment . LBRACE block_statement RBRACE

    LBRACE          shift and go to state 144


state 139

    (59) increment -> ID . PLUS PLUS
    (60) increment -> ID . MINUS MINUS

    PLUS            shift and go to state 145
    MINUS           shift and go to state 146


state 140

    (8) function_definition_without_main -> FN ID LPAREN params RPAREN . LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> FN ID LPAREN params RPAREN . type LBRACE block_statement RBRACE function_definition_without_main
    (15) type -> . INT
    (16) type -> . F32
    (17) type -> . F64
    (18) type -> . STRING
    (19) type -> . BOOL
    (20) type -> . RUNE

    LBRACE          shift and go to state 147
    INT             shift and go to state 18
    F32             shift and go to state 19
    F64             shift and go to state 20
    STRING          shift and go to state 21
    BOOL            shift and go to state 22
    RUNE            shift and go to state 23

    type                           shift and go to state 148

state 141

    (38) elseop -> ELSE if_statement .

    RBRACE          reduce using rule 38 (elseop -> ELSE if_statement .)


state 142

    (39) elseop -> ELSE LBRACE . block_statement RBRACE
    (21) block_statement -> . var_statement
    (22) block_statement -> . var_assignment
    (23) block_statement -> . func_call
    (24) block_statement -> . if_statement
    (25) block_statement -> . for_statement
    (26) block_statement -> . return_statement
    (27) var_statement -> . declaration_imutable
    (28) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (29) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (30) var_assignment -> . ID ASSIGN expression
    (31) func_call -> . ID LPAREN id_list RPAREN
    (32) func_call -> . ID LPAREN RPAREN
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop
    (40) for_statement -> . FOR ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> . FOR expression_relacional LBRACE block_statement RBRACE
    (44) return_statement -> . RETURN expression
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression

    MUT             shift and go to state 39
    CONST           shift and go to state 41
    ID              shift and go to state 40
    IF              shift and go to state 42
    FOR             shift and go to state 43
    RETURN          shift and go to state 44

    block_statement                shift and go to state 149
    var_statement                  shift and go to state 32
    var_assignment                 shift and go to state 33
    func_call                      shift and go to state 34
    if_statement                   shift and go to state 35
    for_statement                  shift and go to state 36
    return_statement               shift and go to state 37
    declaration_imutable           shift and go to state 38

state 143

    (40) for_statement -> FOR ID IN expression LBRACE block_statement RBRACE .

    RBRACE          reduce using rule 40 (for_statement -> FOR ID IN expression LBRACE block_statement RBRACE .)


state 144

    (41) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE . block_statement RBRACE
    (21) block_statement -> . var_statement
    (22) block_statement -> . var_assignment
    (23) block_statement -> . func_call
    (24) block_statement -> . if_statement
    (25) block_statement -> . for_statement
    (26) block_statement -> . return_statement
    (27) var_statement -> . declaration_imutable
    (28) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (29) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (30) var_assignment -> . ID ASSIGN expression
    (31) func_call -> . ID LPAREN id_list RPAREN
    (32) func_call -> . ID LPAREN RPAREN
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop
    (40) for_statement -> . FOR ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> . FOR expression_relacional LBRACE block_statement RBRACE
    (44) return_statement -> . RETURN expression
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression

    MUT             shift and go to state 39
    CONST           shift and go to state 41
    ID              shift and go to state 40
    IF              shift and go to state 42
    FOR             shift and go to state 43
    RETURN          shift and go to state 44

    declaration_imutable           shift and go to state 38
    block_statement                shift and go to state 150
    var_statement                  shift and go to state 32
    var_assignment                 shift and go to state 33
    func_call                      shift and go to state 34
    if_statement                   shift and go to state 35
    for_statement                  shift and go to state 36
    return_statement               shift and go to state 37

state 145

    (59) increment -> ID PLUS . PLUS

    PLUS            shift and go to state 151


state 146

    (60) increment -> ID MINUS . MINUS

    MINUS           shift and go to state 152


state 147

    (8) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE . block_statement RBRACE function_definition_without_main
    (21) block_statement -> . var_statement
    (22) block_statement -> . var_assignment
    (23) block_statement -> . func_call
    (24) block_statement -> . if_statement
    (25) block_statement -> . for_statement
    (26) block_statement -> . return_statement
    (27) var_statement -> . declaration_imutable
    (28) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (29) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (30) var_assignment -> . ID ASSIGN expression
    (31) func_call -> . ID LPAREN id_list RPAREN
    (32) func_call -> . ID LPAREN RPAREN
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop
    (40) for_statement -> . FOR ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> . FOR expression_relacional LBRACE block_statement RBRACE
    (44) return_statement -> . RETURN expression
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression

    MUT             shift and go to state 39
    CONST           shift and go to state 41
    ID              shift and go to state 40
    IF              shift and go to state 42
    FOR             shift and go to state 43
    RETURN          shift and go to state 44

    block_statement                shift and go to state 153
    var_statement                  shift and go to state 32
    var_assignment                 shift and go to state 33
    func_call                      shift and go to state 34
    if_statement                   shift and go to state 35
    for_statement                  shift and go to state 36
    return_statement               shift and go to state 37
    declaration_imutable           shift and go to state 38

state 148

    (9) function_definition_without_main -> FN ID LPAREN params RPAREN type . LBRACE block_statement RBRACE function_definition_without_main

    LBRACE          shift and go to state 154


state 149

    (39) elseop -> ELSE LBRACE block_statement . RBRACE

    RBRACE          shift and go to state 155


state 150

    (41) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement . RBRACE

    RBRACE          shift and go to state 156


state 151

    (59) increment -> ID PLUS PLUS .

    LBRACE          reduce using rule 59 (increment -> ID PLUS PLUS .)


state 152

    (60) increment -> ID MINUS MINUS .

    LBRACE          reduce using rule 60 (increment -> ID MINUS MINUS .)


state 153

    (8) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement . RBRACE function_definition_without_main

    RBRACE          shift and go to state 157


state 154

    (9) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE . block_statement RBRACE function_definition_without_main
    (21) block_statement -> . var_statement
    (22) block_statement -> . var_assignment
    (23) block_statement -> . func_call
    (24) block_statement -> . if_statement
    (25) block_statement -> . for_statement
    (26) block_statement -> . return_statement
    (27) var_statement -> . declaration_imutable
    (28) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (29) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (30) var_assignment -> . ID ASSIGN expression
    (31) func_call -> . ID LPAREN id_list RPAREN
    (32) func_call -> . ID LPAREN RPAREN
    (36) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE
    (37) if_statement -> . IF expression_relacional LBRACE block_statement RBRACE elseop
    (40) for_statement -> . FOR ID IN expression LBRACE block_statement RBRACE
    (41) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE
    (42) for_statement -> . FOR expression_relacional LBRACE block_statement RBRACE
    (44) return_statement -> . RETURN expression
    (43) declaration_imutable -> . ID DECLARE_ASSIGN expression

    MUT             shift and go to state 39
    CONST           shift and go to state 41
    ID              shift and go to state 40
    IF              shift and go to state 42
    FOR             shift and go to state 43
    RETURN          shift and go to state 44

    block_statement                shift and go to state 158
    var_statement                  shift and go to state 32
    var_assignment                 shift and go to state 33
    func_call                      shift and go to state 34
    if_statement                   shift and go to state 35
    for_statement                  shift and go to state 36
    return_statement               shift and go to state 37
    declaration_imutable           shift and go to state 38

state 155

    (39) elseop -> ELSE LBRACE block_statement RBRACE .

    RBRACE          reduce using rule 39 (elseop -> ELSE LBRACE block_statement RBRACE .)


state 156

    (41) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE .

    RBRACE          reduce using rule 41 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE block_statement RBRACE .)


state 157

    (8) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE . function_definition_without_main
    (8) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (10) function_definition_without_main -> .

    FN              shift and go to state 72
    $end            reduce using rule 10 (function_definition_without_main -> .)

    function_definition_without_main shift and go to state 159

state 158

    (9) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement . RBRACE function_definition_without_main

    RBRACE          shift and go to state 160


state 159

    (8) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main .

    $end            reduce using rule 8 (function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main .)


state 160

    (9) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE . function_definition_without_main
    (8) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (9) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (10) function_definition_without_main -> .

    FN              shift and go to state 72
    $end            reduce using rule 10 (function_definition_without_main -> .)

    function_definition_without_main shift and go to state 161

state 161

    (9) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main .

    $end            reduce using rule 9 (function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main .)

