Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program_Import program_items
Rule 2     program -> program_items
Rule 3     program_Import -> IMPORT ID program_Import
Rule 4     program_Import -> IMPORT ID
Rule 5     program_items -> program_item program_items
Rule 6     program_items -> <empty>
Rule 7     program_item -> const_declaration
Rule 8     program_item -> function_definition
Rule 9     const_declaration -> CONST ID DECLARE_ASSIGN expression
Rule 10    function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE
Rule 11    function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE
Rule 12    function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main
Rule 13    function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE
Rule 14    function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
Rule 15    function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
Rule 16    function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE
Rule 17    function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE
Rule 18    params -> param more_params
Rule 19    more_params -> COMMA param more_params
Rule 20    more_params -> <empty>
Rule 21    param -> ID type
Rule 22    type -> INT
Rule 23    type -> F32
Rule 24    type -> F64
Rule 25    type -> STRING
Rule 26    type -> BOOL
Rule 27    type -> RUNE
Rule 28    block_statement -> statement
Rule 29    statement -> var_statement statement
Rule 30    statement -> var_assignment statement
Rule 31    statement -> func_call statement
Rule 32    statement -> if_statement statement
Rule 33    statement -> for_statement statement
Rule 34    statement -> break_statement
Rule 35    statement -> return_statement
Rule 36    statement -> <empty>
Rule 37    statement -> list_statement statement
Rule 38    statement -> list_assignment statement
Rule 39    statement -> increment_rule statement
Rule 40    statement -> assignment statement
Rule 41    var_statement -> declaration_imutable
Rule 42    var_statement -> MUT ID DECLARE_ASSIGN expression
Rule 43    var_statement -> CONST ID DECLARE_ASSIGN expression
Rule 44    var_assignment -> ID ASSIGN expression
Rule 45    list_statement -> declaration_imutable_list
Rule 46    list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
Rule 47    list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
Rule 48    list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression
Rule 49    func_call -> ID LPAREN id_list RPAREN
Rule 50    func_call -> ID LPAREN RPAREN
Rule 51    func_call -> func_call_list
Rule 52    func_call_list -> ID LBRACKET DOTDOT RBRACKET
Rule 53    func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
Rule 54    id_list -> expression more_expressions
Rule 55    more_expressions -> COMMA expression more_expressions
Rule 56    more_expressions -> <empty>
Rule 57    if_statement -> IF expression_relacional LBRACE statement RBRACE
Rule 58    if_statement -> IF expression_relacional LBRACE statement RBRACE elseop
Rule 59    elseop -> ELSE if_statement
Rule 60    elseop -> ELSE LBRACE statement RBRACE
Rule 61    for_statement -> FOR ID IN expression LBRACE statement RBRACE
Rule 62    for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
Rule 63    for_statement -> FOR expression_relacional LBRACE statement RBRACE
Rule 64    declaration_imutable -> ID DECLARE_ASSIGN expression
Rule 65    declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
Rule 66    break_statement -> BREAK
Rule 67    return_statement -> RETURN expression
Rule 68    expression -> expression PLUS term
Rule 69    expression -> expression MINUS term
Rule 70    expression -> increment_rule
Rule 71    expression -> func_call
Rule 72    expression -> term
Rule 73    term -> term TIMES factor
Rule 74    term -> term DIVIDE factor
Rule 75    term -> term MOD factor
Rule 76    term -> factor
Rule 77    factor -> ID
Rule 78    factor -> NUMBER
Rule 79    factor -> NUMBERFLOAT
Rule 80    factor -> WORD
Rule 81    factor -> TRUE
Rule 82    factor -> FALSE
Rule 83    factor -> RUNEVALOR
Rule 84    factor -> LPAREN expression RPAREN
Rule 85    factor -> ID LBRACKET NUMBER RBRACKET
Rule 86    factor -> NOTACAOCIENTIFICA
Rule 87    factor -> BINARY
Rule 88    factor -> OCTAL
Rule 89    factor -> HEX
Rule 90    factor -> INTERPOLATIONSTRING
Rule 91    factor -> size_of_expression
Rule 92    size_of_expression -> SIZEOF LPAREN expression RPAREN
Rule 93    size_of_expression -> SIZEOF LPAREN type RPAREN
Rule 94    increment_rule -> ID INCREMENT
Rule 95    increment_rule -> ID DECREMENT
Rule 96    expression_relacional -> expression EQ expression
Rule 97    expression_relacional -> expression NEQ expression
Rule 98    expression_relacional -> expression LT expression
Rule 99    expression_relacional -> expression LE expression
Rule 100   expression_relacional -> expression GT expression
Rule 101   expression_relacional -> expression GE expression
Rule 102   expression_relacional -> expression AND expression
Rule 103   expression_relacional -> expression OR expression
Rule 104   expression_relacional -> NOT expression
Rule 105   assignment -> ID PLUS_ASSIGN expression
Rule 106   assignment -> ID MINUS_ASSIGN expression
Rule 107   assignment -> ID TIMES_ASSIGN expression
Rule 108   assignment -> ID DIVIDE_ASSIGN expression
Rule 109   assignment -> ID MOD_ASSIGN expression
Rule 110   assignment -> ID BIT_AND_ASSIGN expression
Rule 111   assignment -> ID BIT_OR_ASSIGN expression
Rule 112   assignment -> ID BIT_XOR_ASSIGN expression
Rule 113   assignment -> ID BIT_LSHIFT_ASSIGN expression
Rule 114   assignment -> ID BIT_RSHIFT_ASSIGN expression

Terminals, with rules where they appear

AND                  : 102
ASSIGN               : 44 48
BINARY               : 87
BIT_AND_ASSIGN       : 110
BIT_LSHIFT_ASSIGN    : 113
BIT_OR_ASSIGN        : 111
BIT_RSHIFT_ASSIGN    : 114
BIT_XOR_ASSIGN       : 112
BOOL                 : 26
BREAK                : 66
COMMA                : 19 55
CONST                : 9 43
DECLARE_ASSIGN       : 9 42 43 46 47 64 65
DECREMENT            : 95
DIVIDE               : 74
DIVIDE_ASSIGN        : 108
DOTDOT               : 52 53
ELSE                 : 59 60
EQ                   : 96
F32                  : 23
F64                  : 24
FALSE                : 82
FN                   : 10 11 12 13 14 15 16 17
FOR                  : 61 62 63
GE                   : 101
GT                   : 100
HEX                  : 89
ID                   : 3 4 9 10 11 14 15 16 17 21 42 43 44 46 47 48 49 50 52 53 61 64 65 77 85 94 95 105 106 107 108 109 110 111 112 113 114
IF                   : 57 58
IMPORT               : 3 4
IN                   : 61
INCREMENT            : 94
INT                  : 22
INTERPOLATIONSTRING  : 90
LBRACE               : 10 11 12 13 14 15 16 17 57 58 60 61 62 63
LBRACKET             : 46 47 48 52 53 65 85
LE                   : 99
LPAREN               : 10 11 12 13 14 15 16 17 49 50 84 92 93
LT                   : 98
MAIN                 : 12 13
MINUS                : 69
MINUS_ASSIGN         : 106
MOD                  : 75
MOD_ASSIGN           : 109
MUT                  : 42 46 47
NEQ                  : 97
NOT                  : 104
NOTACAOCIENTIFICA    : 86
NUMBER               : 48 53 53 78 85
NUMBERFLOAT          : 79
OCTAL                : 88
OR                   : 103
PLUS                 : 68
PLUS_ASSIGN          : 105
RBRACE               : 10 11 12 13 14 15 16 17 57 58 60 61 62 63
RBRACKET             : 46 47 48 52 53 65 85
RETURN               : 67
RPAREN               : 10 11 12 13 14 15 16 17 49 50 84 92 93
RUNE                 : 27
RUNEVALOR            : 83
SEMICOLON            : 62 62
SIZEOF               : 92 93
STRING               : 25
TIMES                : 73
TIMES_ASSIGN         : 107
TRUE                 : 81
WORD                 : 80
error                : 

Nonterminals, with rules where they appear

assignment           : 40
block_statement      : 10 11 12 13 14 15 16 17
break_statement      : 34
const_declaration    : 7
declaration_imutable : 41 62
declaration_imutable_list : 45
elseop               : 58
expression           : 9 42 43 44 48 54 55 61 64 67 68 69 84 92 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 105 106 107 108 109 110 111 112 113 114
expression_relacional : 57 58 62 63
factor               : 73 74 75 76
for_statement        : 33
func_call            : 31 71
func_call_list       : 51
function_definition  : 8
function_definition_without_main : 12 14 15
id_list              : 46 47 49 65
if_statement         : 32 59
increment_rule       : 39 62 70
list_assignment      : 38
list_statement       : 37
more_expressions     : 54 55
more_params          : 18 19
param                : 18 19
params               : 10 11 14 15 16 17
program              : 0
program_Import       : 1 3
program_item         : 5
program_items        : 1 2 5
return_statement     : 35
size_of_expression   : 91
statement            : 28 29 30 31 32 33 37 38 39 40 57 58 60 61 62 63
term                 : 68 69 72 73 74 75
type                 : 11 15 17 21 47 93
var_assignment       : 30
var_statement        : 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_Import program_items
    (2) program -> . program_items
    (3) program_Import -> . IMPORT ID program_Import
    (4) program_Import -> . IMPORT ID
    (5) program_items -> . program_item program_items
    (6) program_items -> .
    (7) program_item -> . const_declaration
    (8) program_item -> . function_definition
    (9) const_declaration -> . CONST ID DECLARE_ASSIGN expression
    (10) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE
    (11) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE
    (12) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (13) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE

    IMPORT          shift and go to state 4
    $end            reduce using rule 6 (program_items -> .)
    CONST           shift and go to state 8
    FN              shift and go to state 9

    program                        shift and go to state 1
    program_Import                 shift and go to state 2
    program_items                  shift and go to state 3
    program_item                   shift and go to state 5
    const_declaration              shift and go to state 6
    function_definition            shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> program_Import . program_items
    (5) program_items -> . program_item program_items
    (6) program_items -> .
    (7) program_item -> . const_declaration
    (8) program_item -> . function_definition
    (9) const_declaration -> . CONST ID DECLARE_ASSIGN expression
    (10) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE
    (11) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE
    (12) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (13) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE

    $end            reduce using rule 6 (program_items -> .)
    CONST           shift and go to state 8
    FN              shift and go to state 9

    program_items                  shift and go to state 10
    program_item                   shift and go to state 5
    const_declaration              shift and go to state 6
    function_definition            shift and go to state 7

state 3

    (2) program -> program_items .

    $end            reduce using rule 2 (program -> program_items .)


state 4

    (3) program_Import -> IMPORT . ID program_Import
    (4) program_Import -> IMPORT . ID

    ID              shift and go to state 11


state 5

    (5) program_items -> program_item . program_items
    (5) program_items -> . program_item program_items
    (6) program_items -> .
    (7) program_item -> . const_declaration
    (8) program_item -> . function_definition
    (9) const_declaration -> . CONST ID DECLARE_ASSIGN expression
    (10) function_definition -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE
    (11) function_definition -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE
    (12) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (13) function_definition -> . FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE

    $end            reduce using rule 6 (program_items -> .)
    CONST           shift and go to state 8
    FN              shift and go to state 9

    program_item                   shift and go to state 5
    program_items                  shift and go to state 12
    const_declaration              shift and go to state 6
    function_definition            shift and go to state 7

state 6

    (7) program_item -> const_declaration .

    CONST           reduce using rule 7 (program_item -> const_declaration .)
    FN              reduce using rule 7 (program_item -> const_declaration .)
    $end            reduce using rule 7 (program_item -> const_declaration .)


state 7

    (8) program_item -> function_definition .

    CONST           reduce using rule 8 (program_item -> function_definition .)
    FN              reduce using rule 8 (program_item -> function_definition .)
    $end            reduce using rule 8 (program_item -> function_definition .)


state 8

    (9) const_declaration -> CONST . ID DECLARE_ASSIGN expression

    ID              shift and go to state 13


state 9

    (10) function_definition -> FN . ID LPAREN params RPAREN LBRACE block_statement RBRACE
    (11) function_definition -> FN . ID LPAREN params RPAREN type LBRACE block_statement RBRACE
    (12) function_definition -> FN . MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (13) function_definition -> FN . MAIN LPAREN RPAREN LBRACE block_statement RBRACE

    ID              shift and go to state 14
    MAIN            shift and go to state 15


state 10

    (1) program -> program_Import program_items .

    $end            reduce using rule 1 (program -> program_Import program_items .)


state 11

    (3) program_Import -> IMPORT ID . program_Import
    (4) program_Import -> IMPORT ID .
    (3) program_Import -> . IMPORT ID program_Import
    (4) program_Import -> . IMPORT ID

    CONST           reduce using rule 4 (program_Import -> IMPORT ID .)
    FN              reduce using rule 4 (program_Import -> IMPORT ID .)
    $end            reduce using rule 4 (program_Import -> IMPORT ID .)
    IMPORT          shift and go to state 4

    program_Import                 shift and go to state 16

state 12

    (5) program_items -> program_item program_items .

    $end            reduce using rule 5 (program_items -> program_item program_items .)


state 13

    (9) const_declaration -> CONST ID . DECLARE_ASSIGN expression

    DECLARE_ASSIGN  shift and go to state 17


state 14

    (10) function_definition -> FN ID . LPAREN params RPAREN LBRACE block_statement RBRACE
    (11) function_definition -> FN ID . LPAREN params RPAREN type LBRACE block_statement RBRACE

    LPAREN          shift and go to state 18


state 15

    (12) function_definition -> FN MAIN . LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (13) function_definition -> FN MAIN . LPAREN RPAREN LBRACE block_statement RBRACE

    LPAREN          shift and go to state 19


state 16

    (3) program_Import -> IMPORT ID program_Import .

    CONST           reduce using rule 3 (program_Import -> IMPORT ID program_Import .)
    FN              reduce using rule 3 (program_Import -> IMPORT ID program_Import .)
    $end            reduce using rule 3 (program_Import -> IMPORT ID program_Import .)


state 17

    (9) const_declaration -> CONST ID DECLARE_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 21
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 18

    (10) function_definition -> FN ID LPAREN . params RPAREN LBRACE block_statement RBRACE
    (11) function_definition -> FN ID LPAREN . params RPAREN type LBRACE block_statement RBRACE
    (18) params -> . param more_params
    (21) param -> . ID type

    ID              shift and go to state 41

    params                         shift and go to state 42
    param                          shift and go to state 43

state 19

    (12) function_definition -> FN MAIN LPAREN . RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (13) function_definition -> FN MAIN LPAREN . RPAREN LBRACE block_statement RBRACE

    RPAREN          shift and go to state 44


state 20

    (94) increment_rule -> ID . INCREMENT
    (95) increment_rule -> ID . DECREMENT
    (49) func_call -> ID . LPAREN id_list RPAREN
    (50) func_call -> ID . LPAREN RPAREN
    (52) func_call_list -> ID . LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> ID . LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> ID .
    (85) factor -> ID . LBRACKET NUMBER RBRACKET

    INCREMENT       shift and go to state 45
    DECREMENT       shift and go to state 46
    LPAREN          shift and go to state 47
    LBRACKET        shift and go to state 48
    TIMES           reduce using rule 77 (factor -> ID .)
    DIVIDE          reduce using rule 77 (factor -> ID .)
    MOD             reduce using rule 77 (factor -> ID .)
    PLUS            reduce using rule 77 (factor -> ID .)
    MINUS           reduce using rule 77 (factor -> ID .)
    CONST           reduce using rule 77 (factor -> ID .)
    FN              reduce using rule 77 (factor -> ID .)
    $end            reduce using rule 77 (factor -> ID .)
    RPAREN          reduce using rule 77 (factor -> ID .)
    COMMA           reduce using rule 77 (factor -> ID .)
    EQ              reduce using rule 77 (factor -> ID .)
    NEQ             reduce using rule 77 (factor -> ID .)
    LT              reduce using rule 77 (factor -> ID .)
    LE              reduce using rule 77 (factor -> ID .)
    GT              reduce using rule 77 (factor -> ID .)
    GE              reduce using rule 77 (factor -> ID .)
    AND             reduce using rule 77 (factor -> ID .)
    OR              reduce using rule 77 (factor -> ID .)
    RBRACE          reduce using rule 77 (factor -> ID .)
    RBRACKET        reduce using rule 77 (factor -> ID .)
    MUT             reduce using rule 77 (factor -> ID .)
    ID              reduce using rule 77 (factor -> ID .)
    IF              reduce using rule 77 (factor -> ID .)
    FOR             reduce using rule 77 (factor -> ID .)
    BREAK           reduce using rule 77 (factor -> ID .)
    RETURN          reduce using rule 77 (factor -> ID .)
    LBRACE          reduce using rule 77 (factor -> ID .)
    SEMICOLON       reduce using rule 77 (factor -> ID .)


state 21

    (9) const_declaration -> CONST ID DECLARE_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    CONST           reduce using rule 9 (const_declaration -> CONST ID DECLARE_ASSIGN expression .)
    FN              reduce using rule 9 (const_declaration -> CONST ID DECLARE_ASSIGN expression .)
    $end            reduce using rule 9 (const_declaration -> CONST ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 22

    (72) expression -> term .
    (73) term -> term . TIMES factor
    (74) term -> term . DIVIDE factor
    (75) term -> term . MOD factor

    PLUS            reduce using rule 72 (expression -> term .)
    MINUS           reduce using rule 72 (expression -> term .)
    CONST           reduce using rule 72 (expression -> term .)
    FN              reduce using rule 72 (expression -> term .)
    $end            reduce using rule 72 (expression -> term .)
    RPAREN          reduce using rule 72 (expression -> term .)
    COMMA           reduce using rule 72 (expression -> term .)
    EQ              reduce using rule 72 (expression -> term .)
    NEQ             reduce using rule 72 (expression -> term .)
    LT              reduce using rule 72 (expression -> term .)
    LE              reduce using rule 72 (expression -> term .)
    GT              reduce using rule 72 (expression -> term .)
    GE              reduce using rule 72 (expression -> term .)
    AND             reduce using rule 72 (expression -> term .)
    OR              reduce using rule 72 (expression -> term .)
    RBRACE          reduce using rule 72 (expression -> term .)
    RBRACKET        reduce using rule 72 (expression -> term .)
    MUT             reduce using rule 72 (expression -> term .)
    ID              reduce using rule 72 (expression -> term .)
    IF              reduce using rule 72 (expression -> term .)
    FOR             reduce using rule 72 (expression -> term .)
    BREAK           reduce using rule 72 (expression -> term .)
    RETURN          reduce using rule 72 (expression -> term .)
    LBRACE          reduce using rule 72 (expression -> term .)
    SEMICOLON       reduce using rule 72 (expression -> term .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    MOD             shift and go to state 53


state 23

    (70) expression -> increment_rule .

    PLUS            reduce using rule 70 (expression -> increment_rule .)
    MINUS           reduce using rule 70 (expression -> increment_rule .)
    CONST           reduce using rule 70 (expression -> increment_rule .)
    FN              reduce using rule 70 (expression -> increment_rule .)
    $end            reduce using rule 70 (expression -> increment_rule .)
    RPAREN          reduce using rule 70 (expression -> increment_rule .)
    COMMA           reduce using rule 70 (expression -> increment_rule .)
    EQ              reduce using rule 70 (expression -> increment_rule .)
    NEQ             reduce using rule 70 (expression -> increment_rule .)
    LT              reduce using rule 70 (expression -> increment_rule .)
    LE              reduce using rule 70 (expression -> increment_rule .)
    GT              reduce using rule 70 (expression -> increment_rule .)
    GE              reduce using rule 70 (expression -> increment_rule .)
    AND             reduce using rule 70 (expression -> increment_rule .)
    OR              reduce using rule 70 (expression -> increment_rule .)
    RBRACE          reduce using rule 70 (expression -> increment_rule .)
    RBRACKET        reduce using rule 70 (expression -> increment_rule .)
    MUT             reduce using rule 70 (expression -> increment_rule .)
    ID              reduce using rule 70 (expression -> increment_rule .)
    IF              reduce using rule 70 (expression -> increment_rule .)
    FOR             reduce using rule 70 (expression -> increment_rule .)
    BREAK           reduce using rule 70 (expression -> increment_rule .)
    RETURN          reduce using rule 70 (expression -> increment_rule .)
    LBRACE          reduce using rule 70 (expression -> increment_rule .)
    SEMICOLON       reduce using rule 70 (expression -> increment_rule .)


state 24

    (71) expression -> func_call .

    PLUS            reduce using rule 71 (expression -> func_call .)
    MINUS           reduce using rule 71 (expression -> func_call .)
    CONST           reduce using rule 71 (expression -> func_call .)
    FN              reduce using rule 71 (expression -> func_call .)
    $end            reduce using rule 71 (expression -> func_call .)
    RPAREN          reduce using rule 71 (expression -> func_call .)
    COMMA           reduce using rule 71 (expression -> func_call .)
    EQ              reduce using rule 71 (expression -> func_call .)
    NEQ             reduce using rule 71 (expression -> func_call .)
    LT              reduce using rule 71 (expression -> func_call .)
    LE              reduce using rule 71 (expression -> func_call .)
    GT              reduce using rule 71 (expression -> func_call .)
    GE              reduce using rule 71 (expression -> func_call .)
    AND             reduce using rule 71 (expression -> func_call .)
    OR              reduce using rule 71 (expression -> func_call .)
    RBRACE          reduce using rule 71 (expression -> func_call .)
    RBRACKET        reduce using rule 71 (expression -> func_call .)
    MUT             reduce using rule 71 (expression -> func_call .)
    ID              reduce using rule 71 (expression -> func_call .)
    IF              reduce using rule 71 (expression -> func_call .)
    FOR             reduce using rule 71 (expression -> func_call .)
    BREAK           reduce using rule 71 (expression -> func_call .)
    RETURN          reduce using rule 71 (expression -> func_call .)
    LBRACE          reduce using rule 71 (expression -> func_call .)
    SEMICOLON       reduce using rule 71 (expression -> func_call .)


state 25

    (84) factor -> LPAREN . expression RPAREN
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 54
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 26

    (51) func_call -> func_call_list .

    PLUS            reduce using rule 51 (func_call -> func_call_list .)
    MINUS           reduce using rule 51 (func_call -> func_call_list .)
    CONST           reduce using rule 51 (func_call -> func_call_list .)
    FN              reduce using rule 51 (func_call -> func_call_list .)
    $end            reduce using rule 51 (func_call -> func_call_list .)
    RPAREN          reduce using rule 51 (func_call -> func_call_list .)
    COMMA           reduce using rule 51 (func_call -> func_call_list .)
    MUT             reduce using rule 51 (func_call -> func_call_list .)
    ID              reduce using rule 51 (func_call -> func_call_list .)
    IF              reduce using rule 51 (func_call -> func_call_list .)
    FOR             reduce using rule 51 (func_call -> func_call_list .)
    BREAK           reduce using rule 51 (func_call -> func_call_list .)
    RETURN          reduce using rule 51 (func_call -> func_call_list .)
    RBRACE          reduce using rule 51 (func_call -> func_call_list .)
    EQ              reduce using rule 51 (func_call -> func_call_list .)
    NEQ             reduce using rule 51 (func_call -> func_call_list .)
    LT              reduce using rule 51 (func_call -> func_call_list .)
    LE              reduce using rule 51 (func_call -> func_call_list .)
    GT              reduce using rule 51 (func_call -> func_call_list .)
    GE              reduce using rule 51 (func_call -> func_call_list .)
    AND             reduce using rule 51 (func_call -> func_call_list .)
    OR              reduce using rule 51 (func_call -> func_call_list .)
    RBRACKET        reduce using rule 51 (func_call -> func_call_list .)
    LBRACE          reduce using rule 51 (func_call -> func_call_list .)
    SEMICOLON       reduce using rule 51 (func_call -> func_call_list .)


state 27

    (76) term -> factor .

    TIMES           reduce using rule 76 (term -> factor .)
    DIVIDE          reduce using rule 76 (term -> factor .)
    MOD             reduce using rule 76 (term -> factor .)
    PLUS            reduce using rule 76 (term -> factor .)
    MINUS           reduce using rule 76 (term -> factor .)
    CONST           reduce using rule 76 (term -> factor .)
    FN              reduce using rule 76 (term -> factor .)
    $end            reduce using rule 76 (term -> factor .)
    RPAREN          reduce using rule 76 (term -> factor .)
    COMMA           reduce using rule 76 (term -> factor .)
    EQ              reduce using rule 76 (term -> factor .)
    NEQ             reduce using rule 76 (term -> factor .)
    LT              reduce using rule 76 (term -> factor .)
    LE              reduce using rule 76 (term -> factor .)
    GT              reduce using rule 76 (term -> factor .)
    GE              reduce using rule 76 (term -> factor .)
    AND             reduce using rule 76 (term -> factor .)
    OR              reduce using rule 76 (term -> factor .)
    RBRACE          reduce using rule 76 (term -> factor .)
    RBRACKET        reduce using rule 76 (term -> factor .)
    MUT             reduce using rule 76 (term -> factor .)
    ID              reduce using rule 76 (term -> factor .)
    IF              reduce using rule 76 (term -> factor .)
    FOR             reduce using rule 76 (term -> factor .)
    BREAK           reduce using rule 76 (term -> factor .)
    RETURN          reduce using rule 76 (term -> factor .)
    LBRACE          reduce using rule 76 (term -> factor .)
    SEMICOLON       reduce using rule 76 (term -> factor .)


state 28

    (78) factor -> NUMBER .

    TIMES           reduce using rule 78 (factor -> NUMBER .)
    DIVIDE          reduce using rule 78 (factor -> NUMBER .)
    MOD             reduce using rule 78 (factor -> NUMBER .)
    PLUS            reduce using rule 78 (factor -> NUMBER .)
    MINUS           reduce using rule 78 (factor -> NUMBER .)
    CONST           reduce using rule 78 (factor -> NUMBER .)
    FN              reduce using rule 78 (factor -> NUMBER .)
    $end            reduce using rule 78 (factor -> NUMBER .)
    RPAREN          reduce using rule 78 (factor -> NUMBER .)
    COMMA           reduce using rule 78 (factor -> NUMBER .)
    EQ              reduce using rule 78 (factor -> NUMBER .)
    NEQ             reduce using rule 78 (factor -> NUMBER .)
    LT              reduce using rule 78 (factor -> NUMBER .)
    LE              reduce using rule 78 (factor -> NUMBER .)
    GT              reduce using rule 78 (factor -> NUMBER .)
    GE              reduce using rule 78 (factor -> NUMBER .)
    AND             reduce using rule 78 (factor -> NUMBER .)
    OR              reduce using rule 78 (factor -> NUMBER .)
    RBRACE          reduce using rule 78 (factor -> NUMBER .)
    RBRACKET        reduce using rule 78 (factor -> NUMBER .)
    MUT             reduce using rule 78 (factor -> NUMBER .)
    ID              reduce using rule 78 (factor -> NUMBER .)
    IF              reduce using rule 78 (factor -> NUMBER .)
    FOR             reduce using rule 78 (factor -> NUMBER .)
    BREAK           reduce using rule 78 (factor -> NUMBER .)
    RETURN          reduce using rule 78 (factor -> NUMBER .)
    LBRACE          reduce using rule 78 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 78 (factor -> NUMBER .)


state 29

    (79) factor -> NUMBERFLOAT .

    TIMES           reduce using rule 79 (factor -> NUMBERFLOAT .)
    DIVIDE          reduce using rule 79 (factor -> NUMBERFLOAT .)
    MOD             reduce using rule 79 (factor -> NUMBERFLOAT .)
    PLUS            reduce using rule 79 (factor -> NUMBERFLOAT .)
    MINUS           reduce using rule 79 (factor -> NUMBERFLOAT .)
    CONST           reduce using rule 79 (factor -> NUMBERFLOAT .)
    FN              reduce using rule 79 (factor -> NUMBERFLOAT .)
    $end            reduce using rule 79 (factor -> NUMBERFLOAT .)
    RPAREN          reduce using rule 79 (factor -> NUMBERFLOAT .)
    COMMA           reduce using rule 79 (factor -> NUMBERFLOAT .)
    EQ              reduce using rule 79 (factor -> NUMBERFLOAT .)
    NEQ             reduce using rule 79 (factor -> NUMBERFLOAT .)
    LT              reduce using rule 79 (factor -> NUMBERFLOAT .)
    LE              reduce using rule 79 (factor -> NUMBERFLOAT .)
    GT              reduce using rule 79 (factor -> NUMBERFLOAT .)
    GE              reduce using rule 79 (factor -> NUMBERFLOAT .)
    AND             reduce using rule 79 (factor -> NUMBERFLOAT .)
    OR              reduce using rule 79 (factor -> NUMBERFLOAT .)
    RBRACE          reduce using rule 79 (factor -> NUMBERFLOAT .)
    RBRACKET        reduce using rule 79 (factor -> NUMBERFLOAT .)
    MUT             reduce using rule 79 (factor -> NUMBERFLOAT .)
    ID              reduce using rule 79 (factor -> NUMBERFLOAT .)
    IF              reduce using rule 79 (factor -> NUMBERFLOAT .)
    FOR             reduce using rule 79 (factor -> NUMBERFLOAT .)
    BREAK           reduce using rule 79 (factor -> NUMBERFLOAT .)
    RETURN          reduce using rule 79 (factor -> NUMBERFLOAT .)
    LBRACE          reduce using rule 79 (factor -> NUMBERFLOAT .)
    SEMICOLON       reduce using rule 79 (factor -> NUMBERFLOAT .)


state 30

    (80) factor -> WORD .

    TIMES           reduce using rule 80 (factor -> WORD .)
    DIVIDE          reduce using rule 80 (factor -> WORD .)
    MOD             reduce using rule 80 (factor -> WORD .)
    PLUS            reduce using rule 80 (factor -> WORD .)
    MINUS           reduce using rule 80 (factor -> WORD .)
    CONST           reduce using rule 80 (factor -> WORD .)
    FN              reduce using rule 80 (factor -> WORD .)
    $end            reduce using rule 80 (factor -> WORD .)
    RPAREN          reduce using rule 80 (factor -> WORD .)
    COMMA           reduce using rule 80 (factor -> WORD .)
    EQ              reduce using rule 80 (factor -> WORD .)
    NEQ             reduce using rule 80 (factor -> WORD .)
    LT              reduce using rule 80 (factor -> WORD .)
    LE              reduce using rule 80 (factor -> WORD .)
    GT              reduce using rule 80 (factor -> WORD .)
    GE              reduce using rule 80 (factor -> WORD .)
    AND             reduce using rule 80 (factor -> WORD .)
    OR              reduce using rule 80 (factor -> WORD .)
    RBRACE          reduce using rule 80 (factor -> WORD .)
    RBRACKET        reduce using rule 80 (factor -> WORD .)
    MUT             reduce using rule 80 (factor -> WORD .)
    ID              reduce using rule 80 (factor -> WORD .)
    IF              reduce using rule 80 (factor -> WORD .)
    FOR             reduce using rule 80 (factor -> WORD .)
    BREAK           reduce using rule 80 (factor -> WORD .)
    RETURN          reduce using rule 80 (factor -> WORD .)
    LBRACE          reduce using rule 80 (factor -> WORD .)
    SEMICOLON       reduce using rule 80 (factor -> WORD .)


state 31

    (81) factor -> TRUE .

    TIMES           reduce using rule 81 (factor -> TRUE .)
    DIVIDE          reduce using rule 81 (factor -> TRUE .)
    MOD             reduce using rule 81 (factor -> TRUE .)
    PLUS            reduce using rule 81 (factor -> TRUE .)
    MINUS           reduce using rule 81 (factor -> TRUE .)
    CONST           reduce using rule 81 (factor -> TRUE .)
    FN              reduce using rule 81 (factor -> TRUE .)
    $end            reduce using rule 81 (factor -> TRUE .)
    RPAREN          reduce using rule 81 (factor -> TRUE .)
    COMMA           reduce using rule 81 (factor -> TRUE .)
    EQ              reduce using rule 81 (factor -> TRUE .)
    NEQ             reduce using rule 81 (factor -> TRUE .)
    LT              reduce using rule 81 (factor -> TRUE .)
    LE              reduce using rule 81 (factor -> TRUE .)
    GT              reduce using rule 81 (factor -> TRUE .)
    GE              reduce using rule 81 (factor -> TRUE .)
    AND             reduce using rule 81 (factor -> TRUE .)
    OR              reduce using rule 81 (factor -> TRUE .)
    RBRACE          reduce using rule 81 (factor -> TRUE .)
    RBRACKET        reduce using rule 81 (factor -> TRUE .)
    MUT             reduce using rule 81 (factor -> TRUE .)
    ID              reduce using rule 81 (factor -> TRUE .)
    IF              reduce using rule 81 (factor -> TRUE .)
    FOR             reduce using rule 81 (factor -> TRUE .)
    BREAK           reduce using rule 81 (factor -> TRUE .)
    RETURN          reduce using rule 81 (factor -> TRUE .)
    LBRACE          reduce using rule 81 (factor -> TRUE .)
    SEMICOLON       reduce using rule 81 (factor -> TRUE .)


state 32

    (82) factor -> FALSE .

    TIMES           reduce using rule 82 (factor -> FALSE .)
    DIVIDE          reduce using rule 82 (factor -> FALSE .)
    MOD             reduce using rule 82 (factor -> FALSE .)
    PLUS            reduce using rule 82 (factor -> FALSE .)
    MINUS           reduce using rule 82 (factor -> FALSE .)
    CONST           reduce using rule 82 (factor -> FALSE .)
    FN              reduce using rule 82 (factor -> FALSE .)
    $end            reduce using rule 82 (factor -> FALSE .)
    RPAREN          reduce using rule 82 (factor -> FALSE .)
    COMMA           reduce using rule 82 (factor -> FALSE .)
    EQ              reduce using rule 82 (factor -> FALSE .)
    NEQ             reduce using rule 82 (factor -> FALSE .)
    LT              reduce using rule 82 (factor -> FALSE .)
    LE              reduce using rule 82 (factor -> FALSE .)
    GT              reduce using rule 82 (factor -> FALSE .)
    GE              reduce using rule 82 (factor -> FALSE .)
    AND             reduce using rule 82 (factor -> FALSE .)
    OR              reduce using rule 82 (factor -> FALSE .)
    RBRACE          reduce using rule 82 (factor -> FALSE .)
    RBRACKET        reduce using rule 82 (factor -> FALSE .)
    MUT             reduce using rule 82 (factor -> FALSE .)
    ID              reduce using rule 82 (factor -> FALSE .)
    IF              reduce using rule 82 (factor -> FALSE .)
    FOR             reduce using rule 82 (factor -> FALSE .)
    BREAK           reduce using rule 82 (factor -> FALSE .)
    RETURN          reduce using rule 82 (factor -> FALSE .)
    LBRACE          reduce using rule 82 (factor -> FALSE .)
    SEMICOLON       reduce using rule 82 (factor -> FALSE .)


state 33

    (83) factor -> RUNEVALOR .

    TIMES           reduce using rule 83 (factor -> RUNEVALOR .)
    DIVIDE          reduce using rule 83 (factor -> RUNEVALOR .)
    MOD             reduce using rule 83 (factor -> RUNEVALOR .)
    PLUS            reduce using rule 83 (factor -> RUNEVALOR .)
    MINUS           reduce using rule 83 (factor -> RUNEVALOR .)
    CONST           reduce using rule 83 (factor -> RUNEVALOR .)
    FN              reduce using rule 83 (factor -> RUNEVALOR .)
    $end            reduce using rule 83 (factor -> RUNEVALOR .)
    RPAREN          reduce using rule 83 (factor -> RUNEVALOR .)
    COMMA           reduce using rule 83 (factor -> RUNEVALOR .)
    EQ              reduce using rule 83 (factor -> RUNEVALOR .)
    NEQ             reduce using rule 83 (factor -> RUNEVALOR .)
    LT              reduce using rule 83 (factor -> RUNEVALOR .)
    LE              reduce using rule 83 (factor -> RUNEVALOR .)
    GT              reduce using rule 83 (factor -> RUNEVALOR .)
    GE              reduce using rule 83 (factor -> RUNEVALOR .)
    AND             reduce using rule 83 (factor -> RUNEVALOR .)
    OR              reduce using rule 83 (factor -> RUNEVALOR .)
    RBRACE          reduce using rule 83 (factor -> RUNEVALOR .)
    RBRACKET        reduce using rule 83 (factor -> RUNEVALOR .)
    MUT             reduce using rule 83 (factor -> RUNEVALOR .)
    ID              reduce using rule 83 (factor -> RUNEVALOR .)
    IF              reduce using rule 83 (factor -> RUNEVALOR .)
    FOR             reduce using rule 83 (factor -> RUNEVALOR .)
    BREAK           reduce using rule 83 (factor -> RUNEVALOR .)
    RETURN          reduce using rule 83 (factor -> RUNEVALOR .)
    LBRACE          reduce using rule 83 (factor -> RUNEVALOR .)
    SEMICOLON       reduce using rule 83 (factor -> RUNEVALOR .)


state 34

    (86) factor -> NOTACAOCIENTIFICA .

    TIMES           reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    DIVIDE          reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    MOD             reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    PLUS            reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    MINUS           reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    CONST           reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    FN              reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    $end            reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    RPAREN          reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    COMMA           reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    EQ              reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    NEQ             reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    LT              reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    LE              reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    GT              reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    GE              reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    AND             reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    OR              reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    RBRACE          reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    RBRACKET        reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    MUT             reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    ID              reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    IF              reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    FOR             reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    BREAK           reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    RETURN          reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    LBRACE          reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)
    SEMICOLON       reduce using rule 86 (factor -> NOTACAOCIENTIFICA .)


state 35

    (87) factor -> BINARY .

    TIMES           reduce using rule 87 (factor -> BINARY .)
    DIVIDE          reduce using rule 87 (factor -> BINARY .)
    MOD             reduce using rule 87 (factor -> BINARY .)
    PLUS            reduce using rule 87 (factor -> BINARY .)
    MINUS           reduce using rule 87 (factor -> BINARY .)
    CONST           reduce using rule 87 (factor -> BINARY .)
    FN              reduce using rule 87 (factor -> BINARY .)
    $end            reduce using rule 87 (factor -> BINARY .)
    RPAREN          reduce using rule 87 (factor -> BINARY .)
    COMMA           reduce using rule 87 (factor -> BINARY .)
    EQ              reduce using rule 87 (factor -> BINARY .)
    NEQ             reduce using rule 87 (factor -> BINARY .)
    LT              reduce using rule 87 (factor -> BINARY .)
    LE              reduce using rule 87 (factor -> BINARY .)
    GT              reduce using rule 87 (factor -> BINARY .)
    GE              reduce using rule 87 (factor -> BINARY .)
    AND             reduce using rule 87 (factor -> BINARY .)
    OR              reduce using rule 87 (factor -> BINARY .)
    RBRACE          reduce using rule 87 (factor -> BINARY .)
    RBRACKET        reduce using rule 87 (factor -> BINARY .)
    MUT             reduce using rule 87 (factor -> BINARY .)
    ID              reduce using rule 87 (factor -> BINARY .)
    IF              reduce using rule 87 (factor -> BINARY .)
    FOR             reduce using rule 87 (factor -> BINARY .)
    BREAK           reduce using rule 87 (factor -> BINARY .)
    RETURN          reduce using rule 87 (factor -> BINARY .)
    LBRACE          reduce using rule 87 (factor -> BINARY .)
    SEMICOLON       reduce using rule 87 (factor -> BINARY .)


state 36

    (88) factor -> OCTAL .

    TIMES           reduce using rule 88 (factor -> OCTAL .)
    DIVIDE          reduce using rule 88 (factor -> OCTAL .)
    MOD             reduce using rule 88 (factor -> OCTAL .)
    PLUS            reduce using rule 88 (factor -> OCTAL .)
    MINUS           reduce using rule 88 (factor -> OCTAL .)
    CONST           reduce using rule 88 (factor -> OCTAL .)
    FN              reduce using rule 88 (factor -> OCTAL .)
    $end            reduce using rule 88 (factor -> OCTAL .)
    RPAREN          reduce using rule 88 (factor -> OCTAL .)
    COMMA           reduce using rule 88 (factor -> OCTAL .)
    EQ              reduce using rule 88 (factor -> OCTAL .)
    NEQ             reduce using rule 88 (factor -> OCTAL .)
    LT              reduce using rule 88 (factor -> OCTAL .)
    LE              reduce using rule 88 (factor -> OCTAL .)
    GT              reduce using rule 88 (factor -> OCTAL .)
    GE              reduce using rule 88 (factor -> OCTAL .)
    AND             reduce using rule 88 (factor -> OCTAL .)
    OR              reduce using rule 88 (factor -> OCTAL .)
    RBRACE          reduce using rule 88 (factor -> OCTAL .)
    RBRACKET        reduce using rule 88 (factor -> OCTAL .)
    MUT             reduce using rule 88 (factor -> OCTAL .)
    ID              reduce using rule 88 (factor -> OCTAL .)
    IF              reduce using rule 88 (factor -> OCTAL .)
    FOR             reduce using rule 88 (factor -> OCTAL .)
    BREAK           reduce using rule 88 (factor -> OCTAL .)
    RETURN          reduce using rule 88 (factor -> OCTAL .)
    LBRACE          reduce using rule 88 (factor -> OCTAL .)
    SEMICOLON       reduce using rule 88 (factor -> OCTAL .)


state 37

    (89) factor -> HEX .

    TIMES           reduce using rule 89 (factor -> HEX .)
    DIVIDE          reduce using rule 89 (factor -> HEX .)
    MOD             reduce using rule 89 (factor -> HEX .)
    PLUS            reduce using rule 89 (factor -> HEX .)
    MINUS           reduce using rule 89 (factor -> HEX .)
    CONST           reduce using rule 89 (factor -> HEX .)
    FN              reduce using rule 89 (factor -> HEX .)
    $end            reduce using rule 89 (factor -> HEX .)
    RPAREN          reduce using rule 89 (factor -> HEX .)
    COMMA           reduce using rule 89 (factor -> HEX .)
    EQ              reduce using rule 89 (factor -> HEX .)
    NEQ             reduce using rule 89 (factor -> HEX .)
    LT              reduce using rule 89 (factor -> HEX .)
    LE              reduce using rule 89 (factor -> HEX .)
    GT              reduce using rule 89 (factor -> HEX .)
    GE              reduce using rule 89 (factor -> HEX .)
    AND             reduce using rule 89 (factor -> HEX .)
    OR              reduce using rule 89 (factor -> HEX .)
    RBRACE          reduce using rule 89 (factor -> HEX .)
    RBRACKET        reduce using rule 89 (factor -> HEX .)
    MUT             reduce using rule 89 (factor -> HEX .)
    ID              reduce using rule 89 (factor -> HEX .)
    IF              reduce using rule 89 (factor -> HEX .)
    FOR             reduce using rule 89 (factor -> HEX .)
    BREAK           reduce using rule 89 (factor -> HEX .)
    RETURN          reduce using rule 89 (factor -> HEX .)
    LBRACE          reduce using rule 89 (factor -> HEX .)
    SEMICOLON       reduce using rule 89 (factor -> HEX .)


state 38

    (90) factor -> INTERPOLATIONSTRING .

    TIMES           reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    DIVIDE          reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    MOD             reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    PLUS            reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    MINUS           reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    CONST           reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    FN              reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    $end            reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    RPAREN          reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    COMMA           reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    EQ              reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    NEQ             reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    LT              reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    LE              reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    GT              reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    GE              reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    AND             reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    OR              reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    RBRACE          reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    RBRACKET        reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    MUT             reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    ID              reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    IF              reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    FOR             reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    BREAK           reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    RETURN          reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    LBRACE          reduce using rule 90 (factor -> INTERPOLATIONSTRING .)
    SEMICOLON       reduce using rule 90 (factor -> INTERPOLATIONSTRING .)


state 39

    (91) factor -> size_of_expression .

    TIMES           reduce using rule 91 (factor -> size_of_expression .)
    DIVIDE          reduce using rule 91 (factor -> size_of_expression .)
    MOD             reduce using rule 91 (factor -> size_of_expression .)
    PLUS            reduce using rule 91 (factor -> size_of_expression .)
    MINUS           reduce using rule 91 (factor -> size_of_expression .)
    CONST           reduce using rule 91 (factor -> size_of_expression .)
    FN              reduce using rule 91 (factor -> size_of_expression .)
    $end            reduce using rule 91 (factor -> size_of_expression .)
    RPAREN          reduce using rule 91 (factor -> size_of_expression .)
    COMMA           reduce using rule 91 (factor -> size_of_expression .)
    EQ              reduce using rule 91 (factor -> size_of_expression .)
    NEQ             reduce using rule 91 (factor -> size_of_expression .)
    LT              reduce using rule 91 (factor -> size_of_expression .)
    LE              reduce using rule 91 (factor -> size_of_expression .)
    GT              reduce using rule 91 (factor -> size_of_expression .)
    GE              reduce using rule 91 (factor -> size_of_expression .)
    AND             reduce using rule 91 (factor -> size_of_expression .)
    OR              reduce using rule 91 (factor -> size_of_expression .)
    RBRACE          reduce using rule 91 (factor -> size_of_expression .)
    RBRACKET        reduce using rule 91 (factor -> size_of_expression .)
    MUT             reduce using rule 91 (factor -> size_of_expression .)
    ID              reduce using rule 91 (factor -> size_of_expression .)
    IF              reduce using rule 91 (factor -> size_of_expression .)
    FOR             reduce using rule 91 (factor -> size_of_expression .)
    BREAK           reduce using rule 91 (factor -> size_of_expression .)
    RETURN          reduce using rule 91 (factor -> size_of_expression .)
    LBRACE          reduce using rule 91 (factor -> size_of_expression .)
    SEMICOLON       reduce using rule 91 (factor -> size_of_expression .)


state 40

    (92) size_of_expression -> SIZEOF . LPAREN expression RPAREN
    (93) size_of_expression -> SIZEOF . LPAREN type RPAREN

    LPAREN          shift and go to state 55


state 41

    (21) param -> ID . type
    (22) type -> . INT
    (23) type -> . F32
    (24) type -> . F64
    (25) type -> . STRING
    (26) type -> . BOOL
    (27) type -> . RUNE

    INT             shift and go to state 57
    F32             shift and go to state 58
    F64             shift and go to state 59
    STRING          shift and go to state 60
    BOOL            shift and go to state 61
    RUNE            shift and go to state 62

    type                           shift and go to state 56

state 42

    (10) function_definition -> FN ID LPAREN params . RPAREN LBRACE block_statement RBRACE
    (11) function_definition -> FN ID LPAREN params . RPAREN type LBRACE block_statement RBRACE

    RPAREN          shift and go to state 63


state 43

    (18) params -> param . more_params
    (19) more_params -> . COMMA param more_params
    (20) more_params -> .

    COMMA           shift and go to state 65
    RPAREN          reduce using rule 20 (more_params -> .)

    more_params                    shift and go to state 64

state 44

    (12) function_definition -> FN MAIN LPAREN RPAREN . LBRACE block_statement RBRACE function_definition_without_main
    (13) function_definition -> FN MAIN LPAREN RPAREN . LBRACE block_statement RBRACE

    LBRACE          shift and go to state 66


state 45

    (94) increment_rule -> ID INCREMENT .

    PLUS            reduce using rule 94 (increment_rule -> ID INCREMENT .)
    MINUS           reduce using rule 94 (increment_rule -> ID INCREMENT .)
    CONST           reduce using rule 94 (increment_rule -> ID INCREMENT .)
    FN              reduce using rule 94 (increment_rule -> ID INCREMENT .)
    $end            reduce using rule 94 (increment_rule -> ID INCREMENT .)
    RPAREN          reduce using rule 94 (increment_rule -> ID INCREMENT .)
    COMMA           reduce using rule 94 (increment_rule -> ID INCREMENT .)
    MUT             reduce using rule 94 (increment_rule -> ID INCREMENT .)
    ID              reduce using rule 94 (increment_rule -> ID INCREMENT .)
    IF              reduce using rule 94 (increment_rule -> ID INCREMENT .)
    FOR             reduce using rule 94 (increment_rule -> ID INCREMENT .)
    BREAK           reduce using rule 94 (increment_rule -> ID INCREMENT .)
    RETURN          reduce using rule 94 (increment_rule -> ID INCREMENT .)
    RBRACE          reduce using rule 94 (increment_rule -> ID INCREMENT .)
    EQ              reduce using rule 94 (increment_rule -> ID INCREMENT .)
    NEQ             reduce using rule 94 (increment_rule -> ID INCREMENT .)
    LT              reduce using rule 94 (increment_rule -> ID INCREMENT .)
    LE              reduce using rule 94 (increment_rule -> ID INCREMENT .)
    GT              reduce using rule 94 (increment_rule -> ID INCREMENT .)
    GE              reduce using rule 94 (increment_rule -> ID INCREMENT .)
    AND             reduce using rule 94 (increment_rule -> ID INCREMENT .)
    OR              reduce using rule 94 (increment_rule -> ID INCREMENT .)
    RBRACKET        reduce using rule 94 (increment_rule -> ID INCREMENT .)
    LBRACE          reduce using rule 94 (increment_rule -> ID INCREMENT .)
    SEMICOLON       reduce using rule 94 (increment_rule -> ID INCREMENT .)


state 46

    (95) increment_rule -> ID DECREMENT .

    PLUS            reduce using rule 95 (increment_rule -> ID DECREMENT .)
    MINUS           reduce using rule 95 (increment_rule -> ID DECREMENT .)
    CONST           reduce using rule 95 (increment_rule -> ID DECREMENT .)
    FN              reduce using rule 95 (increment_rule -> ID DECREMENT .)
    $end            reduce using rule 95 (increment_rule -> ID DECREMENT .)
    RPAREN          reduce using rule 95 (increment_rule -> ID DECREMENT .)
    COMMA           reduce using rule 95 (increment_rule -> ID DECREMENT .)
    MUT             reduce using rule 95 (increment_rule -> ID DECREMENT .)
    ID              reduce using rule 95 (increment_rule -> ID DECREMENT .)
    IF              reduce using rule 95 (increment_rule -> ID DECREMENT .)
    FOR             reduce using rule 95 (increment_rule -> ID DECREMENT .)
    BREAK           reduce using rule 95 (increment_rule -> ID DECREMENT .)
    RETURN          reduce using rule 95 (increment_rule -> ID DECREMENT .)
    RBRACE          reduce using rule 95 (increment_rule -> ID DECREMENT .)
    EQ              reduce using rule 95 (increment_rule -> ID DECREMENT .)
    NEQ             reduce using rule 95 (increment_rule -> ID DECREMENT .)
    LT              reduce using rule 95 (increment_rule -> ID DECREMENT .)
    LE              reduce using rule 95 (increment_rule -> ID DECREMENT .)
    GT              reduce using rule 95 (increment_rule -> ID DECREMENT .)
    GE              reduce using rule 95 (increment_rule -> ID DECREMENT .)
    AND             reduce using rule 95 (increment_rule -> ID DECREMENT .)
    OR              reduce using rule 95 (increment_rule -> ID DECREMENT .)
    RBRACKET        reduce using rule 95 (increment_rule -> ID DECREMENT .)
    LBRACE          reduce using rule 95 (increment_rule -> ID DECREMENT .)
    SEMICOLON       reduce using rule 95 (increment_rule -> ID DECREMENT .)


state 47

    (49) func_call -> ID LPAREN . id_list RPAREN
    (50) func_call -> ID LPAREN . RPAREN
    (54) id_list -> . expression more_expressions
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    RPAREN          shift and go to state 68
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    id_list                        shift and go to state 67
    expression                     shift and go to state 69
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 48

    (52) func_call_list -> ID LBRACKET . DOTDOT RBRACKET
    (53) func_call_list -> ID LBRACKET . NUMBER DOTDOT NUMBER RBRACKET
    (85) factor -> ID LBRACKET . NUMBER RBRACKET

    DOTDOT          shift and go to state 70
    NUMBER          shift and go to state 71


state 49

    (68) expression -> expression PLUS . term
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 73
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    term                           shift and go to state 72
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 50

    (69) expression -> expression MINUS . term
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 73
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    term                           shift and go to state 74
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 51

    (73) term -> term TIMES . factor
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 73
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    factor                         shift and go to state 75
    size_of_expression             shift and go to state 39

state 52

    (74) term -> term DIVIDE . factor
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 73
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    factor                         shift and go to state 76
    size_of_expression             shift and go to state 39

state 53

    (75) term -> term MOD . factor
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 73
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    factor                         shift and go to state 77
    size_of_expression             shift and go to state 39

state 54

    (84) factor -> LPAREN expression . RPAREN
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    RPAREN          shift and go to state 78
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 55

    (92) size_of_expression -> SIZEOF LPAREN . expression RPAREN
    (93) size_of_expression -> SIZEOF LPAREN . type RPAREN
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (22) type -> . INT
    (23) type -> . F32
    (24) type -> . F64
    (25) type -> . STRING
    (26) type -> . BOOL
    (27) type -> . RUNE
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    INT             shift and go to state 57
    F32             shift and go to state 58
    F64             shift and go to state 59
    STRING          shift and go to state 60
    BOOL            shift and go to state 61
    RUNE            shift and go to state 62
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 79
    type                           shift and go to state 80
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 56

    (21) param -> ID type .

    COMMA           reduce using rule 21 (param -> ID type .)
    RPAREN          reduce using rule 21 (param -> ID type .)


state 57

    (22) type -> INT .

    COMMA           reduce using rule 22 (type -> INT .)
    RPAREN          reduce using rule 22 (type -> INT .)
    LBRACE          reduce using rule 22 (type -> INT .)
    MUT             reduce using rule 22 (type -> INT .)
    CONST           reduce using rule 22 (type -> INT .)
    ID              reduce using rule 22 (type -> INT .)
    IF              reduce using rule 22 (type -> INT .)
    FOR             reduce using rule 22 (type -> INT .)
    BREAK           reduce using rule 22 (type -> INT .)
    RETURN          reduce using rule 22 (type -> INT .)
    RBRACE          reduce using rule 22 (type -> INT .)


state 58

    (23) type -> F32 .

    COMMA           reduce using rule 23 (type -> F32 .)
    RPAREN          reduce using rule 23 (type -> F32 .)
    LBRACE          reduce using rule 23 (type -> F32 .)
    MUT             reduce using rule 23 (type -> F32 .)
    CONST           reduce using rule 23 (type -> F32 .)
    ID              reduce using rule 23 (type -> F32 .)
    IF              reduce using rule 23 (type -> F32 .)
    FOR             reduce using rule 23 (type -> F32 .)
    BREAK           reduce using rule 23 (type -> F32 .)
    RETURN          reduce using rule 23 (type -> F32 .)
    RBRACE          reduce using rule 23 (type -> F32 .)


state 59

    (24) type -> F64 .

    COMMA           reduce using rule 24 (type -> F64 .)
    RPAREN          reduce using rule 24 (type -> F64 .)
    LBRACE          reduce using rule 24 (type -> F64 .)
    MUT             reduce using rule 24 (type -> F64 .)
    CONST           reduce using rule 24 (type -> F64 .)
    ID              reduce using rule 24 (type -> F64 .)
    IF              reduce using rule 24 (type -> F64 .)
    FOR             reduce using rule 24 (type -> F64 .)
    BREAK           reduce using rule 24 (type -> F64 .)
    RETURN          reduce using rule 24 (type -> F64 .)
    RBRACE          reduce using rule 24 (type -> F64 .)


state 60

    (25) type -> STRING .

    COMMA           reduce using rule 25 (type -> STRING .)
    RPAREN          reduce using rule 25 (type -> STRING .)
    LBRACE          reduce using rule 25 (type -> STRING .)
    MUT             reduce using rule 25 (type -> STRING .)
    CONST           reduce using rule 25 (type -> STRING .)
    ID              reduce using rule 25 (type -> STRING .)
    IF              reduce using rule 25 (type -> STRING .)
    FOR             reduce using rule 25 (type -> STRING .)
    BREAK           reduce using rule 25 (type -> STRING .)
    RETURN          reduce using rule 25 (type -> STRING .)
    RBRACE          reduce using rule 25 (type -> STRING .)


state 61

    (26) type -> BOOL .

    COMMA           reduce using rule 26 (type -> BOOL .)
    RPAREN          reduce using rule 26 (type -> BOOL .)
    LBRACE          reduce using rule 26 (type -> BOOL .)
    MUT             reduce using rule 26 (type -> BOOL .)
    CONST           reduce using rule 26 (type -> BOOL .)
    ID              reduce using rule 26 (type -> BOOL .)
    IF              reduce using rule 26 (type -> BOOL .)
    FOR             reduce using rule 26 (type -> BOOL .)
    BREAK           reduce using rule 26 (type -> BOOL .)
    RETURN          reduce using rule 26 (type -> BOOL .)
    RBRACE          reduce using rule 26 (type -> BOOL .)


state 62

    (27) type -> RUNE .

    COMMA           reduce using rule 27 (type -> RUNE .)
    RPAREN          reduce using rule 27 (type -> RUNE .)
    LBRACE          reduce using rule 27 (type -> RUNE .)
    MUT             reduce using rule 27 (type -> RUNE .)
    CONST           reduce using rule 27 (type -> RUNE .)
    ID              reduce using rule 27 (type -> RUNE .)
    IF              reduce using rule 27 (type -> RUNE .)
    FOR             reduce using rule 27 (type -> RUNE .)
    BREAK           reduce using rule 27 (type -> RUNE .)
    RETURN          reduce using rule 27 (type -> RUNE .)
    RBRACE          reduce using rule 27 (type -> RUNE .)


state 63

    (10) function_definition -> FN ID LPAREN params RPAREN . LBRACE block_statement RBRACE
    (11) function_definition -> FN ID LPAREN params RPAREN . type LBRACE block_statement RBRACE
    (22) type -> . INT
    (23) type -> . F32
    (24) type -> . F64
    (25) type -> . STRING
    (26) type -> . BOOL
    (27) type -> . RUNE

    LBRACE          shift and go to state 81
    INT             shift and go to state 57
    F32             shift and go to state 58
    F64             shift and go to state 59
    STRING          shift and go to state 60
    BOOL            shift and go to state 61
    RUNE            shift and go to state 62

    type                           shift and go to state 82

state 64

    (18) params -> param more_params .

    RPAREN          reduce using rule 18 (params -> param more_params .)


state 65

    (19) more_params -> COMMA . param more_params
    (21) param -> . ID type

    ID              shift and go to state 41

    param                          shift and go to state 83

state 66

    (12) function_definition -> FN MAIN LPAREN RPAREN LBRACE . block_statement RBRACE function_definition_without_main
    (13) function_definition -> FN MAIN LPAREN RPAREN LBRACE . block_statement RBRACE
    (28) block_statement -> . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    block_statement                shift and go to state 84
    statement                      shift and go to state 85
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 67

    (49) func_call -> ID LPAREN id_list . RPAREN

    RPAREN          shift and go to state 106


state 68

    (50) func_call -> ID LPAREN RPAREN .

    PLUS            reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    CONST           reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    FN              reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    $end            reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    MUT             reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    ID              reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    IF              reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    FOR             reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    BREAK           reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    EQ              reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    NEQ             reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    LT              reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    LE              reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    GT              reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    GE              reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    LBRACE          reduce using rule 50 (func_call -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 50 (func_call -> ID LPAREN RPAREN .)


state 69

    (54) id_list -> expression . more_expressions
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term
    (55) more_expressions -> . COMMA expression more_expressions
    (56) more_expressions -> .

    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    COMMA           shift and go to state 108
    RPAREN          reduce using rule 56 (more_expressions -> .)
    RBRACKET        reduce using rule 56 (more_expressions -> .)

    more_expressions               shift and go to state 107

state 70

    (52) func_call_list -> ID LBRACKET DOTDOT . RBRACKET

    RBRACKET        shift and go to state 109


state 71

    (53) func_call_list -> ID LBRACKET NUMBER . DOTDOT NUMBER RBRACKET
    (85) factor -> ID LBRACKET NUMBER . RBRACKET

    DOTDOT          shift and go to state 110
    RBRACKET        shift and go to state 111


state 72

    (68) expression -> expression PLUS term .
    (73) term -> term . TIMES factor
    (74) term -> term . DIVIDE factor
    (75) term -> term . MOD factor

    PLUS            reduce using rule 68 (expression -> expression PLUS term .)
    MINUS           reduce using rule 68 (expression -> expression PLUS term .)
    CONST           reduce using rule 68 (expression -> expression PLUS term .)
    FN              reduce using rule 68 (expression -> expression PLUS term .)
    $end            reduce using rule 68 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 68 (expression -> expression PLUS term .)
    COMMA           reduce using rule 68 (expression -> expression PLUS term .)
    EQ              reduce using rule 68 (expression -> expression PLUS term .)
    NEQ             reduce using rule 68 (expression -> expression PLUS term .)
    LT              reduce using rule 68 (expression -> expression PLUS term .)
    LE              reduce using rule 68 (expression -> expression PLUS term .)
    GT              reduce using rule 68 (expression -> expression PLUS term .)
    GE              reduce using rule 68 (expression -> expression PLUS term .)
    AND             reduce using rule 68 (expression -> expression PLUS term .)
    OR              reduce using rule 68 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 68 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 68 (expression -> expression PLUS term .)
    MUT             reduce using rule 68 (expression -> expression PLUS term .)
    ID              reduce using rule 68 (expression -> expression PLUS term .)
    IF              reduce using rule 68 (expression -> expression PLUS term .)
    FOR             reduce using rule 68 (expression -> expression PLUS term .)
    BREAK           reduce using rule 68 (expression -> expression PLUS term .)
    RETURN          reduce using rule 68 (expression -> expression PLUS term .)
    LBRACE          reduce using rule 68 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 68 (expression -> expression PLUS term .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    MOD             shift and go to state 53


state 73

    (77) factor -> ID .
    (85) factor -> ID . LBRACKET NUMBER RBRACKET

    TIMES           reduce using rule 77 (factor -> ID .)
    DIVIDE          reduce using rule 77 (factor -> ID .)
    MOD             reduce using rule 77 (factor -> ID .)
    PLUS            reduce using rule 77 (factor -> ID .)
    MINUS           reduce using rule 77 (factor -> ID .)
    CONST           reduce using rule 77 (factor -> ID .)
    FN              reduce using rule 77 (factor -> ID .)
    $end            reduce using rule 77 (factor -> ID .)
    RPAREN          reduce using rule 77 (factor -> ID .)
    COMMA           reduce using rule 77 (factor -> ID .)
    EQ              reduce using rule 77 (factor -> ID .)
    NEQ             reduce using rule 77 (factor -> ID .)
    LT              reduce using rule 77 (factor -> ID .)
    LE              reduce using rule 77 (factor -> ID .)
    GT              reduce using rule 77 (factor -> ID .)
    GE              reduce using rule 77 (factor -> ID .)
    AND             reduce using rule 77 (factor -> ID .)
    OR              reduce using rule 77 (factor -> ID .)
    RBRACE          reduce using rule 77 (factor -> ID .)
    RBRACKET        reduce using rule 77 (factor -> ID .)
    MUT             reduce using rule 77 (factor -> ID .)
    ID              reduce using rule 77 (factor -> ID .)
    IF              reduce using rule 77 (factor -> ID .)
    FOR             reduce using rule 77 (factor -> ID .)
    BREAK           reduce using rule 77 (factor -> ID .)
    RETURN          reduce using rule 77 (factor -> ID .)
    LBRACE          reduce using rule 77 (factor -> ID .)
    SEMICOLON       reduce using rule 77 (factor -> ID .)
    LBRACKET        shift and go to state 112


state 74

    (69) expression -> expression MINUS term .
    (73) term -> term . TIMES factor
    (74) term -> term . DIVIDE factor
    (75) term -> term . MOD factor

    PLUS            reduce using rule 69 (expression -> expression MINUS term .)
    MINUS           reduce using rule 69 (expression -> expression MINUS term .)
    CONST           reduce using rule 69 (expression -> expression MINUS term .)
    FN              reduce using rule 69 (expression -> expression MINUS term .)
    $end            reduce using rule 69 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 69 (expression -> expression MINUS term .)
    COMMA           reduce using rule 69 (expression -> expression MINUS term .)
    EQ              reduce using rule 69 (expression -> expression MINUS term .)
    NEQ             reduce using rule 69 (expression -> expression MINUS term .)
    LT              reduce using rule 69 (expression -> expression MINUS term .)
    LE              reduce using rule 69 (expression -> expression MINUS term .)
    GT              reduce using rule 69 (expression -> expression MINUS term .)
    GE              reduce using rule 69 (expression -> expression MINUS term .)
    AND             reduce using rule 69 (expression -> expression MINUS term .)
    OR              reduce using rule 69 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 69 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 69 (expression -> expression MINUS term .)
    MUT             reduce using rule 69 (expression -> expression MINUS term .)
    ID              reduce using rule 69 (expression -> expression MINUS term .)
    IF              reduce using rule 69 (expression -> expression MINUS term .)
    FOR             reduce using rule 69 (expression -> expression MINUS term .)
    BREAK           reduce using rule 69 (expression -> expression MINUS term .)
    RETURN          reduce using rule 69 (expression -> expression MINUS term .)
    LBRACE          reduce using rule 69 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 69 (expression -> expression MINUS term .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    MOD             shift and go to state 53


state 75

    (73) term -> term TIMES factor .

    TIMES           reduce using rule 73 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 73 (term -> term TIMES factor .)
    MOD             reduce using rule 73 (term -> term TIMES factor .)
    PLUS            reduce using rule 73 (term -> term TIMES factor .)
    MINUS           reduce using rule 73 (term -> term TIMES factor .)
    CONST           reduce using rule 73 (term -> term TIMES factor .)
    FN              reduce using rule 73 (term -> term TIMES factor .)
    $end            reduce using rule 73 (term -> term TIMES factor .)
    RPAREN          reduce using rule 73 (term -> term TIMES factor .)
    COMMA           reduce using rule 73 (term -> term TIMES factor .)
    EQ              reduce using rule 73 (term -> term TIMES factor .)
    NEQ             reduce using rule 73 (term -> term TIMES factor .)
    LT              reduce using rule 73 (term -> term TIMES factor .)
    LE              reduce using rule 73 (term -> term TIMES factor .)
    GT              reduce using rule 73 (term -> term TIMES factor .)
    GE              reduce using rule 73 (term -> term TIMES factor .)
    AND             reduce using rule 73 (term -> term TIMES factor .)
    OR              reduce using rule 73 (term -> term TIMES factor .)
    RBRACE          reduce using rule 73 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 73 (term -> term TIMES factor .)
    MUT             reduce using rule 73 (term -> term TIMES factor .)
    ID              reduce using rule 73 (term -> term TIMES factor .)
    IF              reduce using rule 73 (term -> term TIMES factor .)
    FOR             reduce using rule 73 (term -> term TIMES factor .)
    BREAK           reduce using rule 73 (term -> term TIMES factor .)
    RETURN          reduce using rule 73 (term -> term TIMES factor .)
    LBRACE          reduce using rule 73 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 73 (term -> term TIMES factor .)


state 76

    (74) term -> term DIVIDE factor .

    TIMES           reduce using rule 74 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 74 (term -> term DIVIDE factor .)
    MOD             reduce using rule 74 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 74 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 74 (term -> term DIVIDE factor .)
    CONST           reduce using rule 74 (term -> term DIVIDE factor .)
    FN              reduce using rule 74 (term -> term DIVIDE factor .)
    $end            reduce using rule 74 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 74 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 74 (term -> term DIVIDE factor .)
    EQ              reduce using rule 74 (term -> term DIVIDE factor .)
    NEQ             reduce using rule 74 (term -> term DIVIDE factor .)
    LT              reduce using rule 74 (term -> term DIVIDE factor .)
    LE              reduce using rule 74 (term -> term DIVIDE factor .)
    GT              reduce using rule 74 (term -> term DIVIDE factor .)
    GE              reduce using rule 74 (term -> term DIVIDE factor .)
    AND             reduce using rule 74 (term -> term DIVIDE factor .)
    OR              reduce using rule 74 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 74 (term -> term DIVIDE factor .)
    RBRACKET        reduce using rule 74 (term -> term DIVIDE factor .)
    MUT             reduce using rule 74 (term -> term DIVIDE factor .)
    ID              reduce using rule 74 (term -> term DIVIDE factor .)
    IF              reduce using rule 74 (term -> term DIVIDE factor .)
    FOR             reduce using rule 74 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 74 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 74 (term -> term DIVIDE factor .)
    LBRACE          reduce using rule 74 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 74 (term -> term DIVIDE factor .)


state 77

    (75) term -> term MOD factor .

    TIMES           reduce using rule 75 (term -> term MOD factor .)
    DIVIDE          reduce using rule 75 (term -> term MOD factor .)
    MOD             reduce using rule 75 (term -> term MOD factor .)
    PLUS            reduce using rule 75 (term -> term MOD factor .)
    MINUS           reduce using rule 75 (term -> term MOD factor .)
    CONST           reduce using rule 75 (term -> term MOD factor .)
    FN              reduce using rule 75 (term -> term MOD factor .)
    $end            reduce using rule 75 (term -> term MOD factor .)
    RPAREN          reduce using rule 75 (term -> term MOD factor .)
    COMMA           reduce using rule 75 (term -> term MOD factor .)
    EQ              reduce using rule 75 (term -> term MOD factor .)
    NEQ             reduce using rule 75 (term -> term MOD factor .)
    LT              reduce using rule 75 (term -> term MOD factor .)
    LE              reduce using rule 75 (term -> term MOD factor .)
    GT              reduce using rule 75 (term -> term MOD factor .)
    GE              reduce using rule 75 (term -> term MOD factor .)
    AND             reduce using rule 75 (term -> term MOD factor .)
    OR              reduce using rule 75 (term -> term MOD factor .)
    RBRACE          reduce using rule 75 (term -> term MOD factor .)
    RBRACKET        reduce using rule 75 (term -> term MOD factor .)
    MUT             reduce using rule 75 (term -> term MOD factor .)
    ID              reduce using rule 75 (term -> term MOD factor .)
    IF              reduce using rule 75 (term -> term MOD factor .)
    FOR             reduce using rule 75 (term -> term MOD factor .)
    BREAK           reduce using rule 75 (term -> term MOD factor .)
    RETURN          reduce using rule 75 (term -> term MOD factor .)
    LBRACE          reduce using rule 75 (term -> term MOD factor .)
    SEMICOLON       reduce using rule 75 (term -> term MOD factor .)


state 78

    (84) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    CONST           reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    FN              reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    MUT             reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 84 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 84 (factor -> LPAREN expression RPAREN .)


state 79

    (92) size_of_expression -> SIZEOF LPAREN expression . RPAREN
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 80

    (93) size_of_expression -> SIZEOF LPAREN type . RPAREN

    RPAREN          shift and go to state 114


state 81

    (10) function_definition -> FN ID LPAREN params RPAREN LBRACE . block_statement RBRACE
    (28) block_statement -> . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    block_statement                shift and go to state 115
    statement                      shift and go to state 85
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 82

    (11) function_definition -> FN ID LPAREN params RPAREN type . LBRACE block_statement RBRACE

    LBRACE          shift and go to state 116


state 83

    (19) more_params -> COMMA param . more_params
    (19) more_params -> . COMMA param more_params
    (20) more_params -> .

    COMMA           shift and go to state 65
    RPAREN          reduce using rule 20 (more_params -> .)

    more_params                    shift and go to state 117

state 84

    (12) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement . RBRACE function_definition_without_main
    (13) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement . RBRACE

    RBRACE          shift and go to state 118


state 85

    (28) block_statement -> statement .

    RBRACE          reduce using rule 28 (block_statement -> statement .)


state 86

    (29) statement -> var_statement . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    var_statement                  shift and go to state 86
    statement                      shift and go to state 119
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 87

    (30) statement -> var_assignment . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    var_assignment                 shift and go to state 87
    statement                      shift and go to state 120
    var_statement                  shift and go to state 86
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 88

    (31) statement -> func_call . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    func_call                      shift and go to state 88
    statement                      shift and go to state 121
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 89

    (32) statement -> if_statement . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    if_statement                   shift and go to state 89
    statement                      shift and go to state 122
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 90

    (33) statement -> for_statement . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    for_statement                  shift and go to state 90
    statement                      shift and go to state 123
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 91

    (34) statement -> break_statement .

    RBRACE          reduce using rule 34 (statement -> break_statement .)


state 92

    (35) statement -> return_statement .

    RBRACE          reduce using rule 35 (statement -> return_statement .)


state 93

    (37) statement -> list_statement . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    list_statement                 shift and go to state 93
    statement                      shift and go to state 124
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 94

    (38) statement -> list_assignment . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    list_assignment                shift and go to state 94
    statement                      shift and go to state 125
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 95

    (39) statement -> increment_rule . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    increment_rule                 shift and go to state 95
    statement                      shift and go to state 126
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 96

    (40) statement -> assignment . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    assignment                     shift and go to state 96
    statement                      shift and go to state 127
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 97

    (41) var_statement -> declaration_imutable .

    MUT             reduce using rule 41 (var_statement -> declaration_imutable .)
    CONST           reduce using rule 41 (var_statement -> declaration_imutable .)
    ID              reduce using rule 41 (var_statement -> declaration_imutable .)
    IF              reduce using rule 41 (var_statement -> declaration_imutable .)
    FOR             reduce using rule 41 (var_statement -> declaration_imutable .)
    BREAK           reduce using rule 41 (var_statement -> declaration_imutable .)
    RETURN          reduce using rule 41 (var_statement -> declaration_imutable .)
    RBRACE          reduce using rule 41 (var_statement -> declaration_imutable .)


state 98

    (42) var_statement -> MUT . ID DECLARE_ASSIGN expression
    (46) list_statement -> MUT . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> MUT . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type

    ID              shift and go to state 128


state 99

    (44) var_assignment -> ID . ASSIGN expression
    (49) func_call -> ID . LPAREN id_list RPAREN
    (50) func_call -> ID . LPAREN RPAREN
    (48) list_assignment -> ID . LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> ID . INCREMENT
    (95) increment_rule -> ID . DECREMENT
    (105) assignment -> ID . PLUS_ASSIGN expression
    (106) assignment -> ID . MINUS_ASSIGN expression
    (107) assignment -> ID . TIMES_ASSIGN expression
    (108) assignment -> ID . DIVIDE_ASSIGN expression
    (109) assignment -> ID . MOD_ASSIGN expression
    (110) assignment -> ID . BIT_AND_ASSIGN expression
    (111) assignment -> ID . BIT_OR_ASSIGN expression
    (112) assignment -> ID . BIT_XOR_ASSIGN expression
    (113) assignment -> ID . BIT_LSHIFT_ASSIGN expression
    (114) assignment -> ID . BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> ID . DECLARE_ASSIGN expression
    (52) func_call_list -> ID . LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> ID . LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> ID . DECLARE_ASSIGN LBRACKET id_list RBRACKET

    ASSIGN          shift and go to state 129
    LPAREN          shift and go to state 47
    LBRACKET        shift and go to state 130
    INCREMENT       shift and go to state 45
    DECREMENT       shift and go to state 46
    PLUS_ASSIGN     shift and go to state 131
    MINUS_ASSIGN    shift and go to state 132
    TIMES_ASSIGN    shift and go to state 133
    DIVIDE_ASSIGN   shift and go to state 134
    MOD_ASSIGN      shift and go to state 135
    BIT_AND_ASSIGN  shift and go to state 136
    BIT_OR_ASSIGN   shift and go to state 137
    BIT_XOR_ASSIGN  shift and go to state 138
    BIT_LSHIFT_ASSIGN shift and go to state 139
    BIT_RSHIFT_ASSIGN shift and go to state 140
    DECLARE_ASSIGN  shift and go to state 141


state 100

    (43) var_statement -> CONST . ID DECLARE_ASSIGN expression

    ID              shift and go to state 142


state 101

    (57) if_statement -> IF . expression_relacional LBRACE statement RBRACE
    (58) if_statement -> IF . expression_relacional LBRACE statement RBRACE elseop
    (96) expression_relacional -> . expression EQ expression
    (97) expression_relacional -> . expression NEQ expression
    (98) expression_relacional -> . expression LT expression
    (99) expression_relacional -> . expression LE expression
    (100) expression_relacional -> . expression GT expression
    (101) expression_relacional -> . expression GE expression
    (102) expression_relacional -> . expression AND expression
    (103) expression_relacional -> . expression OR expression
    (104) expression_relacional -> . NOT expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    NOT             shift and go to state 145
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression_relacional          shift and go to state 143
    expression                     shift and go to state 144
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 102

    (61) for_statement -> FOR . ID IN expression LBRACE statement RBRACE
    (62) for_statement -> FOR . declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> FOR . expression_relacional LBRACE statement RBRACE
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (96) expression_relacional -> . expression EQ expression
    (97) expression_relacional -> . expression NEQ expression
    (98) expression_relacional -> . expression LT expression
    (99) expression_relacional -> . expression LE expression
    (100) expression_relacional -> . expression GT expression
    (101) expression_relacional -> . expression GE expression
    (102) expression_relacional -> . expression AND expression
    (103) expression_relacional -> . expression OR expression
    (104) expression_relacional -> . NOT expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 146
    NOT             shift and go to state 145
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 144
    declaration_imutable           shift and go to state 147
    expression_relacional          shift and go to state 148
    increment_rule                 shift and go to state 23
    term                           shift and go to state 22
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 103

    (66) break_statement -> BREAK .

    RBRACE          reduce using rule 66 (break_statement -> BREAK .)


state 104

    (67) return_statement -> RETURN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 149
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 105

    (45) list_statement -> declaration_imutable_list .

    MUT             reduce using rule 45 (list_statement -> declaration_imutable_list .)
    CONST           reduce using rule 45 (list_statement -> declaration_imutable_list .)
    ID              reduce using rule 45 (list_statement -> declaration_imutable_list .)
    IF              reduce using rule 45 (list_statement -> declaration_imutable_list .)
    FOR             reduce using rule 45 (list_statement -> declaration_imutable_list .)
    BREAK           reduce using rule 45 (list_statement -> declaration_imutable_list .)
    RETURN          reduce using rule 45 (list_statement -> declaration_imutable_list .)
    RBRACE          reduce using rule 45 (list_statement -> declaration_imutable_list .)


state 106

    (49) func_call -> ID LPAREN id_list RPAREN .

    PLUS            reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    MINUS           reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    CONST           reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    FN              reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    $end            reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    RPAREN          reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    COMMA           reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    MUT             reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    ID              reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    IF              reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    FOR             reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    BREAK           reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    RETURN          reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    RBRACE          reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    EQ              reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    NEQ             reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    LT              reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    LE              reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    GT              reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    GE              reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    AND             reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    OR              reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    RBRACKET        reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    LBRACE          reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)
    SEMICOLON       reduce using rule 49 (func_call -> ID LPAREN id_list RPAREN .)


state 107

    (54) id_list -> expression more_expressions .

    RPAREN          reduce using rule 54 (id_list -> expression more_expressions .)
    RBRACKET        reduce using rule 54 (id_list -> expression more_expressions .)


state 108

    (55) more_expressions -> COMMA . expression more_expressions
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 150
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 109

    (52) func_call_list -> ID LBRACKET DOTDOT RBRACKET .

    PLUS            reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    MINUS           reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    CONST           reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    FN              reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    $end            reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RPAREN          reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    COMMA           reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    MUT             reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    ID              reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    IF              reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    FOR             reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    BREAK           reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RETURN          reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RBRACE          reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    EQ              reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    NEQ             reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    LT              reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    LE              reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    GT              reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    GE              reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    AND             reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    OR              reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    RBRACKET        reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    LBRACE          reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)
    SEMICOLON       reduce using rule 52 (func_call_list -> ID LBRACKET DOTDOT RBRACKET .)


state 110

    (53) func_call_list -> ID LBRACKET NUMBER DOTDOT . NUMBER RBRACKET

    NUMBER          shift and go to state 151


state 111

    (85) factor -> ID LBRACKET NUMBER RBRACKET .

    TIMES           reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    MOD             reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    CONST           reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    FN              reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    $end            reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RPAREN          reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    COMMA           reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    EQ              reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    NEQ             reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    LT              reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    LE              reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    GT              reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    GE              reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    AND             reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    OR              reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RBRACE          reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RBRACKET        reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    MUT             reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    ID              reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    IF              reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    FOR             reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    BREAK           reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    RETURN          reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    LBRACE          reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)
    SEMICOLON       reduce using rule 85 (factor -> ID LBRACKET NUMBER RBRACKET .)


state 112

    (85) factor -> ID LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 152


state 113

    (92) size_of_expression -> SIZEOF LPAREN expression RPAREN .

    TIMES           reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    MOD             reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    PLUS            reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    MINUS           reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    CONST           reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    FN              reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    $end            reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    RPAREN          reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    COMMA           reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    EQ              reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    NEQ             reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    LT              reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    LE              reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    GT              reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    GE              reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    AND             reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    OR              reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    RBRACE          reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    MUT             reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    ID              reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    IF              reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    FOR             reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    BREAK           reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    RETURN          reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    LBRACE          reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 92 (size_of_expression -> SIZEOF LPAREN expression RPAREN .)


state 114

    (93) size_of_expression -> SIZEOF LPAREN type RPAREN .

    TIMES           reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    DIVIDE          reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    MOD             reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    PLUS            reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    MINUS           reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    CONST           reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    FN              reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    $end            reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    RPAREN          reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    COMMA           reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    EQ              reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    NEQ             reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    LT              reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    LE              reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    GT              reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    GE              reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    AND             reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    OR              reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    RBRACE          reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    RBRACKET        reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    MUT             reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    ID              reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    IF              reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    FOR             reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    BREAK           reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    RETURN          reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    LBRACE          reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)
    SEMICOLON       reduce using rule 93 (size_of_expression -> SIZEOF LPAREN type RPAREN .)


state 115

    (10) function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement . RBRACE

    RBRACE          shift and go to state 153


state 116

    (11) function_definition -> FN ID LPAREN params RPAREN type LBRACE . block_statement RBRACE
    (28) block_statement -> . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    block_statement                shift and go to state 154
    statement                      shift and go to state 85
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 117

    (19) more_params -> COMMA param more_params .

    RPAREN          reduce using rule 19 (more_params -> COMMA param more_params .)


state 118

    (12) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE . function_definition_without_main
    (13) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE .
    (14) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (15) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (16) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE
    (17) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE

  ! shift/reduce conflict for FN resolved as shift
    CONST           reduce using rule 13 (function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE .)
    $end            reduce using rule 13 (function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE .)
    FN              shift and go to state 155

  ! FN              [ reduce using rule 13 (function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE .) ]

    function_definition_without_main shift and go to state 156

state 119

    (29) statement -> var_statement statement .

    RBRACE          reduce using rule 29 (statement -> var_statement statement .)


state 120

    (30) statement -> var_assignment statement .

    RBRACE          reduce using rule 30 (statement -> var_assignment statement .)


state 121

    (31) statement -> func_call statement .

    RBRACE          reduce using rule 31 (statement -> func_call statement .)


state 122

    (32) statement -> if_statement statement .

    RBRACE          reduce using rule 32 (statement -> if_statement statement .)


state 123

    (33) statement -> for_statement statement .

    RBRACE          reduce using rule 33 (statement -> for_statement statement .)


state 124

    (37) statement -> list_statement statement .

    RBRACE          reduce using rule 37 (statement -> list_statement statement .)


state 125

    (38) statement -> list_assignment statement .

    RBRACE          reduce using rule 38 (statement -> list_assignment statement .)


state 126

    (39) statement -> increment_rule statement .

    RBRACE          reduce using rule 39 (statement -> increment_rule statement .)


state 127

    (40) statement -> assignment statement .

    RBRACE          reduce using rule 40 (statement -> assignment statement .)


state 128

    (42) var_statement -> MUT ID . DECLARE_ASSIGN expression
    (46) list_statement -> MUT ID . DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> MUT ID . DECLARE_ASSIGN LBRACKET id_list RBRACKET type

    DECLARE_ASSIGN  shift and go to state 157


state 129

    (44) var_assignment -> ID ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 158
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 130

    (48) list_assignment -> ID LBRACKET . NUMBER RBRACKET ASSIGN expression
    (52) func_call_list -> ID LBRACKET . DOTDOT RBRACKET
    (53) func_call_list -> ID LBRACKET . NUMBER DOTDOT NUMBER RBRACKET

    NUMBER          shift and go to state 159
    DOTDOT          shift and go to state 70


state 131

    (105) assignment -> ID PLUS_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 160
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 132

    (106) assignment -> ID MINUS_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 161
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 133

    (107) assignment -> ID TIMES_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 162
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 134

    (108) assignment -> ID DIVIDE_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 163
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 135

    (109) assignment -> ID MOD_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 164
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 136

    (110) assignment -> ID BIT_AND_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 165
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 137

    (111) assignment -> ID BIT_OR_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 166
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 138

    (112) assignment -> ID BIT_XOR_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 167
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 139

    (113) assignment -> ID BIT_LSHIFT_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 168
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 140

    (114) assignment -> ID BIT_RSHIFT_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 169
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 141

    (64) declaration_imutable -> ID DECLARE_ASSIGN . expression
    (65) declaration_imutable_list -> ID DECLARE_ASSIGN . LBRACKET id_list RBRACKET
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    LBRACKET        shift and go to state 171
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 170
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 142

    (43) var_statement -> CONST ID . DECLARE_ASSIGN expression

    DECLARE_ASSIGN  shift and go to state 172


state 143

    (57) if_statement -> IF expression_relacional . LBRACE statement RBRACE
    (58) if_statement -> IF expression_relacional . LBRACE statement RBRACE elseop

    LBRACE          shift and go to state 173


state 144

    (96) expression_relacional -> expression . EQ expression
    (97) expression_relacional -> expression . NEQ expression
    (98) expression_relacional -> expression . LT expression
    (99) expression_relacional -> expression . LE expression
    (100) expression_relacional -> expression . GT expression
    (101) expression_relacional -> expression . GE expression
    (102) expression_relacional -> expression . AND expression
    (103) expression_relacional -> expression . OR expression
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    EQ              shift and go to state 174
    NEQ             shift and go to state 175
    LT              shift and go to state 176
    LE              shift and go to state 177
    GT              shift and go to state 178
    GE              shift and go to state 179
    AND             shift and go to state 180
    OR              shift and go to state 181
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 145

    (104) expression_relacional -> NOT . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 182
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 146

    (61) for_statement -> FOR ID . IN expression LBRACE statement RBRACE
    (64) declaration_imutable -> ID . DECLARE_ASSIGN expression
    (94) increment_rule -> ID . INCREMENT
    (95) increment_rule -> ID . DECREMENT
    (49) func_call -> ID . LPAREN id_list RPAREN
    (50) func_call -> ID . LPAREN RPAREN
    (52) func_call_list -> ID . LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> ID . LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> ID .
    (85) factor -> ID . LBRACKET NUMBER RBRACKET

    IN              shift and go to state 183
    DECLARE_ASSIGN  shift and go to state 184
    INCREMENT       shift and go to state 45
    DECREMENT       shift and go to state 46
    LPAREN          shift and go to state 47
    LBRACKET        shift and go to state 48
    TIMES           reduce using rule 77 (factor -> ID .)
    DIVIDE          reduce using rule 77 (factor -> ID .)
    MOD             reduce using rule 77 (factor -> ID .)
    EQ              reduce using rule 77 (factor -> ID .)
    NEQ             reduce using rule 77 (factor -> ID .)
    LT              reduce using rule 77 (factor -> ID .)
    LE              reduce using rule 77 (factor -> ID .)
    GT              reduce using rule 77 (factor -> ID .)
    GE              reduce using rule 77 (factor -> ID .)
    AND             reduce using rule 77 (factor -> ID .)
    OR              reduce using rule 77 (factor -> ID .)
    PLUS            reduce using rule 77 (factor -> ID .)
    MINUS           reduce using rule 77 (factor -> ID .)


state 147

    (62) for_statement -> FOR declaration_imutable . SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE

    SEMICOLON       shift and go to state 185


state 148

    (63) for_statement -> FOR expression_relacional . LBRACE statement RBRACE

    LBRACE          shift and go to state 186


state 149

    (67) return_statement -> RETURN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    RBRACE          reduce using rule 67 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 150

    (55) more_expressions -> COMMA expression . more_expressions
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term
    (55) more_expressions -> . COMMA expression more_expressions
    (56) more_expressions -> .

    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    COMMA           shift and go to state 108
    RPAREN          reduce using rule 56 (more_expressions -> .)
    RBRACKET        reduce using rule 56 (more_expressions -> .)

    more_expressions               shift and go to state 187

state 151

    (53) func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER . RBRACKET

    RBRACKET        shift and go to state 188


state 152

    (85) factor -> ID LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 111


state 153

    (10) function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE .

    CONST           reduce using rule 10 (function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE .)
    FN              reduce using rule 10 (function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE .)
    $end            reduce using rule 10 (function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE .)


state 154

    (11) function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement . RBRACE

    RBRACE          shift and go to state 189


state 155

    (14) function_definition_without_main -> FN . ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (15) function_definition_without_main -> FN . ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (16) function_definition_without_main -> FN . ID LPAREN params RPAREN LBRACE block_statement RBRACE
    (17) function_definition_without_main -> FN . ID LPAREN params RPAREN type LBRACE block_statement RBRACE

    ID              shift and go to state 190


state 156

    (12) function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main .

    CONST           reduce using rule 12 (function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main .)
    FN              reduce using rule 12 (function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main .)
    $end            reduce using rule 12 (function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main .)


state 157

    (42) var_statement -> MUT ID DECLARE_ASSIGN . expression
    (46) list_statement -> MUT ID DECLARE_ASSIGN . LBRACKET id_list RBRACKET
    (47) list_statement -> MUT ID DECLARE_ASSIGN . LBRACKET id_list RBRACKET type
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    LBRACKET        shift and go to state 192
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 191
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 158

    (44) var_assignment -> ID ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 44 (var_assignment -> ID ASSIGN expression .)
    CONST           reduce using rule 44 (var_assignment -> ID ASSIGN expression .)
    ID              reduce using rule 44 (var_assignment -> ID ASSIGN expression .)
    IF              reduce using rule 44 (var_assignment -> ID ASSIGN expression .)
    FOR             reduce using rule 44 (var_assignment -> ID ASSIGN expression .)
    BREAK           reduce using rule 44 (var_assignment -> ID ASSIGN expression .)
    RETURN          reduce using rule 44 (var_assignment -> ID ASSIGN expression .)
    RBRACE          reduce using rule 44 (var_assignment -> ID ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 159

    (48) list_assignment -> ID LBRACKET NUMBER . RBRACKET ASSIGN expression
    (53) func_call_list -> ID LBRACKET NUMBER . DOTDOT NUMBER RBRACKET

    RBRACKET        shift and go to state 193
    DOTDOT          shift and go to state 110


state 160

    (105) assignment -> ID PLUS_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 105 (assignment -> ID PLUS_ASSIGN expression .)
    CONST           reduce using rule 105 (assignment -> ID PLUS_ASSIGN expression .)
    ID              reduce using rule 105 (assignment -> ID PLUS_ASSIGN expression .)
    IF              reduce using rule 105 (assignment -> ID PLUS_ASSIGN expression .)
    FOR             reduce using rule 105 (assignment -> ID PLUS_ASSIGN expression .)
    BREAK           reduce using rule 105 (assignment -> ID PLUS_ASSIGN expression .)
    RETURN          reduce using rule 105 (assignment -> ID PLUS_ASSIGN expression .)
    RBRACE          reduce using rule 105 (assignment -> ID PLUS_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 161

    (106) assignment -> ID MINUS_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 106 (assignment -> ID MINUS_ASSIGN expression .)
    CONST           reduce using rule 106 (assignment -> ID MINUS_ASSIGN expression .)
    ID              reduce using rule 106 (assignment -> ID MINUS_ASSIGN expression .)
    IF              reduce using rule 106 (assignment -> ID MINUS_ASSIGN expression .)
    FOR             reduce using rule 106 (assignment -> ID MINUS_ASSIGN expression .)
    BREAK           reduce using rule 106 (assignment -> ID MINUS_ASSIGN expression .)
    RETURN          reduce using rule 106 (assignment -> ID MINUS_ASSIGN expression .)
    RBRACE          reduce using rule 106 (assignment -> ID MINUS_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 162

    (107) assignment -> ID TIMES_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 107 (assignment -> ID TIMES_ASSIGN expression .)
    CONST           reduce using rule 107 (assignment -> ID TIMES_ASSIGN expression .)
    ID              reduce using rule 107 (assignment -> ID TIMES_ASSIGN expression .)
    IF              reduce using rule 107 (assignment -> ID TIMES_ASSIGN expression .)
    FOR             reduce using rule 107 (assignment -> ID TIMES_ASSIGN expression .)
    BREAK           reduce using rule 107 (assignment -> ID TIMES_ASSIGN expression .)
    RETURN          reduce using rule 107 (assignment -> ID TIMES_ASSIGN expression .)
    RBRACE          reduce using rule 107 (assignment -> ID TIMES_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 163

    (108) assignment -> ID DIVIDE_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 108 (assignment -> ID DIVIDE_ASSIGN expression .)
    CONST           reduce using rule 108 (assignment -> ID DIVIDE_ASSIGN expression .)
    ID              reduce using rule 108 (assignment -> ID DIVIDE_ASSIGN expression .)
    IF              reduce using rule 108 (assignment -> ID DIVIDE_ASSIGN expression .)
    FOR             reduce using rule 108 (assignment -> ID DIVIDE_ASSIGN expression .)
    BREAK           reduce using rule 108 (assignment -> ID DIVIDE_ASSIGN expression .)
    RETURN          reduce using rule 108 (assignment -> ID DIVIDE_ASSIGN expression .)
    RBRACE          reduce using rule 108 (assignment -> ID DIVIDE_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 164

    (109) assignment -> ID MOD_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 109 (assignment -> ID MOD_ASSIGN expression .)
    CONST           reduce using rule 109 (assignment -> ID MOD_ASSIGN expression .)
    ID              reduce using rule 109 (assignment -> ID MOD_ASSIGN expression .)
    IF              reduce using rule 109 (assignment -> ID MOD_ASSIGN expression .)
    FOR             reduce using rule 109 (assignment -> ID MOD_ASSIGN expression .)
    BREAK           reduce using rule 109 (assignment -> ID MOD_ASSIGN expression .)
    RETURN          reduce using rule 109 (assignment -> ID MOD_ASSIGN expression .)
    RBRACE          reduce using rule 109 (assignment -> ID MOD_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 165

    (110) assignment -> ID BIT_AND_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 110 (assignment -> ID BIT_AND_ASSIGN expression .)
    CONST           reduce using rule 110 (assignment -> ID BIT_AND_ASSIGN expression .)
    ID              reduce using rule 110 (assignment -> ID BIT_AND_ASSIGN expression .)
    IF              reduce using rule 110 (assignment -> ID BIT_AND_ASSIGN expression .)
    FOR             reduce using rule 110 (assignment -> ID BIT_AND_ASSIGN expression .)
    BREAK           reduce using rule 110 (assignment -> ID BIT_AND_ASSIGN expression .)
    RETURN          reduce using rule 110 (assignment -> ID BIT_AND_ASSIGN expression .)
    RBRACE          reduce using rule 110 (assignment -> ID BIT_AND_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 166

    (111) assignment -> ID BIT_OR_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 111 (assignment -> ID BIT_OR_ASSIGN expression .)
    CONST           reduce using rule 111 (assignment -> ID BIT_OR_ASSIGN expression .)
    ID              reduce using rule 111 (assignment -> ID BIT_OR_ASSIGN expression .)
    IF              reduce using rule 111 (assignment -> ID BIT_OR_ASSIGN expression .)
    FOR             reduce using rule 111 (assignment -> ID BIT_OR_ASSIGN expression .)
    BREAK           reduce using rule 111 (assignment -> ID BIT_OR_ASSIGN expression .)
    RETURN          reduce using rule 111 (assignment -> ID BIT_OR_ASSIGN expression .)
    RBRACE          reduce using rule 111 (assignment -> ID BIT_OR_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 167

    (112) assignment -> ID BIT_XOR_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 112 (assignment -> ID BIT_XOR_ASSIGN expression .)
    CONST           reduce using rule 112 (assignment -> ID BIT_XOR_ASSIGN expression .)
    ID              reduce using rule 112 (assignment -> ID BIT_XOR_ASSIGN expression .)
    IF              reduce using rule 112 (assignment -> ID BIT_XOR_ASSIGN expression .)
    FOR             reduce using rule 112 (assignment -> ID BIT_XOR_ASSIGN expression .)
    BREAK           reduce using rule 112 (assignment -> ID BIT_XOR_ASSIGN expression .)
    RETURN          reduce using rule 112 (assignment -> ID BIT_XOR_ASSIGN expression .)
    RBRACE          reduce using rule 112 (assignment -> ID BIT_XOR_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 168

    (113) assignment -> ID BIT_LSHIFT_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 113 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    CONST           reduce using rule 113 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    ID              reduce using rule 113 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    IF              reduce using rule 113 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    FOR             reduce using rule 113 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    BREAK           reduce using rule 113 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    RETURN          reduce using rule 113 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    RBRACE          reduce using rule 113 (assignment -> ID BIT_LSHIFT_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 169

    (114) assignment -> ID BIT_RSHIFT_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 114 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    CONST           reduce using rule 114 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    ID              reduce using rule 114 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    IF              reduce using rule 114 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    FOR             reduce using rule 114 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    BREAK           reduce using rule 114 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    RETURN          reduce using rule 114 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    RBRACE          reduce using rule 114 (assignment -> ID BIT_RSHIFT_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 170

    (64) declaration_imutable -> ID DECLARE_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 64 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    CONST           reduce using rule 64 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    ID              reduce using rule 64 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    IF              reduce using rule 64 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    FOR             reduce using rule 64 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    BREAK           reduce using rule 64 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    RETURN          reduce using rule 64 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    RBRACE          reduce using rule 64 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    SEMICOLON       reduce using rule 64 (declaration_imutable -> ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 171

    (65) declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET . id_list RBRACKET
    (54) id_list -> . expression more_expressions
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    id_list                        shift and go to state 194
    expression                     shift and go to state 69
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 172

    (43) var_statement -> CONST ID DECLARE_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 195
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 173

    (57) if_statement -> IF expression_relacional LBRACE . statement RBRACE
    (58) if_statement -> IF expression_relacional LBRACE . statement RBRACE elseop
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    statement                      shift and go to state 196
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 174

    (96) expression_relacional -> expression EQ . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 197
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 175

    (97) expression_relacional -> expression NEQ . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 198
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 176

    (98) expression_relacional -> expression LT . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 199
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 177

    (99) expression_relacional -> expression LE . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 200
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 178

    (100) expression_relacional -> expression GT . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 201
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 179

    (101) expression_relacional -> expression GE . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 202
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 180

    (102) expression_relacional -> expression AND . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 203
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 181

    (103) expression_relacional -> expression OR . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 204
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 182

    (104) expression_relacional -> NOT expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    LBRACE          reduce using rule 104 (expression_relacional -> NOT expression .)
    SEMICOLON       reduce using rule 104 (expression_relacional -> NOT expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 183

    (61) for_statement -> FOR ID IN . expression LBRACE statement RBRACE
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 205
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 184

    (64) declaration_imutable -> ID DECLARE_ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 170
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 185

    (62) for_statement -> FOR declaration_imutable SEMICOLON . expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (96) expression_relacional -> . expression EQ expression
    (97) expression_relacional -> . expression NEQ expression
    (98) expression_relacional -> . expression LT expression
    (99) expression_relacional -> . expression LE expression
    (100) expression_relacional -> . expression GT expression
    (101) expression_relacional -> . expression GE expression
    (102) expression_relacional -> . expression AND expression
    (103) expression_relacional -> . expression OR expression
    (104) expression_relacional -> . NOT expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    NOT             shift and go to state 145
    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression_relacional          shift and go to state 206
    increment_rule                 shift and go to state 23
    expression                     shift and go to state 144
    term                           shift and go to state 22
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 186

    (63) for_statement -> FOR expression_relacional LBRACE . statement RBRACE
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    statement                      shift and go to state 207
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 187

    (55) more_expressions -> COMMA expression more_expressions .

    RPAREN          reduce using rule 55 (more_expressions -> COMMA expression more_expressions .)
    RBRACKET        reduce using rule 55 (more_expressions -> COMMA expression more_expressions .)


state 188

    (53) func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .

    PLUS            reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    MINUS           reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    CONST           reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    FN              reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    $end            reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RPAREN          reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    COMMA           reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    MUT             reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    ID              reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    IF              reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    FOR             reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    BREAK           reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RETURN          reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RBRACE          reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    EQ              reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    NEQ             reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    LT              reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    LE              reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    GT              reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    GE              reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    AND             reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    OR              reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    RBRACKET        reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    LBRACE          reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)
    SEMICOLON       reduce using rule 53 (func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET .)


state 189

    (11) function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE .

    CONST           reduce using rule 11 (function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE .)
    FN              reduce using rule 11 (function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE .)
    $end            reduce using rule 11 (function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE .)


state 190

    (14) function_definition_without_main -> FN ID . LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (15) function_definition_without_main -> FN ID . LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (16) function_definition_without_main -> FN ID . LPAREN params RPAREN LBRACE block_statement RBRACE
    (17) function_definition_without_main -> FN ID . LPAREN params RPAREN type LBRACE block_statement RBRACE

    LPAREN          shift and go to state 208


state 191

    (42) var_statement -> MUT ID DECLARE_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 42 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    CONST           reduce using rule 42 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    ID              reduce using rule 42 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    IF              reduce using rule 42 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    FOR             reduce using rule 42 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    BREAK           reduce using rule 42 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    RETURN          reduce using rule 42 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    RBRACE          reduce using rule 42 (var_statement -> MUT ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 192

    (46) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET . id_list RBRACKET
    (47) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET . id_list RBRACKET type
    (54) id_list -> . expression more_expressions
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    id_list                        shift and go to state 209
    expression                     shift and go to state 69
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 193

    (48) list_assignment -> ID LBRACKET NUMBER RBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 210


state 194

    (65) declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list . RBRACKET

    RBRACKET        shift and go to state 211


state 195

    (43) var_statement -> CONST ID DECLARE_ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 43 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    CONST           reduce using rule 43 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    ID              reduce using rule 43 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    IF              reduce using rule 43 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    FOR             reduce using rule 43 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    BREAK           reduce using rule 43 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    RETURN          reduce using rule 43 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    RBRACE          reduce using rule 43 (var_statement -> CONST ID DECLARE_ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 196

    (57) if_statement -> IF expression_relacional LBRACE statement . RBRACE
    (58) if_statement -> IF expression_relacional LBRACE statement . RBRACE elseop

    RBRACE          shift and go to state 212


state 197

    (96) expression_relacional -> expression EQ expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    LBRACE          reduce using rule 96 (expression_relacional -> expression EQ expression .)
    SEMICOLON       reduce using rule 96 (expression_relacional -> expression EQ expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 198

    (97) expression_relacional -> expression NEQ expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    LBRACE          reduce using rule 97 (expression_relacional -> expression NEQ expression .)
    SEMICOLON       reduce using rule 97 (expression_relacional -> expression NEQ expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 199

    (98) expression_relacional -> expression LT expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    LBRACE          reduce using rule 98 (expression_relacional -> expression LT expression .)
    SEMICOLON       reduce using rule 98 (expression_relacional -> expression LT expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 200

    (99) expression_relacional -> expression LE expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    LBRACE          reduce using rule 99 (expression_relacional -> expression LE expression .)
    SEMICOLON       reduce using rule 99 (expression_relacional -> expression LE expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 201

    (100) expression_relacional -> expression GT expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    LBRACE          reduce using rule 100 (expression_relacional -> expression GT expression .)
    SEMICOLON       reduce using rule 100 (expression_relacional -> expression GT expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 202

    (101) expression_relacional -> expression GE expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    LBRACE          reduce using rule 101 (expression_relacional -> expression GE expression .)
    SEMICOLON       reduce using rule 101 (expression_relacional -> expression GE expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 203

    (102) expression_relacional -> expression AND expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    LBRACE          reduce using rule 102 (expression_relacional -> expression AND expression .)
    SEMICOLON       reduce using rule 102 (expression_relacional -> expression AND expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 204

    (103) expression_relacional -> expression OR expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    LBRACE          reduce using rule 103 (expression_relacional -> expression OR expression .)
    SEMICOLON       reduce using rule 103 (expression_relacional -> expression OR expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 205

    (61) for_statement -> FOR ID IN expression . LBRACE statement RBRACE
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    LBRACE          shift and go to state 213
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 206

    (62) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional . SEMICOLON increment_rule LBRACE statement RBRACE

    SEMICOLON       shift and go to state 214


state 207

    (63) for_statement -> FOR expression_relacional LBRACE statement . RBRACE

    RBRACE          shift and go to state 215


state 208

    (14) function_definition_without_main -> FN ID LPAREN . params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (15) function_definition_without_main -> FN ID LPAREN . params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (16) function_definition_without_main -> FN ID LPAREN . params RPAREN LBRACE block_statement RBRACE
    (17) function_definition_without_main -> FN ID LPAREN . params RPAREN type LBRACE block_statement RBRACE
    (18) params -> . param more_params
    (21) param -> . ID type

    ID              shift and go to state 41

    params                         shift and go to state 216
    param                          shift and go to state 43

state 209

    (46) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list . RBRACKET
    (47) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list . RBRACKET type

    RBRACKET        shift and go to state 217


state 210

    (48) list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN . expression
    (68) expression -> . expression PLUS term
    (69) expression -> . expression MINUS term
    (70) expression -> . increment_rule
    (71) expression -> . func_call
    (72) expression -> . term
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (73) term -> . term TIMES factor
    (74) term -> . term DIVIDE factor
    (75) term -> . term MOD factor
    (76) term -> . factor
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (77) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . NUMBERFLOAT
    (80) factor -> . WORD
    (81) factor -> . TRUE
    (82) factor -> . FALSE
    (83) factor -> . RUNEVALOR
    (84) factor -> . LPAREN expression RPAREN
    (85) factor -> . ID LBRACKET NUMBER RBRACKET
    (86) factor -> . NOTACAOCIENTIFICA
    (87) factor -> . BINARY
    (88) factor -> . OCTAL
    (89) factor -> . HEX
    (90) factor -> . INTERPOLATIONSTRING
    (91) factor -> . size_of_expression
    (92) size_of_expression -> . SIZEOF LPAREN expression RPAREN
    (93) size_of_expression -> . SIZEOF LPAREN type RPAREN

    ID              shift and go to state 20
    NUMBER          shift and go to state 28
    NUMBERFLOAT     shift and go to state 29
    WORD            shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    RUNEVALOR       shift and go to state 33
    LPAREN          shift and go to state 25
    NOTACAOCIENTIFICA shift and go to state 34
    BINARY          shift and go to state 35
    OCTAL           shift and go to state 36
    HEX             shift and go to state 37
    INTERPOLATIONSTRING shift and go to state 38
    SIZEOF          shift and go to state 40

    expression                     shift and go to state 218
    term                           shift and go to state 22
    increment_rule                 shift and go to state 23
    func_call                      shift and go to state 24
    func_call_list                 shift and go to state 26
    factor                         shift and go to state 27
    size_of_expression             shift and go to state 39

state 211

    (65) declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .

    MUT             reduce using rule 65 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    CONST           reduce using rule 65 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    ID              reduce using rule 65 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    IF              reduce using rule 65 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    FOR             reduce using rule 65 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    BREAK           reduce using rule 65 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RETURN          reduce using rule 65 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RBRACE          reduce using rule 65 (declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)


state 212

    (57) if_statement -> IF expression_relacional LBRACE statement RBRACE .
    (58) if_statement -> IF expression_relacional LBRACE statement RBRACE . elseop
    (59) elseop -> . ELSE if_statement
    (60) elseop -> . ELSE LBRACE statement RBRACE

    MUT             reduce using rule 57 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    CONST           reduce using rule 57 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    ID              reduce using rule 57 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    IF              reduce using rule 57 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    FOR             reduce using rule 57 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    BREAK           reduce using rule 57 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    RETURN          reduce using rule 57 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    RBRACE          reduce using rule 57 (if_statement -> IF expression_relacional LBRACE statement RBRACE .)
    ELSE            shift and go to state 220

    elseop                         shift and go to state 219

state 213

    (61) for_statement -> FOR ID IN expression LBRACE . statement RBRACE
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    statement                      shift and go to state 221
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 214

    (62) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON . increment_rule LBRACE statement RBRACE
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT

    ID              shift and go to state 223

    increment_rule                 shift and go to state 222

state 215

    (63) for_statement -> FOR expression_relacional LBRACE statement RBRACE .

    MUT             reduce using rule 63 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    CONST           reduce using rule 63 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    ID              reduce using rule 63 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    IF              reduce using rule 63 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    FOR             reduce using rule 63 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    BREAK           reduce using rule 63 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    RETURN          reduce using rule 63 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)
    RBRACE          reduce using rule 63 (for_statement -> FOR expression_relacional LBRACE statement RBRACE .)


state 216

    (14) function_definition_without_main -> FN ID LPAREN params . RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (15) function_definition_without_main -> FN ID LPAREN params . RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (16) function_definition_without_main -> FN ID LPAREN params . RPAREN LBRACE block_statement RBRACE
    (17) function_definition_without_main -> FN ID LPAREN params . RPAREN type LBRACE block_statement RBRACE

    RPAREN          shift and go to state 224


state 217

    (46) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .
    (47) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET . type
    (22) type -> . INT
    (23) type -> . F32
    (24) type -> . F64
    (25) type -> . STRING
    (26) type -> . BOOL
    (27) type -> . RUNE

    MUT             reduce using rule 46 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    CONST           reduce using rule 46 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    ID              reduce using rule 46 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    IF              reduce using rule 46 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    FOR             reduce using rule 46 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    BREAK           reduce using rule 46 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RETURN          reduce using rule 46 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    RBRACE          reduce using rule 46 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET .)
    INT             shift and go to state 57
    F32             shift and go to state 58
    F64             shift and go to state 59
    STRING          shift and go to state 60
    BOOL            shift and go to state 61
    RUNE            shift and go to state 62

    type                           shift and go to state 225

state 218

    (48) list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .
    (68) expression -> expression . PLUS term
    (69) expression -> expression . MINUS term

    MUT             reduce using rule 48 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    CONST           reduce using rule 48 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    ID              reduce using rule 48 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    IF              reduce using rule 48 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    FOR             reduce using rule 48 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    BREAK           reduce using rule 48 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    RETURN          reduce using rule 48 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    RBRACE          reduce using rule 48 (list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 219

    (58) if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .

    MUT             reduce using rule 58 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    CONST           reduce using rule 58 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    ID              reduce using rule 58 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    IF              reduce using rule 58 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    FOR             reduce using rule 58 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    BREAK           reduce using rule 58 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    RETURN          reduce using rule 58 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)
    RBRACE          reduce using rule 58 (if_statement -> IF expression_relacional LBRACE statement RBRACE elseop .)


state 220

    (59) elseop -> ELSE . if_statement
    (60) elseop -> ELSE . LBRACE statement RBRACE
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop

    LBRACE          shift and go to state 227
    IF              shift and go to state 101

    if_statement                   shift and go to state 226

state 221

    (61) for_statement -> FOR ID IN expression LBRACE statement . RBRACE

    RBRACE          shift and go to state 228


state 222

    (62) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule . LBRACE statement RBRACE

    LBRACE          shift and go to state 229


state 223

    (94) increment_rule -> ID . INCREMENT
    (95) increment_rule -> ID . DECREMENT

    INCREMENT       shift and go to state 45
    DECREMENT       shift and go to state 46


state 224

    (14) function_definition_without_main -> FN ID LPAREN params RPAREN . LBRACE block_statement RBRACE function_definition_without_main
    (15) function_definition_without_main -> FN ID LPAREN params RPAREN . type LBRACE block_statement RBRACE function_definition_without_main
    (16) function_definition_without_main -> FN ID LPAREN params RPAREN . LBRACE block_statement RBRACE
    (17) function_definition_without_main -> FN ID LPAREN params RPAREN . type LBRACE block_statement RBRACE
    (22) type -> . INT
    (23) type -> . F32
    (24) type -> . F64
    (25) type -> . STRING
    (26) type -> . BOOL
    (27) type -> . RUNE

    LBRACE          shift and go to state 230
    INT             shift and go to state 57
    F32             shift and go to state 58
    F64             shift and go to state 59
    STRING          shift and go to state 60
    BOOL            shift and go to state 61
    RUNE            shift and go to state 62

    type                           shift and go to state 231

state 225

    (47) list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .

    MUT             reduce using rule 47 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    CONST           reduce using rule 47 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    ID              reduce using rule 47 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    IF              reduce using rule 47 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    FOR             reduce using rule 47 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    BREAK           reduce using rule 47 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    RETURN          reduce using rule 47 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)
    RBRACE          reduce using rule 47 (list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type .)


state 226

    (59) elseop -> ELSE if_statement .

    MUT             reduce using rule 59 (elseop -> ELSE if_statement .)
    CONST           reduce using rule 59 (elseop -> ELSE if_statement .)
    ID              reduce using rule 59 (elseop -> ELSE if_statement .)
    IF              reduce using rule 59 (elseop -> ELSE if_statement .)
    FOR             reduce using rule 59 (elseop -> ELSE if_statement .)
    BREAK           reduce using rule 59 (elseop -> ELSE if_statement .)
    RETURN          reduce using rule 59 (elseop -> ELSE if_statement .)
    RBRACE          reduce using rule 59 (elseop -> ELSE if_statement .)


state 227

    (60) elseop -> ELSE LBRACE . statement RBRACE
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    statement                      shift and go to state 232
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 228

    (61) for_statement -> FOR ID IN expression LBRACE statement RBRACE .

    MUT             reduce using rule 61 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    CONST           reduce using rule 61 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    ID              reduce using rule 61 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    IF              reduce using rule 61 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    FOR             reduce using rule 61 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    BREAK           reduce using rule 61 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    RETURN          reduce using rule 61 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)
    RBRACE          reduce using rule 61 (for_statement -> FOR ID IN expression LBRACE statement RBRACE .)


state 229

    (62) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE . statement RBRACE
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    declaration_imutable           shift and go to state 97
    increment_rule                 shift and go to state 95
    statement                      shift and go to state 233
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    assignment                     shift and go to state 96
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 230

    (14) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE . block_statement RBRACE function_definition_without_main
    (16) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE . block_statement RBRACE
    (28) block_statement -> . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    block_statement                shift and go to state 234
    statement                      shift and go to state 85
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 231

    (15) function_definition_without_main -> FN ID LPAREN params RPAREN type . LBRACE block_statement RBRACE function_definition_without_main
    (17) function_definition_without_main -> FN ID LPAREN params RPAREN type . LBRACE block_statement RBRACE

    LBRACE          shift and go to state 235


state 232

    (60) elseop -> ELSE LBRACE statement . RBRACE

    RBRACE          shift and go to state 236


state 233

    (62) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement . RBRACE

    RBRACE          shift and go to state 237


state 234

    (14) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement . RBRACE function_definition_without_main
    (16) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement . RBRACE

    RBRACE          shift and go to state 238


state 235

    (15) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE . block_statement RBRACE function_definition_without_main
    (17) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE . block_statement RBRACE
    (28) block_statement -> . statement
    (29) statement -> . var_statement statement
    (30) statement -> . var_assignment statement
    (31) statement -> . func_call statement
    (32) statement -> . if_statement statement
    (33) statement -> . for_statement statement
    (34) statement -> . break_statement
    (35) statement -> . return_statement
    (36) statement -> .
    (37) statement -> . list_statement statement
    (38) statement -> . list_assignment statement
    (39) statement -> . increment_rule statement
    (40) statement -> . assignment statement
    (41) var_statement -> . declaration_imutable
    (42) var_statement -> . MUT ID DECLARE_ASSIGN expression
    (43) var_statement -> . CONST ID DECLARE_ASSIGN expression
    (44) var_assignment -> . ID ASSIGN expression
    (49) func_call -> . ID LPAREN id_list RPAREN
    (50) func_call -> . ID LPAREN RPAREN
    (51) func_call -> . func_call_list
    (57) if_statement -> . IF expression_relacional LBRACE statement RBRACE
    (58) if_statement -> . IF expression_relacional LBRACE statement RBRACE elseop
    (61) for_statement -> . FOR ID IN expression LBRACE statement RBRACE
    (62) for_statement -> . FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE
    (63) for_statement -> . FOR expression_relacional LBRACE statement RBRACE
    (66) break_statement -> . BREAK
    (67) return_statement -> . RETURN expression
    (45) list_statement -> . declaration_imutable_list
    (46) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET
    (47) list_statement -> . MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type
    (48) list_assignment -> . ID LBRACKET NUMBER RBRACKET ASSIGN expression
    (94) increment_rule -> . ID INCREMENT
    (95) increment_rule -> . ID DECREMENT
    (105) assignment -> . ID PLUS_ASSIGN expression
    (106) assignment -> . ID MINUS_ASSIGN expression
    (107) assignment -> . ID TIMES_ASSIGN expression
    (108) assignment -> . ID DIVIDE_ASSIGN expression
    (109) assignment -> . ID MOD_ASSIGN expression
    (110) assignment -> . ID BIT_AND_ASSIGN expression
    (111) assignment -> . ID BIT_OR_ASSIGN expression
    (112) assignment -> . ID BIT_XOR_ASSIGN expression
    (113) assignment -> . ID BIT_LSHIFT_ASSIGN expression
    (114) assignment -> . ID BIT_RSHIFT_ASSIGN expression
    (64) declaration_imutable -> . ID DECLARE_ASSIGN expression
    (52) func_call_list -> . ID LBRACKET DOTDOT RBRACKET
    (53) func_call_list -> . ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET
    (65) declaration_imutable_list -> . ID DECLARE_ASSIGN LBRACKET id_list RBRACKET

    RBRACE          reduce using rule 36 (statement -> .)
    MUT             shift and go to state 98
    CONST           shift and go to state 100
    ID              shift and go to state 99
    IF              shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104

    block_statement                shift and go to state 239
    statement                      shift and go to state 85
    var_statement                  shift and go to state 86
    var_assignment                 shift and go to state 87
    func_call                      shift and go to state 88
    if_statement                   shift and go to state 89
    for_statement                  shift and go to state 90
    break_statement                shift and go to state 91
    return_statement               shift and go to state 92
    list_statement                 shift and go to state 93
    list_assignment                shift and go to state 94
    increment_rule                 shift and go to state 95
    assignment                     shift and go to state 96
    declaration_imutable           shift and go to state 97
    func_call_list                 shift and go to state 26
    declaration_imutable_list      shift and go to state 105

state 236

    (60) elseop -> ELSE LBRACE statement RBRACE .

    MUT             reduce using rule 60 (elseop -> ELSE LBRACE statement RBRACE .)
    CONST           reduce using rule 60 (elseop -> ELSE LBRACE statement RBRACE .)
    ID              reduce using rule 60 (elseop -> ELSE LBRACE statement RBRACE .)
    IF              reduce using rule 60 (elseop -> ELSE LBRACE statement RBRACE .)
    FOR             reduce using rule 60 (elseop -> ELSE LBRACE statement RBRACE .)
    BREAK           reduce using rule 60 (elseop -> ELSE LBRACE statement RBRACE .)
    RETURN          reduce using rule 60 (elseop -> ELSE LBRACE statement RBRACE .)
    RBRACE          reduce using rule 60 (elseop -> ELSE LBRACE statement RBRACE .)


state 237

    (62) for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .

    MUT             reduce using rule 62 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    CONST           reduce using rule 62 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    ID              reduce using rule 62 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    IF              reduce using rule 62 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    FOR             reduce using rule 62 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    BREAK           reduce using rule 62 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    RETURN          reduce using rule 62 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)
    RBRACE          reduce using rule 62 (for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE .)


state 238

    (14) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE . function_definition_without_main
    (16) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE .
    (14) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (15) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (16) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE
    (17) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE

  ! shift/reduce conflict for FN resolved as shift
    CONST           reduce using rule 16 (function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE .)
    $end            reduce using rule 16 (function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE .)
    FN              shift and go to state 155

  ! FN              [ reduce using rule 16 (function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE .) ]

    function_definition_without_main shift and go to state 240

state 239

    (15) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement . RBRACE function_definition_without_main
    (17) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement . RBRACE

    RBRACE          shift and go to state 241


state 240

    (14) function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main .

    CONST           reduce using rule 14 (function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main .)
    FN              reduce using rule 14 (function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main .)
    $end            reduce using rule 14 (function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main .)


state 241

    (15) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE . function_definition_without_main
    (17) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE .
    (14) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main
    (15) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main
    (16) function_definition_without_main -> . FN ID LPAREN params RPAREN LBRACE block_statement RBRACE
    (17) function_definition_without_main -> . FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE

  ! shift/reduce conflict for FN resolved as shift
    CONST           reduce using rule 17 (function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE .)
    $end            reduce using rule 17 (function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE .)
    FN              shift and go to state 155

  ! FN              [ reduce using rule 17 (function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE .) ]

    function_definition_without_main shift and go to state 242

state 242

    (15) function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main .

    CONST           reduce using rule 15 (function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main .)
    FN              reduce using rule 15 (function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main .)
    $end            reduce using rule 15 (function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FN in state 118 resolved as shift
WARNING: shift/reduce conflict for FN in state 238 resolved as shift
WARNING: shift/reduce conflict for FN in state 241 resolved as shift
