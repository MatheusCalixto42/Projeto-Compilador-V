Program -> Program Program_import
         | Program Program_items
         | Program_import
         | Program_items

Program_import -> Program_import IMPORT ID
                | IMPORT ID

Program_items -> Program_items Program_item
               | Program_item

Program_item -> Const_declaration
              | Function_definition

Const_declaration -> CONST ID ":=" Expression

Function_definition ->  "fn" ID "(" Params ")" "{" Block_statement "}"
                    | "fn" ID "(" Params ")" Type "{" Block_statement "}"
                    | "fn" MAIN "(" ")" "{" Block_statement "}" Function_definition_without_main
                    | "fn" MAIN "(" ")" "{" Block_statement "}"

Function_definition_without_main ->Function_definition_without_main "fn" ID "(" Params ")" "{" Block_statement "}"
                                 | Function_definition_without_main "fn" ID "(" Params ")" Type "{" Block_statement "}"
                                 | Function_definition_without_main "fn" ID "(" ")" "{" Block_statement "}"
                                 | "fn" ID "(" Params ")" "{" Block_statement "}"
                                 | "fn" ID "(" Params ")" Type "{" Block_statement "}"
                                 | "fn" ID "(" ")" "{" Block_statement "}"

Params -> Params Param More_Params
        | Param More_Params

More_Params -> More_Params "," Param
             | "," Param
             | ε

Param -> ID Type

Type -> INT | F32 | F64 | RUNETYPE | STRINGTYPE | BOOL

Block_statement -> Block_statement statement
                | statement

statement -> statement Var_statement
           | statement Var_assignment
           | statement List_statement
           | statement List_assignment
           | statement Func_call
           | statement If_statement
           | statement For_statement
           | statement Increment
           | statement Assignment
           | statement Break_statement
           | statement Return_statement
           | Var_statement
           | Var_assignment
           | List_statement
           | List_assignment
           | Func_call
           | If_statement
           | For_statement
           | Increment
           | Assignment
           | Break_statement
           | Return_statement
           | ε

Var_statement -> DeclarationImutable
              | MUT ID ":=" Expression
              | CONST ID ":=" Expression

Var_assignment -> ID "=" Expression

List_statement -> DeclarationImutableList
               | MUT ID ":=" "[" id_list "]"
               | MUT ID ":=" "[" NUMBER "]" Type

List_assignment -> ID "[" NUMBER "]" "=" Expression

DeclarationImutableList -> ID ":=" "[" id_list "]"

Func_call ->  ID "(" id_list ")"
           | ID "(" ")"
           | FuncCallList

FuncCallList ->  ID "[" DOTDOT "]"
              | ID "[" NUMBER DOTDOT NUMBER "]"

id_list ->  Expression more_Expression

more_Expression -> more_Expression "," Expression
                 | "," Expression
                 | ε

If_statement ->
             "if" ExpressionRelacional "{" Block_statement "}"
             | "if" ExpressionRelacional "{" Block_statement "}" ElseOp

ElseOp -> 
          "else" If_statement
        | "else" "{" Block_statement "}"

For_statement -> "for" ID "in" Expression "{" Block_statement "}"
              | "for" DeclarationImutable ";" ExpressionRelacional ";" Increment "{" Block_statement "}"
              | "for" ExpressionRelacional "{" Block_statement "}"

DeclarationImutable -> ID ":=" Expression

Break_statement -> "break"

Return_statement -> "return" Expression

Expression -> Expression "+" Term
           | Expression "-" Term
           | Term
           | Increment
           | Func_call

ExpressionRelacional ->
                     | Expression "==" Expression
                     | Expression "!=" Expression
                     | Expression "<" Expression
                     | Expression "<=" Expression
                     | Expression ">" Expression
                     | Expression ">=" Expression
                     | Expression "&&" Expression
                     | Expression "||" Expression
                     | "!" Expression

Term -> Term "*" Factor
     | Term "/" Factor
     | Term "%" Factor
     | Factor

Factor -> NUMBER
       | STRING
       | ID
       | "(" Expression ")"
       | ID "[" NUMBER "]"
       | TRUE
       | FALSE
       | RUNE
       | NUMBERFLOAT
       | NOTACAOCIENTIFICA
       | BINARY
       | OCTAL
       | HEX
       | INTERPOLATIONSTRING
       | SizeofExpression

SizeofExpression -> "sizeof" "(" Expression ")"
                 | "sizeof" "(" Type ")"

Increment -> ID "++"
          | ID "--"

Assignment ->
           | ID "+=" Expression
           | ID "-=" Expression
           | ID "*=" Expression
           | ID "/=" Expression
           | ID "%=" Expression
           | ID "&=" Expression
           | ID "|=" Expression
           | ID "^=" Expression
           | ID "<<=" Expression
           | ID ">>=" Expression'