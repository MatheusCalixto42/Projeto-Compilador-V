Program -> Program_import Program_items | Program_items

Program_import -> IMPORT ID Program_import | IMPORT ID

Program_items -> Program_item Program_items | Program_item 		# Aqui era um vazio
               
Program_item -> Const_declaration | Function_definition
              
Const_declaration -> CONST ID ":=" Exp

Function_definition -> Signature BlockStm | Signature ID BlockStm
             
Signature -> "fn" ID "(" SigParams ")" |  "fn" ID "(" ")"

	# Mudamos Type para ID, resolver no semantico
SigParams -> ID ID | ID ID "," SigParams

Params -> Exp "," Params | Exp
	  
BlockStm -> "{" Stms "}" | "{" "}"
				
Stms -> Stm Stms | Stm

stm ->  Var_stm     | 
		Var_assign  |
		List_stm    |
		List_assign |
		Func_calls  |
		If_stm      |
		For_stm     |
		Increment   |
		Assign      |
		BREAK       |
		RETURN Exp

Var_stm -> ID ":=" Exp | MUT ID ":=" Exp 

Var_assign -> ID "=" Exp

List_stm -> ID ":=" "[" Params "]"        | 
			MUT ID ":=" "[" Params "]"    | 
			MUT ID ":=" "[" NUMBER "]" ID |
			ID ":=" "[" "]"               | 
			MUT ID ":=" "[" "]"

List_assign -> ID "[" NUMBER "]" "=" Exp

List_call -> ID "[" DOT DOT "]" | ID "[" NUMBER DOT DOT NUMBER "]"

Func_call -> ID "(" Params ")" | ID "(" ")"

If_stm -> IF ExpRels BlockStm | IF ExpRels BlockStm ElseOp

ElseOp -> ELSE If_stm | ELSE BlockStm 

For_stm -> FOR ID IN Exp BlockStm | FOR ID ":=" NUMBER ";" ExpRels ";" Increment BlockStm | FOR ExpRel BlockStm 

Exp -> Exp "+" Term | Exp "-" Term | Term | Increment | Func_call | List_call  

ExpRels -> ExpRel ExpRels | ExpRel

ExpRel -> Exp "==" Exp | 
		  Exp "!=" Exp | 
		  Exp "<" Exp  | 
		  Exp "<=" Exp | 
		  Exp ">" Exp  | 
		  Exp ">=" Exp | 
		  Exp "&&" Exp | 
		  Exp "||" Exp | 
		  "!" Exp

Term -> Term "*" Factor | Term "/" Factor | Term "%" Factor | Factor

Factor -> NUMBER            | 
	      STRING            | 
	      ID                | 
	      "(" Exp ")"       | 
	      ID "[" NUMBER "]" |
	      TRUE 				|
	      FALSE				|
	      RUNE 				|
	      NUMBERFLOAT		|
	      NOTACAOCIENTIFICA |
	      BINARY			|
	      OCTAL 			|
	      HEX   			|
	      SizeofExp

SizeofExp -> SIZEOF "(" Exp ")" | SIZEOF "(" ID ")"

Increment -> ID "++" | ID "--"

Assign -> ID "+=" Exp  | 
		  ID "-=" Exp  |
		  ID "*=" Exp  |
		  ID "/=" Exp  |
		  ID "%=" Exp  |
		  ID "&=" Exp  |
		  ID "|=" Exp  |
		  ID "^=" Exp  |
		  ID "<<=" Exp |
		  ID ">>=" Exp

