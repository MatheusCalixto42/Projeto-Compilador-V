
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ASSIGN BINARY BIT_AND_ASSIGN BIT_LSHIFT_ASSIGN BIT_OR_ASSIGN BIT_RSHIFT_ASSIGN BIT_XOR_ASSIGN BREAK COMMA CONST DECLARE_ASSIGN DECREMENT DIVIDE DIVIDE_ASSIGN DOTDOT ELSE EQ FALSE FN FOR GE GT HEX ID IF IMPORT IN INCREMENT INTERPOLATIONSTRING LBRACE LBRACKET LE LPAREN LT MINUS MINUS_ASSIGN MOD MOD_ASSIGN MUT NEQ NOT NOTACAOCIENTIFICA NUMBER NUMBERFLOAT OCTAL OR PLUS PLUS_ASSIGN RBRACE RBRACKET RETURN RPAREN RUNEVALOR SEMICOLON SIZEOF TIMES TIMES_ASSIGN TRUE WORDprogram : program_import program_items\n                | program_itemsprogram_import : IMPORT ID program_import\n                       | IMPORT IDprogram_items : program_item program_items\n                      | program_itemprogram_item : const_declarationprogram_item : function_definitionconst_declaration : CONST ID DECLARE_ASSIGN expressionfunction_definition : signature block_statement\n                            | signature ID block_statementsignature : FN ID LPAREN sigparams RPAREN\n                  | FN ID LPAREN RPARENsigparams : ID ID\n                  | ID ID COMMA sigparamsparams : expression COMMA params\n               | expressionblock_statement : LBRACE statements RBRACE\n                        | LBRACE RBRACEstatements : statement statements\n                   | statementstatement :  var_statement statement :  var_assignment statement : list_statement statement :  list_assignment statement :  func_call statement :  if_statement statement :  for_statement statement :  increment_rule statement : assignment statement : BREAKstatement :  RETURN expressionvar_statement : ID DECLARE_ASSIGN expression\n                      | MUT ID DECLARE_ASSIGN expressionvar_assignment : ID ASSIGN expressionlist_statement : ID DECLARE_ASSIGN LBRACKET params RBRACKET\n                       | MUT ID DECLARE_ASSIGN LBRACKET params RBRACKET\n                       | MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET IDlist_assignment : ID LBRACKET NUMBER RBRACKET ASSIGN expressionlist_call : ID LBRACKET DOTDOT RBRACKET\n                  | ID LBRACKET NUMBER DOTDOT NUMBER RBRACKETfunc_call : ID LPAREN params RPAREN\n                  | ID LPAREN RPARENif_statement : IF expression_relacional block_statement\n                     | IF expression_relacional block_statement elseopelseop : ELSE if_statementelseop : ELSE block_statement for_statement : FOR ID IN expression block_statement\n                      | FOR ID DECLARE_ASSIGN NUMBER SEMICOLON expression_relacional SEMICOLON increment_rule block_statement\n                      | FOR expression_relacional block_statementexpression : expression PLUS termexpression : expression MINUS termexpression :  increment_ruleexpression : func_callexpression : list_callexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MOD factorterm : factorfactor : IDfactor : NUMBERfactor : NUMBERFLOATfactor : WORDfactor : TRUEfactor : FALSEfactor : RUNEVALORfactor : LPAREN expression RPARENfactor : ID LBRACKET NUMBER RBRACKETfactor : NOTACAOCIENTIFICAfactor : BINARYfactor : OCTALfactor : HEXfactor : size_of_expressionsize_of_expression : SIZEOF LPAREN expression RPARENsize_of_expression : SIZEOF LPAREN ID RPARENincrement_rule : ID INCREMENTincrement_rule : ID DECREMENTexpression_relacional : expression EQ expressionexpression_relacional : expression NEQ expressionexpression_relacional : expression LT expressionexpression_relacional : expression LE expressionexpression_relacional : expression GT expressionexpression_relacional : expression GE expressionexpression_relacional : expression AND expressionexpression_relacional : expression OR expressionexpression_relacional : NOT expressionassignment : ID PLUS_ASSIGN expressionassignment : ID MINUS_ASSIGN expressionassignment : ID TIMES_ASSIGN expressionassignment : ID DIVIDE_ASSIGN expressionassignment : ID MOD_ASSIGN expressionassignment : ID BIT_AND_ASSIGN expressionassignment : ID BIT_OR_ASSIGN expressionassignment : ID BIT_XOR_ASSIGN expressionassignment : ID BIT_LSHIFT_ASSIGN expressionassignment : ID BIT_RSHIFT_ASSIGN expression'
    
_lr_action_items = {'IMPORT':([0,12,],[4,4,]),'CONST':([0,2,5,6,7,12,15,19,21,23,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,68,69,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[8,8,8,-7,-8,-4,-10,-3,-11,-19,-61,-9,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-18,-77,-78,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'FN':([0,2,5,6,7,12,15,19,21,23,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,68,69,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[10,10,10,-7,-8,-4,-10,-3,-11,-19,-61,-9,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-18,-77,-78,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'$end':([1,3,5,6,7,11,13,15,21,23,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,68,69,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[0,-2,-6,-7,-8,-1,-5,-10,-11,-19,-61,-9,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-18,-77,-78,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'ID':([4,8,9,10,17,20,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,88,90,91,92,93,94,96,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,129,132,133,134,135,136,137,138,143,144,145,146,147,159,160,162,164,165,166,167,171,172,173,174,178,179,180,182,183,184,187,],[12,14,16,18,36,41,-19,36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,41,80,41,84,86,-61,-56,-53,-54,-55,41,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-18,-32,41,41,41,-77,-78,41,41,41,41,41,41,41,41,41,41,41,128,-13,133,133,133,133,133,140,-33,41,-35,-43,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,41,-44,41,41,41,41,41,41,41,41,41,-50,-12,-51,-61,-52,-57,-58,-59,-68,-42,41,-34,41,-45,86,-40,-69,-75,-76,-36,41,-46,-47,-48,41,-39,-37,183,-41,-38,185,-49,]),'LBRACE':([9,16,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,81,85,88,102,124,129,132,133,134,135,136,137,138,143,148,149,150,151,152,153,154,155,156,157,160,162,164,165,182,186,],[17,17,-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,17,17,-13,-43,-87,-12,-51,-61,-52,-57,-58,-59,-68,-42,17,-79,-80,-81,-82,-83,-84,-85,-86,17,-40,-69,-75,-76,-41,17,]),'DECLARE_ASSIGN':([14,36,80,84,],[20,64,114,126,]),'RBRACE':([17,22,23,24,25,26,27,28,29,30,31,32,33,34,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,68,69,97,99,102,104,105,106,107,108,109,110,111,112,113,115,127,132,133,134,135,136,137,138,143,145,147,160,162,164,165,166,171,172,173,178,179,182,183,187,],[23,61,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-18,-20,-32,-77,-78,-33,-35,-43,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-44,-50,-51,-61,-52,-57,-58,-59,-68,-42,-34,-45,-40,-69,-75,-76,-36,-46,-47,-48,-39,-37,-41,-38,-49,]),'BREAK':([17,23,24,25,26,27,28,29,30,31,32,33,34,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,63,68,69,97,99,102,104,105,106,107,108,109,110,111,112,113,115,127,132,133,134,135,136,137,138,143,145,147,160,162,164,165,166,171,172,173,178,179,182,183,187,],[34,-19,34,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-18,-32,-77,-78,-33,-35,-43,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-44,-50,-51,-61,-52,-57,-58,-59,-68,-42,-34,-45,-40,-69,-75,-76,-36,-46,-47,-48,-39,-37,-41,-38,-49,]),'RETURN':([17,23,24,25,26,27,28,29,30,31,32,33,34,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,63,68,69,97,99,102,104,105,106,107,108,109,110,111,112,113,115,127,132,133,134,135,136,137,138,143,145,147,160,162,164,165,166,171,172,173,178,179,182,183,187,],[35,-19,35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-18,-32,-77,-78,-33,-35,-43,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-44,-50,-51,-61,-52,-57,-58,-59,-68,-42,-34,-45,-40,-69,-75,-76,-36,-46,-47,-48,-39,-37,-41,-38,-49,]),'MUT':([17,23,24,25,26,27,28,29,30,31,32,33,34,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,63,68,69,97,99,102,104,105,106,107,108,109,110,111,112,113,115,127,132,133,134,135,136,137,138,143,145,147,160,162,164,165,166,171,172,173,178,179,182,183,187,],[37,-19,37,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-18,-32,-77,-78,-33,-35,-43,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-44,-50,-51,-61,-52,-57,-58,-59,-68,-42,-34,-45,-40,-69,-75,-76,-36,-46,-47,-48,-39,-37,-41,-38,-49,]),'IF':([17,23,24,25,26,27,28,29,30,31,32,33,34,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,63,68,69,97,99,102,104,105,106,107,108,109,110,111,112,113,115,127,132,133,134,135,136,137,138,143,145,147,148,160,162,164,165,166,171,172,173,178,179,182,183,187,],[38,-19,38,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-18,-32,-77,-78,-33,-35,-43,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-44,-50,-51,-61,-52,-57,-58,-59,-68,-42,-34,-45,38,-40,-69,-75,-76,-36,-46,-47,-48,-39,-37,-41,-38,-49,]),'FOR':([17,23,24,25,26,27,28,29,30,31,32,33,34,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,63,68,69,97,99,102,104,105,106,107,108,109,110,111,112,113,115,127,132,133,134,135,136,137,138,143,145,147,160,162,164,165,166,171,172,173,178,179,182,183,187,],[39,-19,39,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-18,-32,-77,-78,-33,-35,-43,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-44,-50,-51,-61,-52,-57,-58,-59,-68,-42,-34,-45,-40,-69,-75,-76,-36,-46,-47,-48,-39,-37,-41,-38,-49,]),'LPAREN':([18,20,35,36,38,39,41,47,60,64,65,67,70,71,72,73,74,75,76,77,78,79,83,84,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,140,144,146,167,174,],[40,47,47,67,47,47,67,47,96,47,47,47,47,47,47,47,47,47,47,47,47,47,47,67,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,67,47,47,47,47,]),'NUMBER':([20,35,38,39,47,64,65,66,67,70,71,72,73,74,75,76,77,78,79,83,89,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,126,144,146,161,163,167,174,],[48,48,48,48,48,48,48,100,48,48,48,48,48,48,48,48,48,48,48,48,131,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,158,48,170,176,177,48,48,]),'NUMBERFLOAT':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'WORD':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'TRUE':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'FALSE':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'RUNEVALOR':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NOTACAOCIENTIFICA':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'BINARY':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'OCTAL':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'HEX':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'SIZEOF':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ELSE':([23,61,115,],[-19,-18,148,]),'ASSIGN':([36,142,],[65,167,]),'LBRACKET':([36,41,64,84,114,133,140,],[66,89,98,89,146,163,89,]),'INCREMENT':([36,41,84,140,185,],[68,68,68,68,68,]),'DECREMENT':([36,41,84,140,185,],[69,69,69,69,69,]),'PLUS_ASSIGN':([36,],[70,]),'MINUS_ASSIGN':([36,],[71,]),'TIMES_ASSIGN':([36,],[72,]),'DIVIDE_ASSIGN':([36,],[73,]),'MOD_ASSIGN':([36,],[74,]),'BIT_AND_ASSIGN':([36,],[75,]),'BIT_OR_ASSIGN':([36,],[76,]),'BIT_XOR_ASSIGN':([36,],[77,]),'BIT_LSHIFT_ASSIGN':([36,],[78,]),'BIT_RSHIFT_ASSIGN':([36,],[79,]),'NOT':([38,39,174,],[83,83,83,]),'RPAREN':([40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,67,68,69,87,95,101,102,103,128,132,133,134,135,136,137,138,139,140,143,160,162,164,165,168,175,182,],[88,-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,102,-77,-78,129,138,143,-43,-17,-14,-51,-61,-52,-57,-58,-59,-68,164,165,-42,-40,-69,-75,-76,-16,-15,-41,]),'TIMES':([41,43,48,49,50,51,52,53,54,55,56,57,58,59,84,132,133,134,135,136,137,138,140,162,164,165,170,],[-61,92,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-61,92,-61,92,-57,-58,-59,-68,-61,-69,-75,-76,-62,]),'DIVIDE':([41,43,48,49,50,51,52,53,54,55,56,57,58,59,84,132,133,134,135,136,137,138,140,162,164,165,170,],[-61,93,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-61,93,-61,93,-57,-58,-59,-68,-61,-69,-75,-76,-62,]),'MOD':([41,43,48,49,50,51,52,53,54,55,56,57,58,59,84,132,133,134,135,136,137,138,140,162,164,165,170,],[-61,94,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-61,94,-61,94,-57,-58,-59,-68,-61,-69,-75,-76,-62,]),'PLUS':([41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,63,68,69,82,84,95,97,99,102,103,104,105,106,107,108,109,110,111,112,113,124,132,133,134,135,136,137,138,139,140,143,145,149,150,151,152,153,154,155,156,157,160,162,164,165,170,178,182,],[-61,90,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,90,-77,-78,90,-61,90,90,90,-43,90,90,90,90,90,90,90,90,90,90,90,90,-51,-61,-52,-57,-58,-59,-68,90,-61,-42,90,90,90,90,90,90,90,90,90,90,-40,-69,-75,-76,-62,90,-41,]),'MINUS':([41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,63,68,69,82,84,95,97,99,102,103,104,105,106,107,108,109,110,111,112,113,124,132,133,134,135,136,137,138,139,140,143,145,149,150,151,152,153,154,155,156,157,160,162,164,165,170,178,182,],[-61,91,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,91,-77,-78,91,-61,91,91,91,-43,91,91,91,91,91,91,91,91,91,91,91,91,-51,-61,-52,-57,-58,-59,-68,91,-61,-42,91,91,91,91,91,91,91,91,91,91,-40,-69,-75,-76,-62,91,-41,]),'EQ':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,82,84,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,116,-61,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'NEQ':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,82,84,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,117,-61,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'LT':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,82,84,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,118,-61,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'LE':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,82,84,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,119,-61,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'GT':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,82,84,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,120,-61,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'GE':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,82,84,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,121,-61,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'AND':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,82,84,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,122,-61,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'OR':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,82,84,102,132,133,134,135,136,137,138,143,160,162,164,165,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,123,-61,-43,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-41,]),'COMMA':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,102,103,128,132,133,134,135,136,137,138,143,160,162,164,165,170,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,-43,144,159,-51,-61,-52,-57,-58,-59,-68,-42,-40,-69,-75,-76,-62,-41,]),'SEMICOLON':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,102,124,132,133,134,135,136,137,138,143,149,150,151,152,153,154,155,156,158,160,162,164,165,181,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,-43,-87,-51,-61,-52,-57,-58,-59,-68,-42,-79,-80,-81,-82,-83,-84,-85,-86,174,-40,-69,-75,-76,184,-41,]),'RBRACKET':([41,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,68,69,100,102,103,130,131,132,133,134,135,136,137,138,141,143,160,162,164,165,168,169,170,176,177,182,],[-61,-56,-53,-54,-55,-62,-60,-63,-64,-65,-66,-67,-70,-71,-72,-73,-74,-77,-78,142,-43,-17,160,162,-51,-61,-52,-57,-58,-59,-68,166,-42,-40,-69,-75,-76,-16,179,180,182,162,-41,]),'IN':([84,],[125,]),'DOTDOT':([89,131,],[130,161,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_import':([0,12,],[2,19,]),'program_items':([0,2,5,],[3,11,13,]),'program_item':([0,2,5,],[5,5,5,]),'const_declaration':([0,2,5,],[6,6,6,]),'function_definition':([0,2,5,],[7,7,7,]),'signature':([0,2,5,],[9,9,9,]),'block_statement':([9,16,81,85,148,157,186,],[15,21,115,127,172,173,187,]),'statements':([17,24,],[22,62,]),'statement':([17,24,],[24,24,]),'var_statement':([17,24,],[25,25,]),'var_assignment':([17,24,],[26,26,]),'list_statement':([17,24,],[27,27,]),'list_assignment':([17,24,],[28,28,]),'func_call':([17,20,24,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[29,45,29,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'if_statement':([17,24,148,],[30,30,171,]),'for_statement':([17,24,],[31,31,]),'increment_rule':([17,20,24,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,184,],[32,44,32,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,186,]),'assignment':([17,24,],[33,33,]),'expression':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[42,63,82,82,95,97,99,103,104,105,106,107,108,109,110,111,112,113,124,139,103,145,149,150,151,152,153,154,155,156,157,103,103,178,82,]),'term':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,132,134,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'list_call':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'factor':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,135,136,137,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'size_of_expression':([20,35,38,39,47,64,65,67,70,71,72,73,74,75,76,77,78,79,83,90,91,92,93,94,96,98,114,116,117,118,119,120,121,122,123,125,144,146,167,174,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'expression_relacional':([38,39,174,],[81,85,181,]),'sigparams':([40,159,],[87,175,]),'params':([67,98,144,146,],[101,141,168,169,]),'elseop':([115,],[147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_import program_items','program',2,'p_program','ExpressionLanguageParser.py',6),
  ('program -> program_items','program',1,'p_program','ExpressionLanguageParser.py',7),
  ('program_import -> IMPORT ID program_import','program_import',3,'p_program_import','ExpressionLanguageParser.py',14),
  ('program_import -> IMPORT ID','program_import',2,'p_program_import','ExpressionLanguageParser.py',15),
  ('program_items -> program_item program_items','program_items',2,'p_program_items','ExpressionLanguageParser.py',22),
  ('program_items -> program_item','program_items',1,'p_program_items','ExpressionLanguageParser.py',23),
  ('program_item -> const_declaration','program_item',1,'p_program_item_const','ExpressionLanguageParser.py',30),
  ('program_item -> function_definition','program_item',1,'p_program_item_function','ExpressionLanguageParser.py',34),
  ('const_declaration -> CONST ID DECLARE_ASSIGN expression','const_declaration',4,'p_program_const_declaration_rule','ExpressionLanguageParser.py',38),
  ('function_definition -> signature block_statement','function_definition',2,'p_function_definition','ExpressionLanguageParser.py',42),
  ('function_definition -> signature ID block_statement','function_definition',3,'p_function_definition','ExpressionLanguageParser.py',43),
  ('signature -> FN ID LPAREN sigparams RPAREN','signature',5,'p_signature','ExpressionLanguageParser.py',50),
  ('signature -> FN ID LPAREN RPAREN','signature',4,'p_signature','ExpressionLanguageParser.py',51),
  ('sigparams -> ID ID','sigparams',2,'p_sigparams','ExpressionLanguageParser.py',58),
  ('sigparams -> ID ID COMMA sigparams','sigparams',4,'p_sigparams','ExpressionLanguageParser.py',59),
  ('params -> expression COMMA params','params',3,'p_params','ExpressionLanguageParser.py',66),
  ('params -> expression','params',1,'p_params','ExpressionLanguageParser.py',67),
  ('block_statement -> LBRACE statements RBRACE','block_statement',3,'p_block_statement','ExpressionLanguageParser.py',74),
  ('block_statement -> LBRACE RBRACE','block_statement',2,'p_block_statement','ExpressionLanguageParser.py',75),
  ('statements -> statement statements','statements',2,'p_statements','ExpressionLanguageParser.py',82),
  ('statements -> statement','statements',1,'p_statements','ExpressionLanguageParser.py',83),
  ('statement -> var_statement','statement',1,'p_statement1','ExpressionLanguageParser.py',90),
  ('statement -> var_assignment','statement',1,'p_statement2','ExpressionLanguageParser.py',94),
  ('statement -> list_statement','statement',1,'p_statement3','ExpressionLanguageParser.py',98),
  ('statement -> list_assignment','statement',1,'p_statement4','ExpressionLanguageParser.py',102),
  ('statement -> func_call','statement',1,'p_statement5','ExpressionLanguageParser.py',106),
  ('statement -> if_statement','statement',1,'p_statement6','ExpressionLanguageParser.py',110),
  ('statement -> for_statement','statement',1,'p_statement7','ExpressionLanguageParser.py',114),
  ('statement -> increment_rule','statement',1,'p_statement8','ExpressionLanguageParser.py',118),
  ('statement -> assignment','statement',1,'p_statement9','ExpressionLanguageParser.py',122),
  ('statement -> BREAK','statement',1,'p_statement10','ExpressionLanguageParser.py',126),
  ('statement -> RETURN expression','statement',2,'p_statement11','ExpressionLanguageParser.py',130),
  ('var_statement -> ID DECLARE_ASSIGN expression','var_statement',3,'p_var_declaration','ExpressionLanguageParser.py',134),
  ('var_statement -> MUT ID DECLARE_ASSIGN expression','var_statement',4,'p_var_declaration','ExpressionLanguageParser.py',135),
  ('var_assignment -> ID ASSIGN expression','var_assignment',3,'p_var_assignment','ExpressionLanguageParser.py',142),
  ('list_statement -> ID DECLARE_ASSIGN LBRACKET params RBRACKET','list_statement',5,'p_list_declaration_imutable','ExpressionLanguageParser.py',146),
  ('list_statement -> MUT ID DECLARE_ASSIGN LBRACKET params RBRACKET','list_statement',6,'p_list_declaration_imutable','ExpressionLanguageParser.py',147),
  ('list_statement -> MUT ID DECLARE_ASSIGN LBRACKET NUMBER RBRACKET ID','list_statement',7,'p_list_declaration_imutable','ExpressionLanguageParser.py',148),
  ('list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression','list_assignment',6,'p_list_assignment','ExpressionLanguageParser.py',163),
  ('list_call -> ID LBRACKET DOTDOT RBRACKET','list_call',4,'p_list_call','ExpressionLanguageParser.py',167),
  ('list_call -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET','list_call',6,'p_list_call','ExpressionLanguageParser.py',168),
  ('func_call -> ID LPAREN params RPAREN','func_call',4,'p_func_call','ExpressionLanguageParser.py',179),
  ('func_call -> ID LPAREN RPAREN','func_call',3,'p_func_call','ExpressionLanguageParser.py',180),
  ('if_statement -> IF expression_relacional block_statement','if_statement',3,'p_if_statement','ExpressionLanguageParser.py',187),
  ('if_statement -> IF expression_relacional block_statement elseop','if_statement',4,'p_if_statement','ExpressionLanguageParser.py',188),
  ('elseop -> ELSE if_statement','elseop',2,'p_else','ExpressionLanguageParser.py',195),
  ('elseop -> ELSE block_statement','elseop',2,'p_else2','ExpressionLanguageParser.py',199),
  ('for_statement -> FOR ID IN expression block_statement','for_statement',5,'p_for_statement','ExpressionLanguageParser.py',203),
  ('for_statement -> FOR ID DECLARE_ASSIGN NUMBER SEMICOLON expression_relacional SEMICOLON increment_rule block_statement','for_statement',9,'p_for_statement','ExpressionLanguageParser.py',204),
  ('for_statement -> FOR expression_relacional block_statement','for_statement',3,'p_for_statement','ExpressionLanguageParser.py',205),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','ExpressionLanguageParser.py',214),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','ExpressionLanguageParser.py',218),
  ('expression -> increment_rule','expression',1,'p_expression_increment','ExpressionLanguageParser.py',222),
  ('expression -> func_call','expression',1,'p_expression_func_call','ExpressionLanguageParser.py',226),
  ('expression -> list_call','expression',1,'p_expression_call_list','ExpressionLanguageParser.py',230),
  ('expression -> term','expression',1,'p_expression_single_term','ExpressionLanguageParser.py',234),
  ('term -> term TIMES factor','term',3,'p_term_mult','ExpressionLanguageParser.py',238),
  ('term -> term DIVIDE factor','term',3,'p_term_divide','ExpressionLanguageParser.py',242),
  ('term -> term MOD factor','term',3,'p_term_mod','ExpressionLanguageParser.py',246),
  ('term -> factor','term',1,'p_term_factor','ExpressionLanguageParser.py',250),
  ('factor -> ID','factor',1,'p_factor_id','ExpressionLanguageParser.py',254),
  ('factor -> NUMBER','factor',1,'p_factor_number','ExpressionLanguageParser.py',258),
  ('factor -> NUMBERFLOAT','factor',1,'p_factor_number_float','ExpressionLanguageParser.py',262),
  ('factor -> WORD','factor',1,'p_factor_string','ExpressionLanguageParser.py',266),
  ('factor -> TRUE','factor',1,'p_factor_true','ExpressionLanguageParser.py',270),
  ('factor -> FALSE','factor',1,'p_factor_false','ExpressionLanguageParser.py',274),
  ('factor -> RUNEVALOR','factor',1,'p_factor_rune','ExpressionLanguageParser.py',278),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expression','ExpressionLanguageParser.py',282),
  ('factor -> ID LBRACKET NUMBER RBRACKET','factor',4,'p_factor_list','ExpressionLanguageParser.py',286),
  ('factor -> NOTACAOCIENTIFICA','factor',1,'p_factor_cientific_notation','ExpressionLanguageParser.py',290),
  ('factor -> BINARY','factor',1,'p_factor_binary','ExpressionLanguageParser.py',294),
  ('factor -> OCTAL','factor',1,'p_factor_octal','ExpressionLanguageParser.py',298),
  ('factor -> HEX','factor',1,'p_factor_hex','ExpressionLanguageParser.py',302),
  ('factor -> size_of_expression','factor',1,'p_factor_size_of_expression_rule','ExpressionLanguageParser.py',306),
  ('size_of_expression -> SIZEOF LPAREN expression RPAREN','size_of_expression',4,'p_size_of_expression','ExpressionLanguageParser.py',310),
  ('size_of_expression -> SIZEOF LPAREN ID RPAREN','size_of_expression',4,'p_size_of_type','ExpressionLanguageParser.py',314),
  ('increment_rule -> ID INCREMENT','increment_rule',2,'p_increment_plus','ExpressionLanguageParser.py',318),
  ('increment_rule -> ID DECREMENT','increment_rule',2,'p_increment_minus','ExpressionLanguageParser.py',322),
  ('expression_relacional -> expression EQ expression','expression_relacional',3,'p_expression_relacional_equals','ExpressionLanguageParser.py',326),
  ('expression_relacional -> expression NEQ expression','expression_relacional',3,'p_expression_relacional_not_equals','ExpressionLanguageParser.py',330),
  ('expression_relacional -> expression LT expression','expression_relacional',3,'p_expression_relacional_less_than','ExpressionLanguageParser.py',334),
  ('expression_relacional -> expression LE expression','expression_relacional',3,'p_expression_relacional_less_than_or_equal','ExpressionLanguageParser.py',338),
  ('expression_relacional -> expression GT expression','expression_relacional',3,'p_expression_relacional_greater_than','ExpressionLanguageParser.py',342),
  ('expression_relacional -> expression GE expression','expression_relacional',3,'p_expression_relacional_greater_than_or_equal','ExpressionLanguageParser.py',346),
  ('expression_relacional -> expression AND expression','expression_relacional',3,'p_expression_relacional_and','ExpressionLanguageParser.py',350),
  ('expression_relacional -> expression OR expression','expression_relacional',3,'p_expression_relacional_or','ExpressionLanguageParser.py',354),
  ('expression_relacional -> NOT expression','expression_relacional',2,'p_expression_relacional_not','ExpressionLanguageParser.py',358),
  ('assignment -> ID PLUS_ASSIGN expression','assignment',3,'p_assignment_plus_equals','ExpressionLanguageParser.py',362),
  ('assignment -> ID MINUS_ASSIGN expression','assignment',3,'p_assignment_minus_equal','ExpressionLanguageParser.py',366),
  ('assignment -> ID TIMES_ASSIGN expression','assignment',3,'p_assignment_multiply_equals','ExpressionLanguageParser.py',370),
  ('assignment -> ID DIVIDE_ASSIGN expression','assignment',3,'p_assignment_divide_equals','ExpressionLanguageParser.py',374),
  ('assignment -> ID MOD_ASSIGN expression','assignment',3,'p_assignment_mod_equals','ExpressionLanguageParser.py',378),
  ('assignment -> ID BIT_AND_ASSIGN expression','assignment',3,'p_assignment_and_equals','ExpressionLanguageParser.py',382),
  ('assignment -> ID BIT_OR_ASSIGN expression','assignment',3,'p_assignment_or_equals','ExpressionLanguageParser.py',386),
  ('assignment -> ID BIT_XOR_ASSIGN expression','assignment',3,'p_assignment_exp_equals','ExpressionLanguageParser.py',390),
  ('assignment -> ID BIT_LSHIFT_ASSIGN expression','assignment',3,'p_assignment_lshift','ExpressionLanguageParser.py',394),
  ('assignment -> ID BIT_RSHIFT_ASSIGN expression','assignment',3,'p_assignment_rshift','ExpressionLanguageParser.py',398),
]
