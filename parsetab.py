
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ASSIGN BINARY BIT_AND_ASSIGN BIT_LSHIFT_ASSIGN BIT_OR_ASSIGN BIT_RSHIFT_ASSIGN BIT_XOR_ASSIGN BOOL BREAK COMMA CONST DECLARE_ASSIGN DECREMENT DIVIDE DIVIDE_ASSIGN DOTDOT ELSE EQ F32 F64 FALSE FN FOR GE GT HEX ID IF IMPORT IN INCREMENT INT INTERPOLATIONSTRING LBRACE LBRACKET LE LPAREN LT MAIN MINUS MINUS_ASSIGN MOD MOD_ASSIGN MUT NEQ NOT NOTACAOCIENTIFICA NUMBER NUMBERFLOAT OCTAL OR PLUS PLUS_ASSIGN RBRACE RBRACKET RETURN RPAREN RUNE RUNEVALOR SEMICOLON SIZEOF STRING TIMES TIMES_ASSIGN TRUE WORDprogram : program_Import program_itemsprogram : program_itemsprogram_Import : IMPORT ID program_Importprogram_Import : IMPORT IDprogram_items : program_item program_itemsprogram_items :program_item : const_declarationprogram_item : function_definitionconst_declaration : CONST ID DECLARE_ASSIGN expressionfunction_definition : FN ID LPAREN params RPAREN  block_statement  function_definition : FN ID LPAREN params RPAREN type  block_statement  function_definition : FN MAIN LPAREN RPAREN  block_statement  params : param more_paramsmore_params : COMMA param more_paramsmore_params :param : ID typetype : INTtype : F32type : F64type : STRINGtype : BOOLtype : RUNEblock_statement :  LBRACE statements RBRACEblock_statement : LBRACE RBRACEstatements : statement statementsstatements : statementstatement :  var_statement statement :  var_assignment statement :  func_call statement :  if_statement statement :  for_statement statement : break_statementstatement :  return_statementstatement : list_statement statement :  list_assignment statement :  increment_rule statement : assignment var_statement :  declaration_imutablevar_statement :  MUT ID DECLARE_ASSIGN expressionvar_statement :  CONST ID DECLARE_ASSIGN expression var_assignment :  ID ASSIGN expressionlist_statement : declaration_imutable_listlist_statement : MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKETlist_statement : MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET typelist_assignment : ID LBRACKET NUMBER RBRACKET ASSIGN expressionfunc_call : ID LPAREN id_list RPARENfunc_call : ID LPAREN RPARENfunc_call : func_call_listfunc_call_list : ID LBRACKET DOTDOT RBRACKETfunc_call_list : ID LBRACKET NUMBER DOTDOT NUMBER RBRACKETid_list : expression more_expressionsmore_expressions : COMMA expression more_expressionsmore_expressions :if_statement : IF expression_relacional block_statement if_statement : IF expression_relacional block_statement  elseopelseop : ELSE if_statementelseop : ELSE block_statement for_statement : FOR ID IN expression block_statement for_statement : FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement for_statement : FOR expression_relacional block_statement declaration_imutable : ID DECLARE_ASSIGN expressiondeclaration_imutable_list : ID DECLARE_ASSIGN LBRACKET id_list RBRACKETbreak_statement : BREAKreturn_statement : RETURN expressionexpression : expression PLUS termexpression : expression MINUS termexpression :  increment_ruleexpression : func_callexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MOD factorterm : factorfactor : IDfactor : NUMBERfactor : NUMBERFLOATfactor : WORDfactor : TRUEfactor : FALSEfactor : RUNEVALORfactor : LPAREN expression RPARENfactor : ID LBRACKET NUMBER RBRACKETfactor : NOTACAOCIENTIFICAfactor : BINARYfactor : OCTALfactor : HEXfactor : INTERPOLATIONSTRINGfactor : size_of_expressionsize_of_expression : SIZEOF LPAREN expression RPARENsize_of_expression : SIZEOF LPAREN type RPARENincrement_rule : ID INCREMENTincrement_rule : ID DECREMENTexpression_relacional : expression EQ expressionexpression_relacional : expression NEQ expressionexpression_relacional : expression LT expressionexpression_relacional : expression LE expressionexpression_relacional : expression GT expressionexpression_relacional : expression GE expressionexpression_relacional : expression AND expressionexpression_relacional : expression OR expressionexpression_relacional : NOT expressionassignment : ID PLUS_ASSIGN expressionassignment : ID MINUS_ASSIGN expressionassignment : ID TIMES_ASSIGN expressionassignment : ID DIVIDE_ASSIGN expressionassignment : ID MOD_ASSIGN expressionassignment : ID BIT_AND_ASSIGN expressionassignment : ID BIT_OR_ASSIGN expressionassignment : ID BIT_XOR_ASSIGN expressionassignment : ID BIT_LSHIFT_ASSIGN expressionassignment : ID BIT_RSHIFT_ASSIGN expression'
    
_lr_action_items = {'IMPORT':([0,11,],[4,4,]),'$end':([0,1,2,3,5,6,7,10,11,12,16,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,66,69,73,74,75,76,77,78,79,82,86,108,111,113,115,116,117,119,177,],[-6,0,-6,-2,-6,-7,-8,-1,-4,-5,-3,-74,-9,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-12,-47,-65,-74,-66,-70,-71,-72,-81,-10,-24,-46,-49,-82,-89,-90,-11,-23,-50,]),'CONST':([0,2,5,6,7,11,16,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,66,67,69,73,74,75,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,107,108,111,113,115,116,117,119,142,147,149,150,151,152,153,154,155,156,157,158,159,162,175,177,178,182,183,197,198,199,200,202,203,206,207,],[8,8,8,-7,-8,-4,-3,-74,-9,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-17,-18,-19,-20,-21,-22,-12,102,-47,-65,-74,-66,-70,-71,-72,-81,-10,-24,102,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-63,-42,-46,-49,-82,-89,-90,-11,-23,-64,-41,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-61,-54,-60,-50,-39,-40,-55,-62,-56,-57,-58,-43,-45,-44,-59,]),'FN':([0,2,5,6,7,11,16,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,66,69,73,74,75,76,77,78,79,82,86,108,111,113,115,116,117,119,177,],[9,9,9,-7,-8,-4,-3,-74,-9,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-12,-47,-65,-74,-66,-70,-71,-72,-81,-10,-24,-46,-49,-82,-89,-90,-11,-23,-50,]),'ID':([4,8,9,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,47,49,50,51,52,53,55,57,58,59,60,61,62,65,67,69,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,110,111,113,115,116,119,122,124,125,126,127,128,129,130,131,132,133,134,138,142,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,177,178,179,182,183,196,197,198,199,200,201,202,203,206,207,],[11,13,14,20,41,-74,-69,-67,-68,20,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,20,74,74,74,74,74,20,-17,-18,-19,-20,-21,-22,41,101,-47,-65,-74,-66,-70,-71,-72,-81,-24,101,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,121,135,20,139,-63,20,-42,-46,20,-49,-82,-89,-90,-23,20,20,20,20,20,20,20,20,20,20,20,20,20,-64,20,-41,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-61,20,20,-54,20,20,20,20,20,20,20,20,20,20,20,-60,-50,-39,20,-40,-55,20,-62,-56,-57,-58,205,-43,-45,-44,-59,]),'MAIN':([9,],[15,]),'DECLARE_ASSIGN':([13,101,121,135,139,],[17,134,146,161,173,]),'LPAREN':([14,15,17,20,25,40,47,49,50,51,52,53,55,101,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,139,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[18,19,25,47,25,55,25,25,25,25,25,25,25,47,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,47,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'NUMBER':([17,25,47,48,49,50,51,52,53,55,103,104,106,110,112,114,122,123,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[28,28,28,72,28,28,28,28,28,28,28,28,28,28,144,145,28,148,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'NUMBERFLOAT':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'WORD':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TRUE':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'FALSE':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'RUNEVALOR':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'NOTACAOCIENTIFICA':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'BINARY':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'OCTAL':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'HEX':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'INTERPOLATIONSTRING':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'SIZEOF':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'RPAREN':([19,20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,45,46,47,54,56,57,58,59,60,61,62,64,68,69,70,73,74,75,76,77,78,79,80,81,84,108,109,111,113,115,116,118,143,176,177,],[44,-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,63,-15,-91,-92,69,79,-16,-17,-18,-19,-20,-21,-22,-13,108,-47,-53,-65,-74,-66,-70,-71,-72,-81,115,116,-15,-46,-51,-49,-82,-89,-90,-14,-53,-52,-50,]),'INCREMENT':([20,101,139,205,],[45,45,45,45,]),'DECREMENT':([20,101,139,205,],[46,46,46,46,]),'LBRACKET':([20,74,101,134,139,146,],[48,114,123,160,48,179,]),'TIMES':([20,22,27,28,29,30,31,32,33,34,35,36,37,38,39,73,74,75,76,77,78,79,113,115,116,139,],[-74,51,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,51,-74,51,-70,-71,-72,-81,-82,-89,-90,-74,]),'DIVIDE':([20,22,27,28,29,30,31,32,33,34,35,36,37,38,39,73,74,75,76,77,78,79,113,115,116,139,],[-74,52,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,52,-74,52,-70,-71,-72,-81,-82,-89,-90,-74,]),'MOD':([20,22,27,28,29,30,31,32,33,34,35,36,37,38,39,73,74,75,76,77,78,79,113,115,116,139,],[-74,53,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,53,-74,53,-70,-71,-72,-81,-82,-89,-90,-74,]),'PLUS':([20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,54,69,70,73,74,75,76,77,78,79,80,108,111,113,115,116,137,139,142,143,147,149,150,151,152,153,154,155,156,157,158,159,171,177,178,182,185,186,187,188,189,190,191,192,193,203,],[-74,49,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,49,-47,49,-65,-74,-66,-70,-71,-72,-81,49,-46,-49,-82,-89,-90,49,-74,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-50,49,49,49,49,49,49,49,49,49,49,49,49,]),'MINUS':([20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,54,69,70,73,74,75,76,77,78,79,80,108,111,113,115,116,137,139,142,143,147,149,150,151,152,153,154,155,156,157,158,159,171,177,178,182,185,186,187,188,189,190,191,192,193,203,],[-74,50,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,50,-47,50,-65,-74,-66,-70,-71,-72,-81,50,-46,-49,-82,-89,-90,50,-74,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-50,50,50,50,50,50,50,50,50,50,50,50,50,]),'COMMA':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,43,45,46,56,57,58,59,60,61,62,69,70,73,74,75,76,77,78,79,84,108,111,113,115,116,143,177,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,65,-91,-92,-16,-17,-18,-19,-20,-21,-22,-47,110,-65,-74,-66,-70,-71,-72,-81,65,-46,-49,-82,-89,-90,110,-50,]),'EQ':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,73,74,75,76,77,78,79,108,111,113,115,116,137,139,177,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-47,-65,-74,-66,-70,-71,-72,-81,-46,-49,-82,-89,-90,163,-74,-50,]),'NEQ':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,73,74,75,76,77,78,79,108,111,113,115,116,137,139,177,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-47,-65,-74,-66,-70,-71,-72,-81,-46,-49,-82,-89,-90,164,-74,-50,]),'LT':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,73,74,75,76,77,78,79,108,111,113,115,116,137,139,177,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-47,-65,-74,-66,-70,-71,-72,-81,-46,-49,-82,-89,-90,165,-74,-50,]),'LE':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,73,74,75,76,77,78,79,108,111,113,115,116,137,139,177,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-47,-65,-74,-66,-70,-71,-72,-81,-46,-49,-82,-89,-90,166,-74,-50,]),'GT':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,73,74,75,76,77,78,79,108,111,113,115,116,137,139,177,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-47,-65,-74,-66,-70,-71,-72,-81,-46,-49,-82,-89,-90,167,-74,-50,]),'GE':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,73,74,75,76,77,78,79,108,111,113,115,116,137,139,177,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-47,-65,-74,-66,-70,-71,-72,-81,-46,-49,-82,-89,-90,168,-74,-50,]),'AND':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,73,74,75,76,77,78,79,108,111,113,115,116,137,139,177,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-47,-65,-74,-66,-70,-71,-72,-81,-46,-49,-82,-89,-90,169,-74,-50,]),'OR':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,73,74,75,76,77,78,79,108,111,113,115,116,137,139,177,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-47,-65,-74,-66,-70,-71,-72,-81,-46,-49,-82,-89,-90,170,-74,-50,]),'MUT':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,67,69,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,107,108,111,113,115,116,119,142,147,149,150,151,152,153,154,155,156,157,158,159,162,175,177,178,182,183,197,198,199,200,202,203,206,207,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-17,-18,-19,-20,-21,-22,100,-47,-65,-74,-66,-70,-71,-72,-81,-24,100,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-63,-42,-46,-49,-82,-89,-90,-23,-64,-41,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-61,-54,-60,-50,-39,-40,-55,-62,-56,-57,-58,-43,-45,-44,-59,]),'IF':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,67,69,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,107,108,111,113,115,116,119,142,147,149,150,151,152,153,154,155,156,157,158,159,162,175,177,178,182,183,184,197,198,199,200,202,203,206,207,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-17,-18,-19,-20,-21,-22,103,-47,-65,-74,-66,-70,-71,-72,-81,-24,103,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-63,-42,-46,-49,-82,-89,-90,-23,-64,-41,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-61,-54,-60,-50,-39,-40,-55,103,-62,-56,-57,-58,-43,-45,-44,-59,]),'FOR':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,67,69,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,107,108,111,113,115,116,119,142,147,149,150,151,152,153,154,155,156,157,158,159,162,175,177,178,182,183,197,198,199,200,202,203,206,207,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-17,-18,-19,-20,-21,-22,104,-47,-65,-74,-66,-70,-71,-72,-81,-24,104,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-63,-42,-46,-49,-82,-89,-90,-23,-64,-41,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-61,-54,-60,-50,-39,-40,-55,-62,-56,-57,-58,-43,-45,-44,-59,]),'BREAK':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,67,69,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,107,108,111,113,115,116,119,142,147,149,150,151,152,153,154,155,156,157,158,159,162,175,177,178,182,183,197,198,199,200,202,203,206,207,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-17,-18,-19,-20,-21,-22,105,-47,-65,-74,-66,-70,-71,-72,-81,-24,105,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-63,-42,-46,-49,-82,-89,-90,-23,-64,-41,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-61,-54,-60,-50,-39,-40,-55,-62,-56,-57,-58,-43,-45,-44,-59,]),'RETURN':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,67,69,73,74,75,76,77,78,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,107,108,111,113,115,116,119,142,147,149,150,151,152,153,154,155,156,157,158,159,162,175,177,178,182,183,197,198,199,200,202,203,206,207,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-17,-18,-19,-20,-21,-22,106,-47,-65,-74,-66,-70,-71,-72,-81,-24,106,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-63,-42,-46,-49,-82,-89,-90,-23,-64,-41,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-61,-54,-60,-50,-39,-40,-55,-62,-56,-57,-58,-43,-45,-44,-59,]),'RBRACE':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,67,69,73,74,75,76,77,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,107,108,111,113,115,116,119,120,142,147,149,150,151,152,153,154,155,156,157,158,159,162,175,177,178,182,183,197,198,199,200,202,203,206,207,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-17,-18,-19,-20,-21,-22,86,-47,-65,-74,-66,-70,-71,-72,-81,119,-24,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-63,-42,-46,-49,-82,-89,-90,-23,-25,-64,-41,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-61,-54,-60,-50,-39,-40,-55,-62,-56,-57,-58,-43,-45,-44,-59,]),'RBRACKET':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,70,71,72,73,74,75,76,77,78,79,108,109,111,113,115,116,143,144,145,148,176,177,181,195,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-47,-53,111,113,-65,-74,-66,-70,-71,-72,-81,-46,-51,-49,-82,-89,-90,-53,177,113,180,-52,-50,197,202,]),'LBRACE':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,57,58,59,60,61,62,63,69,73,74,75,76,77,78,79,83,108,111,113,115,116,136,141,171,177,184,185,186,187,188,189,190,191,192,193,204,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,67,-91,-92,-17,-18,-19,-20,-21,-22,67,-47,-65,-74,-66,-70,-71,-72,-81,67,-46,-49,-82,-89,-90,67,67,-101,-50,67,-93,-94,-95,-96,-97,-98,-99,-100,67,67,]),'SEMICOLON':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,69,73,74,75,76,77,78,79,108,111,113,115,116,140,159,171,177,185,186,187,188,189,190,191,192,194,],[-74,-69,-67,-68,-48,-73,-75,-76,-77,-78,-79,-80,-83,-84,-85,-86,-87,-88,-91,-92,-47,-65,-74,-66,-70,-71,-72,-81,-46,-49,-82,-89,-90,174,-61,-101,-50,-93,-94,-95,-96,-97,-98,-99,-100,201,]),'INT':([41,55,63,202,],[57,57,57,57,]),'F32':([41,55,63,202,],[58,58,58,58,]),'F64':([41,55,63,202,],[59,59,59,59,]),'STRING':([41,55,63,202,],[60,60,60,60,]),'BOOL':([41,55,63,202,],[61,61,61,61,]),'RUNE':([41,55,63,202,],[62,62,62,62,]),'DOTDOT':([48,72,123,148,],[71,112,71,112,]),'ELSE':([86,119,162,],[-24,-23,184,]),'ASSIGN':([101,180,],[122,196,]),'PLUS_ASSIGN':([101,],[124,]),'MINUS_ASSIGN':([101,],[125,]),'TIMES_ASSIGN':([101,],[126,]),'DIVIDE_ASSIGN':([101,],[127,]),'MOD_ASSIGN':([101,],[128,]),'BIT_AND_ASSIGN':([101,],[129,]),'BIT_OR_ASSIGN':([101,],[130,]),'BIT_XOR_ASSIGN':([101,],[131,]),'BIT_LSHIFT_ASSIGN':([101,],[132,]),'BIT_RSHIFT_ASSIGN':([101,],[133,]),'NOT':([103,104,174,],[138,138,138,]),'IN':([139,],[172,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_Import':([0,11,],[2,16,]),'program_items':([0,2,5,],[3,10,12,]),'program_item':([0,2,5,],[5,5,5,]),'const_declaration':([0,2,5,],[6,6,6,]),'function_definition':([0,2,5,],[7,7,7,]),'expression':([17,25,47,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[21,54,70,80,137,137,142,143,147,149,150,151,152,153,154,155,156,157,158,159,171,178,70,182,185,186,187,188,189,190,191,192,193,159,137,70,203,]),'term':([17,25,47,49,50,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[22,22,22,73,75,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'increment_rule':([17,25,47,55,67,87,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,201,],[23,23,23,23,97,97,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,204,]),'func_call':([17,25,47,55,67,87,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[24,24,24,24,90,90,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'func_call_list':([17,25,47,55,67,87,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'factor':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[27,27,27,27,27,76,77,78,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'size_of_expression':([17,25,47,49,50,51,52,53,55,103,104,106,110,122,124,125,126,127,128,129,130,131,132,133,134,138,146,160,161,163,164,165,166,167,168,169,170,172,173,174,179,196,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'params':([18,],[42,]),'param':([18,65,],[43,84,]),'type':([41,55,63,202,],[56,81,83,206,]),'more_params':([43,84,],[64,118,]),'block_statement':([44,63,83,136,141,184,193,204,],[66,82,117,162,175,199,200,207,]),'id_list':([47,160,179,],[68,181,195,]),'statements':([67,87,],[85,120,]),'statement':([67,87,],[87,87,]),'var_statement':([67,87,],[88,88,]),'var_assignment':([67,87,],[89,89,]),'if_statement':([67,87,184,],[91,91,198,]),'for_statement':([67,87,],[92,92,]),'break_statement':([67,87,],[93,93,]),'return_statement':([67,87,],[94,94,]),'list_statement':([67,87,],[95,95,]),'list_assignment':([67,87,],[96,96,]),'assignment':([67,87,],[98,98,]),'declaration_imutable':([67,87,104,],[99,99,140,]),'declaration_imutable_list':([67,87,],[107,107,]),'more_expressions':([70,143,],[109,176,]),'expression_relacional':([103,104,174,],[136,141,194,]),'elseop':([162,],[183,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_Import program_items','program',2,'p_program1','ExpressionLanguageParser.py',6),
  ('program -> program_items','program',1,'p_program2','ExpressionLanguageParser.py',10),
  ('program_Import -> IMPORT ID program_Import','program_Import',3,'p_program_import1','ExpressionLanguageParser.py',14),
  ('program_Import -> IMPORT ID','program_Import',2,'p_program_import2','ExpressionLanguageParser.py',18),
  ('program_items -> program_item program_items','program_items',2,'p_program_items_multiple','ExpressionLanguageParser.py',22),
  ('program_items -> <empty>','program_items',0,'p_program_items_empty','ExpressionLanguageParser.py',26),
  ('program_item -> const_declaration','program_item',1,'p_program_item_const','ExpressionLanguageParser.py',30),
  ('program_item -> function_definition','program_item',1,'p_program_item_function','ExpressionLanguageParser.py',34),
  ('const_declaration -> CONST ID DECLARE_ASSIGN expression','const_declaration',4,'p_program_const_declaration_rule','ExpressionLanguageParser.py',38),
  ('function_definition -> FN ID LPAREN params RPAREN block_statement','function_definition',6,'p_function_definition1','ExpressionLanguageParser.py',42),
  ('function_definition -> FN ID LPAREN params RPAREN type block_statement','function_definition',7,'p_function_definition2','ExpressionLanguageParser.py',46),
  ('function_definition -> FN MAIN LPAREN RPAREN block_statement','function_definition',5,'p_function_definition3','ExpressionLanguageParser.py',50),
  ('params -> param more_params','params',2,'p_params','ExpressionLanguageParser.py',54),
  ('more_params -> COMMA param more_params','more_params',3,'p_more_param','ExpressionLanguageParser.py',59),
  ('more_params -> <empty>','more_params',0,'p_more_param_empty','ExpressionLanguageParser.py',64),
  ('param -> ID type','param',2,'p_param','ExpressionLanguageParser.py',69),
  ('type -> INT','type',1,'p_type1','ExpressionLanguageParser.py',73),
  ('type -> F32','type',1,'p_type2','ExpressionLanguageParser.py',77),
  ('type -> F64','type',1,'p_type3','ExpressionLanguageParser.py',81),
  ('type -> STRING','type',1,'p_type4','ExpressionLanguageParser.py',85),
  ('type -> BOOL','type',1,'p_type5','ExpressionLanguageParser.py',89),
  ('type -> RUNE','type',1,'p_type6','ExpressionLanguageParser.py',93),
  ('block_statement -> LBRACE statements RBRACE','block_statement',3,'p_block_statement','ExpressionLanguageParser.py',97),
  ('block_statement -> LBRACE RBRACE','block_statement',2,'p_none_block_statement','ExpressionLanguageParser.py',101),
  ('statements -> statement statements','statements',2,'p_multiple_statement','ExpressionLanguageParser.py',105),
  ('statements -> statement','statements',1,'p_single_statement','ExpressionLanguageParser.py',109),
  ('statement -> var_statement','statement',1,'p_statement','ExpressionLanguageParser.py',113),
  ('statement -> var_assignment','statement',1,'p_statement2','ExpressionLanguageParser.py',117),
  ('statement -> func_call','statement',1,'p_statement3','ExpressionLanguageParser.py',121),
  ('statement -> if_statement','statement',1,'p_statement4','ExpressionLanguageParser.py',125),
  ('statement -> for_statement','statement',1,'p_statement5','ExpressionLanguageParser.py',129),
  ('statement -> break_statement','statement',1,'p_break_statement_rule','ExpressionLanguageParser.py',133),
  ('statement -> return_statement','statement',1,'p_statement6','ExpressionLanguageParser.py',137),
  ('statement -> list_statement','statement',1,'p_statement8','ExpressionLanguageParser.py',141),
  ('statement -> list_assignment','statement',1,'p_statement9','ExpressionLanguageParser.py',145),
  ('statement -> increment_rule','statement',1,'p_statement10','ExpressionLanguageParser.py',149),
  ('statement -> assignment','statement',1,'p_statement_assignment','ExpressionLanguageParser.py',153),
  ('var_statement -> declaration_imutable','var_statement',1,'p_var_declaration','ExpressionLanguageParser.py',157),
  ('var_statement -> MUT ID DECLARE_ASSIGN expression','var_statement',4,'p_var_declaration2','ExpressionLanguageParser.py',161),
  ('var_statement -> CONST ID DECLARE_ASSIGN expression','var_statement',4,'p_var_declaration3','ExpressionLanguageParser.py',165),
  ('var_assignment -> ID ASSIGN expression','var_assignment',3,'p_var_assignment','ExpressionLanguageParser.py',169),
  ('list_statement -> declaration_imutable_list','list_statement',1,'p_list_declaration_imutable','ExpressionLanguageParser.py',173),
  ('list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET','list_statement',6,'p_list_declaration_mutable','ExpressionLanguageParser.py',177),
  ('list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type','list_statement',7,'p_list_declaration_mutable_list_lenght_definition','ExpressionLanguageParser.py',181),
  ('list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression','list_assignment',6,'p_list_assignment','ExpressionLanguageParser.py',185),
  ('func_call -> ID LPAREN id_list RPAREN','func_call',4,'p_func_call','ExpressionLanguageParser.py',189),
  ('func_call -> ID LPAREN RPAREN','func_call',3,'p_func_call_empty','ExpressionLanguageParser.py',193),
  ('func_call -> func_call_list','func_call',1,'p_func_call_list','ExpressionLanguageParser.py',197),
  ('func_call_list -> ID LBRACKET DOTDOT RBRACKET','func_call_list',4,'p_func_call_list_all','ExpressionLanguageParser.py',201),
  ('func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET','func_call_list',6,'p_func_call_list_range','ExpressionLanguageParser.py',206),
  ('id_list -> expression more_expressions','id_list',2,'p_id_list','ExpressionLanguageParser.py',214),
  ('more_expressions -> COMMA expression more_expressions','more_expressions',3,'p_more_expression','ExpressionLanguageParser.py',218),
  ('more_expressions -> <empty>','more_expressions',0,'p_more_expression_empty','ExpressionLanguageParser.py',223),
  ('if_statement -> IF expression_relacional block_statement','if_statement',3,'p_if_statement','ExpressionLanguageParser.py',227),
  ('if_statement -> IF expression_relacional block_statement elseop','if_statement',4,'p_if_statement_else','ExpressionLanguageParser.py',231),
  ('elseop -> ELSE if_statement','elseop',2,'p_else','ExpressionLanguageParser.py',235),
  ('elseop -> ELSE block_statement','elseop',2,'p_else2','ExpressionLanguageParser.py',239),
  ('for_statement -> FOR ID IN expression block_statement','for_statement',5,'p_for_each_statement','ExpressionLanguageParser.py',243),
  ('for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule block_statement','for_statement',7,'p_for_statement','ExpressionLanguageParser.py',247),
  ('for_statement -> FOR expression_relacional block_statement','for_statement',3,'p_for_statement2','ExpressionLanguageParser.py',251),
  ('declaration_imutable -> ID DECLARE_ASSIGN expression','declaration_imutable',3,'p_declaration_imutable','ExpressionLanguageParser.py',255),
  ('declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET','declaration_imutable_list',5,'p_declaration_imutable_list','ExpressionLanguageParser.py',259),
  ('break_statement -> BREAK','break_statement',1,'p_break_only','ExpressionLanguageParser.py',263),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','ExpressionLanguageParser.py',267),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','ExpressionLanguageParser.py',271),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','ExpressionLanguageParser.py',275),
  ('expression -> increment_rule','expression',1,'p_expression_increment','ExpressionLanguageParser.py',279),
  ('expression -> func_call','expression',1,'p_expression_func_call','ExpressionLanguageParser.py',283),
  ('expression -> term','expression',1,'p_expression_term','ExpressionLanguageParser.py',287),
  ('term -> term TIMES factor','term',3,'p_term_mult','ExpressionLanguageParser.py',291),
  ('term -> term DIVIDE factor','term',3,'p_term_divide','ExpressionLanguageParser.py',295),
  ('term -> term MOD factor','term',3,'p_term_mod','ExpressionLanguageParser.py',299),
  ('term -> factor','term',1,'p_term_factor','ExpressionLanguageParser.py',303),
  ('factor -> ID','factor',1,'p_factor_id','ExpressionLanguageParser.py',307),
  ('factor -> NUMBER','factor',1,'p_factor_number','ExpressionLanguageParser.py',311),
  ('factor -> NUMBERFLOAT','factor',1,'p_factor_number_float','ExpressionLanguageParser.py',315),
  ('factor -> WORD','factor',1,'p_factor_string','ExpressionLanguageParser.py',319),
  ('factor -> TRUE','factor',1,'p_factor_true','ExpressionLanguageParser.py',323),
  ('factor -> FALSE','factor',1,'p_factor_false','ExpressionLanguageParser.py',327),
  ('factor -> RUNEVALOR','factor',1,'p_factor_rune','ExpressionLanguageParser.py',331),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expression','ExpressionLanguageParser.py',335),
  ('factor -> ID LBRACKET NUMBER RBRACKET','factor',4,'p_factor_list','ExpressionLanguageParser.py',339),
  ('factor -> NOTACAOCIENTIFICA','factor',1,'p_factor_cientific_notation','ExpressionLanguageParser.py',343),
  ('factor -> BINARY','factor',1,'p_factor_binary','ExpressionLanguageParser.py',347),
  ('factor -> OCTAL','factor',1,'p_factor_octal','ExpressionLanguageParser.py',351),
  ('factor -> HEX','factor',1,'p_factor_hex','ExpressionLanguageParser.py',355),
  ('factor -> INTERPOLATIONSTRING','factor',1,'p_factor_interpolation_string','ExpressionLanguageParser.py',359),
  ('factor -> size_of_expression','factor',1,'p_factor_size_of_expression_rule','ExpressionLanguageParser.py',363),
  ('size_of_expression -> SIZEOF LPAREN expression RPAREN','size_of_expression',4,'p_size_of_expression','ExpressionLanguageParser.py',367),
  ('size_of_expression -> SIZEOF LPAREN type RPAREN','size_of_expression',4,'p_size_of_type','ExpressionLanguageParser.py',371),
  ('increment_rule -> ID INCREMENT','increment_rule',2,'p_increment_plus','ExpressionLanguageParser.py',375),
  ('increment_rule -> ID DECREMENT','increment_rule',2,'p_increment_minus','ExpressionLanguageParser.py',379),
  ('expression_relacional -> expression EQ expression','expression_relacional',3,'p_expression_relacional_equals','ExpressionLanguageParser.py',383),
  ('expression_relacional -> expression NEQ expression','expression_relacional',3,'p_expression_relacional_not_equals','ExpressionLanguageParser.py',387),
  ('expression_relacional -> expression LT expression','expression_relacional',3,'p_expression_relacional_less_than','ExpressionLanguageParser.py',391),
  ('expression_relacional -> expression LE expression','expression_relacional',3,'p_expression_relacional_less_than_or_equal','ExpressionLanguageParser.py',395),
  ('expression_relacional -> expression GT expression','expression_relacional',3,'p_expression_relacional_greater_than','ExpressionLanguageParser.py',399),
  ('expression_relacional -> expression GE expression','expression_relacional',3,'p_expression_relacional_greater_than_or_equal','ExpressionLanguageParser.py',403),
  ('expression_relacional -> expression AND expression','expression_relacional',3,'p_expression_relacional_and','ExpressionLanguageParser.py',407),
  ('expression_relacional -> expression OR expression','expression_relacional',3,'p_expression_relacional_or','ExpressionLanguageParser.py',411),
  ('expression_relacional -> NOT expression','expression_relacional',2,'p_expression_relacional_not','ExpressionLanguageParser.py',415),
  ('assignment -> ID PLUS_ASSIGN expression','assignment',3,'p_assignment_plus_equals','ExpressionLanguageParser.py',419),
  ('assignment -> ID MINUS_ASSIGN expression','assignment',3,'p_assignment_minus_equal','ExpressionLanguageParser.py',423),
  ('assignment -> ID TIMES_ASSIGN expression','assignment',3,'p_assignment_multiply_equals','ExpressionLanguageParser.py',427),
  ('assignment -> ID DIVIDE_ASSIGN expression','assignment',3,'p_assignment_divide_equals','ExpressionLanguageParser.py',431),
  ('assignment -> ID MOD_ASSIGN expression','assignment',3,'p_assignment_mod_equals','ExpressionLanguageParser.py',435),
  ('assignment -> ID BIT_AND_ASSIGN expression','assignment',3,'p_assignment_and_equals','ExpressionLanguageParser.py',439),
  ('assignment -> ID BIT_OR_ASSIGN expression','assignment',3,'p_assignment_or_equals','ExpressionLanguageParser.py',443),
  ('assignment -> ID BIT_XOR_ASSIGN expression','assignment',3,'p_assignment_exp_equals','ExpressionLanguageParser.py',447),
  ('assignment -> ID BIT_LSHIFT_ASSIGN expression','assignment',3,'p_assignment_lshift','ExpressionLanguageParser.py',451),
  ('assignment -> ID BIT_RSHIFT_ASSIGN expression','assignment',3,'p_assignment_rshift','ExpressionLanguageParser.py',455),
]
