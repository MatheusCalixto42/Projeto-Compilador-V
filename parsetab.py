
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND AS ASPASDUPLAS ASPASSIMPLES ASSERT ASSIGN BINARY BIT_AND BIT_AND_ASSIGN BIT_LSHIFT_ASSIGN BIT_NOT BIT_OR BIT_OR_ASSIGN BIT_RSHIFT_ASSIGN BIT_XOR BIT_XOR_ASSIGN BOOL BREAK COLON COMMA CONST CONTINUE DECLARE_ASSIGN DECREMENT DEFER DIVIDE DIVIDE_ASSIGN DOLLAR DOT DOTDOT ELSE ENUM EQ EXCLAMATION F32 F64 FALSE FN FOR GE GLOBAL GT ID IF IMPORT IN INCREMENT INT IS ISREFTYPE LBRACE LBRACKET LE LPAREN LSHIFT LT MAIN MATCH MINUS MINUS_ASSIGN MOD MOD_ASSIGN MUT NEQ NONE NOT NOTACAOCIENTIFICA NUMBER NUMBERFLOAT OCTALHEX OR PLUS PLUS_ASSIGN QUESTION RBRACE RBRACKET RETURN RPAREN RSHIFT RUNE SEMICOLON SIZEOF STRING TIMES TIMES_ASSIGN TRUE TYPE TYPEOF UNION UNSAFEprogram : program_Import function_definitionprogram : function_definitionprogram_Import : IMPORT ID program_Importprogram_Import : IMPORT IDfunction_definition : FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definitionfunction_definition : FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definitionfunction_definition : FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_mainfunction_definition_without_main : FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_mainfunction_definition_without_main : FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_mainfunction_definition_without_main : params : param more_paramsmore_params : COMMA param more_paramsmore_params :param : ID typetype : INTtype : F32type : F64type : STRINGtype : BOOLtype : RUNEblock_statement :  statement statement :  var_statement statementstatement :  var_assignment statementstatement :  func_call statementstatement :  if_statement statementstatement :  for_statement statementstatement :  return_statementstatement : var_statement :  declaration_imutablevar_statement :  MUT ID DECLARE_ASSIGN expressionvar_statement :  CONST ID DECLARE_ASSIGN expression var_assignment :  ID ASSIGN expressionfunc_call : ID LPAREN id_list RPARENfunc_call : ID LPAREN RPARENid_list : expression more_expressionsmore_expressions : COMMA expression more_expressionsmore_expressions :if_statement : IF expression_relacional LBRACE statement RBRACEif_statement : IF expression_relacional LBRACE statement RBRACE elseopelseop : ELSE if_statementelseop : ELSE LBRACE statement RBRACEfor_statement : FOR ID IN expression LBRACE statement RBRACEfor_statement : FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE statement RBRACEfor_statement : FOR expression_relacional LBRACE statement RBRACEdeclaration_imutable : ID DECLARE_ASSIGN expressionreturn_statement : RETURN expressionexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MOD factorterm : factorfactor : IDfactor : NUMBERfactor : STRINGfactor : TRUEfactor : FALSEfactor : RUNEfactor : LPAREN expression RPARENincrement : ID PLUS PLUSincrement : ID MINUS MINUSexpression_relacional : expression EQ expressionexpression_relacional : expression NEQ expressionexpression_relacional : expression LT expressionexpression_relacional : expression LE expressionexpression_relacional : expression GT expressionexpression_relacional : expression GE expressionexpression_relacional : expression AND expressionexpression_relacional : expression OR expressionexpression_relacional : NOT expression'
    
_lr_action_items = {'IMPORT':([0,7,],[4,4,]),'FN':([0,2,7,10,49,76,107,163,166,],[5,5,-4,-3,78,5,5,78,78,]),'$end':([1,3,6,49,79,106,132,163,165,166,167,],[0,-2,-1,-10,-7,-5,-6,-10,-8,-10,-9,]),'ID':([4,5,11,26,27,28,33,34,35,36,37,39,40,42,43,44,45,47,56,57,58,62,63,64,65,66,67,68,69,70,71,78,80,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,103,104,105,109,110,112,113,123,124,125,126,127,128,133,135,136,137,138,141,147,148,149,150,153,160,161,162,],[7,8,13,13,41,41,41,41,41,41,41,-29,55,59,65,72,65,41,65,65,65,65,-49,-53,-54,-55,-56,-57,-58,-59,65,108,65,-32,-34,-45,65,41,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,41,-30,-33,65,-31,-47,-48,-50,-51,-52,-60,13,-38,41,145,-44,-39,-40,41,-42,41,41,41,-41,-43,]),'MAIN':([5,],[9,]),'LPAREN':([8,9,41,43,44,45,56,57,58,62,71,80,86,88,89,90,91,92,93,94,95,96,97,99,100,101,103,104,108,112,],[11,12,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,133,71,]),'RPAREN':([12,14,15,17,18,19,20,21,22,23,25,30,48,57,63,64,65,66,67,68,69,70,82,84,102,111,123,124,125,126,127,128,134,139,140,],[16,24,-13,-14,-15,-16,-17,-18,-19,-20,-11,-13,-12,83,-49,-53,-54,-55,-56,-57,-58,-59,110,-37,128,-35,-47,-48,-50,-51,-52,-60,-37,146,-36,]),'INT':([13,24,146,],[18,18,18,]),'F32':([13,24,146,],[19,19,19,]),'F64':([13,24,146,],[20,20,20,]),'STRING':([13,24,43,44,45,56,57,58,62,71,80,86,88,89,90,91,92,93,94,95,96,97,99,100,101,103,104,112,146,],[21,21,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,21,]),'BOOL':([13,24,146,],[22,22,22,]),'RUNE':([13,24,43,44,45,56,57,58,62,71,80,86,88,89,90,91,92,93,94,95,96,97,99,100,101,103,104,112,146,],[23,23,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,23,]),'COMMA':([15,17,18,19,20,21,22,23,30,63,64,65,66,67,68,69,70,84,123,124,125,126,127,128,134,],[26,-14,-15,-16,-17,-18,-19,-20,26,-49,-53,-54,-55,-56,-57,-58,-59,112,-47,-48,-50,-51,-52,-60,112,]),'LBRACE':([16,18,19,20,21,22,23,24,29,60,63,64,65,66,67,68,69,70,74,98,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,142,144,146,154,157,158,],[27,-15,-16,-17,-18,-19,-20,28,47,87,-49,-53,-54,-55,-56,-57,-58,-59,105,-71,-63,-64,-65,-66,-67,-68,-69,-70,-47,-48,-50,-51,-52,-60,136,148,150,153,160,-61,-62,]),'RBRACE':([27,28,31,32,33,34,35,36,37,38,39,46,47,50,51,52,53,54,63,64,65,66,67,68,69,70,75,77,81,83,85,87,105,109,110,113,114,123,124,125,126,127,128,131,135,136,138,141,143,147,148,149,150,153,155,156,159,160,161,162,164,],[-28,-28,49,-21,-28,-28,-28,-28,-28,-27,-29,76,-28,-22,-23,-24,-25,-26,-49,-53,-54,-55,-56,-57,-58,-59,-46,107,-32,-34,-45,-28,-28,-30,-33,-31,135,-47,-48,-50,-51,-52,-60,138,-38,-28,-44,-39,149,-40,-28,-42,-28,-28,161,162,163,-28,-41,-43,166,]),'MUT':([27,28,33,34,35,36,37,39,47,63,64,65,66,67,68,69,70,81,83,85,87,105,109,110,113,123,124,125,126,127,128,135,136,138,141,147,148,149,150,153,160,161,162,],[40,40,40,40,40,40,40,-29,40,-49,-53,-54,-55,-56,-57,-58,-59,-32,-34,-45,40,40,-30,-33,-31,-47,-48,-50,-51,-52,-60,-38,40,-44,-39,-40,40,-42,40,40,40,-41,-43,]),'CONST':([27,28,33,34,35,36,37,39,47,63,64,65,66,67,68,69,70,81,83,85,87,105,109,110,113,123,124,125,126,127,128,135,136,138,141,147,148,149,150,153,160,161,162,],[42,42,42,42,42,42,42,-29,42,-49,-53,-54,-55,-56,-57,-58,-59,-32,-34,-45,42,42,-30,-33,-31,-47,-48,-50,-51,-52,-60,-38,42,-44,-39,-40,42,-42,42,42,42,-41,-43,]),'IF':([27,28,33,34,35,36,37,39,47,63,64,65,66,67,68,69,70,81,83,85,87,105,109,110,113,123,124,125,126,127,128,135,136,138,141,142,147,148,149,150,153,160,161,162,],[43,43,43,43,43,43,43,-29,43,-49,-53,-54,-55,-56,-57,-58,-59,-32,-34,-45,43,43,-30,-33,-31,-47,-48,-50,-51,-52,-60,-38,43,-44,-39,43,-40,43,-42,43,43,43,-41,-43,]),'FOR':([27,28,33,34,35,36,37,39,47,63,64,65,66,67,68,69,70,81,83,85,87,105,109,110,113,123,124,125,126,127,128,135,136,138,141,147,148,149,150,153,160,161,162,],[44,44,44,44,44,44,44,-29,44,-49,-53,-54,-55,-56,-57,-58,-59,-32,-34,-45,44,44,-30,-33,-31,-47,-48,-50,-51,-52,-60,-38,44,-44,-39,-40,44,-42,44,44,44,-41,-43,]),'RETURN':([27,28,33,34,35,36,37,39,47,63,64,65,66,67,68,69,70,81,83,85,87,105,109,110,113,123,124,125,126,127,128,135,136,138,141,147,148,149,150,153,160,161,162,],[45,45,45,45,45,45,45,-29,45,-49,-53,-54,-55,-56,-57,-58,-59,-32,-34,-45,45,45,-30,-33,-31,-47,-48,-50,-51,-52,-60,-38,45,-44,-39,-40,45,-42,45,45,45,-41,-43,]),'ASSIGN':([41,],[56,]),'DECLARE_ASSIGN':([41,55,59,72,],[58,80,86,58,]),'NOT':([43,44,104,],[62,62,62,]),'NUMBER':([43,44,45,56,57,58,62,71,80,86,88,89,90,91,92,93,94,95,96,97,99,100,101,103,104,112,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'TRUE':([43,44,45,56,57,58,62,71,80,86,88,89,90,91,92,93,94,95,96,97,99,100,101,103,104,112,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'FALSE':([43,44,45,56,57,58,62,71,80,86,88,89,90,91,92,93,94,95,96,97,99,100,101,103,104,112,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'EQ':([61,63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[88,-49,-53,-54,-55,-56,-57,-58,-59,-54,-47,-48,-50,-51,-52,-60,]),'NEQ':([61,63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[89,-49,-53,-54,-55,-56,-57,-58,-59,-54,-47,-48,-50,-51,-52,-60,]),'LT':([61,63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[90,-49,-53,-54,-55,-56,-57,-58,-59,-54,-47,-48,-50,-51,-52,-60,]),'LE':([61,63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[91,-49,-53,-54,-55,-56,-57,-58,-59,-54,-47,-48,-50,-51,-52,-60,]),'GT':([61,63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[92,-49,-53,-54,-55,-56,-57,-58,-59,-54,-47,-48,-50,-51,-52,-60,]),'GE':([61,63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[93,-49,-53,-54,-55,-56,-57,-58,-59,-54,-47,-48,-50,-51,-52,-60,]),'AND':([61,63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[94,-49,-53,-54,-55,-56,-57,-58,-59,-54,-47,-48,-50,-51,-52,-60,]),'OR':([61,63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[95,-49,-53,-54,-55,-56,-57,-58,-59,-54,-47,-48,-50,-51,-52,-60,]),'PLUS':([61,63,64,65,66,67,68,69,70,72,75,81,84,85,98,102,109,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,145,151,],[96,-49,-53,-54,-55,-56,-57,-58,-59,-54,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-47,-48,-50,-51,-52,-60,96,96,151,157,]),'MINUS':([61,63,64,65,66,67,68,69,70,72,75,81,84,85,98,102,109,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,145,152,],[97,-49,-53,-54,-55,-56,-57,-58,-59,-54,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-47,-48,-50,-51,-52,-60,97,97,152,158,]),'SEMICOLON':([63,64,65,66,67,68,69,70,73,85,98,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,],[-49,-53,-54,-55,-56,-57,-58,-59,104,-45,-71,-63,-64,-65,-66,-67,-68,-69,-70,-47,-48,-50,-51,-52,-60,137,]),'TIMES':([63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[99,-53,-54,-55,-56,-57,-58,-59,-54,99,99,-50,-51,-52,-60,]),'DIVIDE':([63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[100,-53,-54,-55,-56,-57,-58,-59,-54,100,100,-50,-51,-52,-60,]),'MOD':([63,64,65,66,67,68,69,70,72,123,124,125,126,127,128,],[101,-53,-54,-55,-56,-57,-58,-59,-54,101,101,-50,-51,-52,-60,]),'IN':([72,],[103,]),'ELSE':([135,],[142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_Import':([0,7,],[2,10,]),'function_definition':([0,2,76,107,],[3,6,106,132,]),'params':([11,133,],[14,139,]),'param':([11,26,133,],[15,30,15,]),'type':([13,24,146,],[17,29,154,]),'more_params':([15,30,],[25,48,]),'block_statement':([27,28,47,153,160,],[31,46,77,159,164,]),'statement':([27,28,33,34,35,36,37,47,87,105,136,148,150,153,160,],[32,32,50,51,52,53,54,32,114,131,143,155,156,32,32,]),'var_statement':([27,28,33,34,35,36,37,47,87,105,136,148,150,153,160,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'var_assignment':([27,28,33,34,35,36,37,47,87,105,136,148,150,153,160,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'func_call':([27,28,33,34,35,36,37,47,87,105,136,148,150,153,160,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'if_statement':([27,28,33,34,35,36,37,47,87,105,136,142,148,150,153,160,],[36,36,36,36,36,36,36,36,36,36,36,147,36,36,36,36,]),'for_statement':([27,28,33,34,35,36,37,47,87,105,136,148,150,153,160,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'return_statement':([27,28,33,34,35,36,37,47,87,105,136,148,150,153,160,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'declaration_imutable':([27,28,33,34,35,36,37,44,47,87,105,136,148,150,153,160,],[39,39,39,39,39,39,39,73,39,39,39,39,39,39,39,39,]),'expression_relacional':([43,44,104,],[60,74,130,]),'expression':([43,44,45,56,57,58,62,71,80,86,88,89,90,91,92,93,94,95,103,104,112,],[61,61,75,81,84,85,98,102,109,113,115,116,117,118,119,120,121,122,129,61,134,]),'term':([43,44,45,56,57,58,62,71,80,86,88,89,90,91,92,93,94,95,96,97,103,104,112,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,123,124,63,63,63,]),'factor':([43,44,45,56,57,58,62,71,80,86,88,89,90,91,92,93,94,95,96,97,99,100,101,103,104,112,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,125,126,127,64,64,64,]),'function_definition_without_main':([49,163,166,],[79,165,167,]),'id_list':([57,],[82,]),'more_expressions':([84,134,],[111,140,]),'elseop':([135,],[141,]),'increment':([137,],[144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_Import function_definition','program',2,'p_program1','ExpressionLanguageParser.py',6),
  ('program -> function_definition','program',1,'p_program2','ExpressionLanguageParser.py',10),
  ('program_Import -> IMPORT ID program_Import','program_Import',3,'p_program_import1','ExpressionLanguageParser.py',14),
  ('program_Import -> IMPORT ID','program_Import',2,'p_program_import2','ExpressionLanguageParser.py',18),
  ('function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition','function_definition',9,'p_function_definition1','ExpressionLanguageParser.py',22),
  ('function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition','function_definition',10,'p_function_definition2','ExpressionLanguageParser.py',26),
  ('function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main','function_definition',8,'p_function_definition3','ExpressionLanguageParser.py',30),
  ('function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main','function_definition_without_main',9,'p_function_definition_without_main1','ExpressionLanguageParser.py',34),
  ('function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main','function_definition_without_main',10,'p_function_definition_without_main2','ExpressionLanguageParser.py',38),
  ('function_definition_without_main -> <empty>','function_definition_without_main',0,'p_none_function','ExpressionLanguageParser.py',42),
  ('params -> param more_params','params',2,'p_params','ExpressionLanguageParser.py',46),
  ('more_params -> COMMA param more_params','more_params',3,'p_more_param','ExpressionLanguageParser.py',51),
  ('more_params -> <empty>','more_params',0,'p_more_param_empty','ExpressionLanguageParser.py',56),
  ('param -> ID type','param',2,'p_param','ExpressionLanguageParser.py',61),
  ('type -> INT','type',1,'p_type1','ExpressionLanguageParser.py',65),
  ('type -> F32','type',1,'p_type2','ExpressionLanguageParser.py',69),
  ('type -> F64','type',1,'p_type3','ExpressionLanguageParser.py',73),
  ('type -> STRING','type',1,'p_type4','ExpressionLanguageParser.py',77),
  ('type -> BOOL','type',1,'p_type5','ExpressionLanguageParser.py',81),
  ('type -> RUNE','type',1,'p_type6','ExpressionLanguageParser.py',85),
  ('block_statement -> statement','block_statement',1,'p_block_statement','ExpressionLanguageParser.py',89),
  ('statement -> var_statement statement','statement',2,'p_statement','ExpressionLanguageParser.py',93),
  ('statement -> var_assignment statement','statement',2,'p_statement2','ExpressionLanguageParser.py',97),
  ('statement -> func_call statement','statement',2,'p_statement3','ExpressionLanguageParser.py',101),
  ('statement -> if_statement statement','statement',2,'p_statement4','ExpressionLanguageParser.py',105),
  ('statement -> for_statement statement','statement',2,'p_statement5','ExpressionLanguageParser.py',109),
  ('statement -> return_statement','statement',1,'p_statement6','ExpressionLanguageParser.py',113),
  ('statement -> <empty>','statement',0,'p_statement7','ExpressionLanguageParser.py',117),
  ('var_statement -> declaration_imutable','var_statement',1,'p_var_declaration','ExpressionLanguageParser.py',121),
  ('var_statement -> MUT ID DECLARE_ASSIGN expression','var_statement',4,'p_var_declaration2','ExpressionLanguageParser.py',125),
  ('var_statement -> CONST ID DECLARE_ASSIGN expression','var_statement',4,'p_var_declaration3','ExpressionLanguageParser.py',129),
  ('var_assignment -> ID ASSIGN expression','var_assignment',3,'p_var_assignment','ExpressionLanguageParser.py',133),
  ('func_call -> ID LPAREN id_list RPAREN','func_call',4,'p_func_call','ExpressionLanguageParser.py',137),
  ('func_call -> ID LPAREN RPAREN','func_call',3,'p_func_call_empty','ExpressionLanguageParser.py',141),
  ('id_list -> expression more_expressions','id_list',2,'p_id_list','ExpressionLanguageParser.py',145),
  ('more_expressions -> COMMA expression more_expressions','more_expressions',3,'p_more_expression','ExpressionLanguageParser.py',149),
  ('more_expressions -> <empty>','more_expressions',0,'p_more_expression_empty','ExpressionLanguageParser.py',154),
  ('if_statement -> IF expression_relacional LBRACE statement RBRACE','if_statement',5,'p_if_statement','ExpressionLanguageParser.py',158),
  ('if_statement -> IF expression_relacional LBRACE statement RBRACE elseop','if_statement',6,'p_if_statement_else','ExpressionLanguageParser.py',162),
  ('elseop -> ELSE if_statement','elseop',2,'p_else','ExpressionLanguageParser.py',166),
  ('elseop -> ELSE LBRACE statement RBRACE','elseop',4,'p_else2','ExpressionLanguageParser.py',170),
  ('for_statement -> FOR ID IN expression LBRACE statement RBRACE','for_statement',7,'p_for_each_statement','ExpressionLanguageParser.py',174),
  ('for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment LBRACE statement RBRACE','for_statement',9,'p_for_statement','ExpressionLanguageParser.py',178),
  ('for_statement -> FOR expression_relacional LBRACE statement RBRACE','for_statement',5,'p_for_statement2','ExpressionLanguageParser.py',182),
  ('declaration_imutable -> ID DECLARE_ASSIGN expression','declaration_imutable',3,'p_declaration_imutable','ExpressionLanguageParser.py',186),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','ExpressionLanguageParser.py',191),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','ExpressionLanguageParser.py',195),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','ExpressionLanguageParser.py',199),
  ('expression -> term','expression',1,'p_expression_term','ExpressionLanguageParser.py',203),
  ('term -> term TIMES factor','term',3,'p_term_mult','ExpressionLanguageParser.py',207),
  ('term -> term DIVIDE factor','term',3,'p_term_divide','ExpressionLanguageParser.py',211),
  ('term -> term MOD factor','term',3,'p_term_mod','ExpressionLanguageParser.py',215),
  ('term -> factor','term',1,'p_term_factor','ExpressionLanguageParser.py',219),
  ('factor -> ID','factor',1,'p_factor_id','ExpressionLanguageParser.py',223),
  ('factor -> NUMBER','factor',1,'p_factor_number','ExpressionLanguageParser.py',227),
  ('factor -> STRING','factor',1,'p_factor_string','ExpressionLanguageParser.py',231),
  ('factor -> TRUE','factor',1,'p_factor_true','ExpressionLanguageParser.py',235),
  ('factor -> FALSE','factor',1,'p_factor_false','ExpressionLanguageParser.py',239),
  ('factor -> RUNE','factor',1,'p_factor_rune','ExpressionLanguageParser.py',243),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expression','ExpressionLanguageParser.py',247),
  ('increment -> ID PLUS PLUS','increment',3,'p_increment_plus','ExpressionLanguageParser.py',251),
  ('increment -> ID MINUS MINUS','increment',3,'p_increment_minus','ExpressionLanguageParser.py',255),
  ('expression_relacional -> expression EQ expression','expression_relacional',3,'p_expression_relacional_equals','ExpressionLanguageParser.py',259),
  ('expression_relacional -> expression NEQ expression','expression_relacional',3,'p_expression_relacional_not_equals','ExpressionLanguageParser.py',263),
  ('expression_relacional -> expression LT expression','expression_relacional',3,'p_expression_relacional_less_than','ExpressionLanguageParser.py',267),
  ('expression_relacional -> expression LE expression','expression_relacional',3,'p_expression_relacional_less_than_or_equal','ExpressionLanguageParser.py',271),
  ('expression_relacional -> expression GT expression','expression_relacional',3,'p_expression_relacional_greater_than','ExpressionLanguageParser.py',275),
  ('expression_relacional -> expression GE expression','expression_relacional',3,'p_expression_relacional_greater_than_or_equal','ExpressionLanguageParser.py',279),
  ('expression_relacional -> expression AND expression','expression_relacional',3,'p_expression_relacional_and','ExpressionLanguageParser.py',283),
  ('expression_relacional -> expression OR expression','expression_relacional',3,'p_expression_relacional_or','ExpressionLanguageParser.py',287),
  ('expression_relacional -> NOT expression','expression_relacional',2,'p_expression_relacional_not','ExpressionLanguageParser.py',291),
]
