
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ASSIGN BINARY BIT_AND_ASSIGN BIT_LSHIFT_ASSIGN BIT_OR_ASSIGN BIT_RSHIFT_ASSIGN BIT_XOR_ASSIGN BOOL BREAK COMMA CONST DECLARE_ASSIGN DECREMENT DIVIDE DIVIDE_ASSIGN DOTDOT ELSE EQ F32 F64 FALSE FN FOR GE GT HEX ID IF IMPORT IN INCREMENT INT INTERPOLATIONSTRING LBRACE LBRACKET LE LPAREN LT MAIN MINUS MINUS_ASSIGN MOD MOD_ASSIGN MUT NEQ NOT NOTACAOCIENTIFICA NUMBER NUMBERFLOAT OCTAL OR PLUS PLUS_ASSIGN RBRACE RBRACKET RETURN RPAREN RUNE RUNEVALOR SEMICOLON SIZEOF STRING TIMES TIMES_ASSIGN TRUE WORDprogram : program_Import program_itemsprogram : program_itemsprogram_Import : IMPORT ID program_Importprogram_Import : IMPORT IDprogram_items : program_item program_itemsprogram_items :program_item : const_declarationprogram_item : function_definitionconst_declaration : CONST ID DECLARE_ASSIGN expressionfunction_definition : FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition : FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition : FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_mainfunction_definition_without_main : FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_mainfunction_definition_without_main : FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_mainfunction_definition_without_main : params : param more_paramsmore_params : COMMA param more_paramsmore_params :param : ID typetype : INTtype : F32type : F64type : STRINGtype : BOOLtype : RUNEblock_statement :  statement statement :  var_statement statementstatement :  var_assignment statementstatement :  func_call statementstatement :  if_statement statementstatement :  for_statement statementstatement : break_statementstatement :  return_statementstatement : statement : list_statement statementstatement :  list_assignment statementstatement :  increment_rule statementstatement : assignment statementvar_statement :  declaration_imutablevar_statement :  MUT ID DECLARE_ASSIGN expressionvar_statement :  CONST ID DECLARE_ASSIGN expression var_assignment :  ID ASSIGN expressionlist_statement : declaration_imutable_listlist_statement : MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKETlist_statement : MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET typelist_assignment : ID LBRACKET NUMBER RBRACKET ASSIGN expressionfunc_call : ID LPAREN id_list RPARENfunc_call : ID LPAREN RPARENfunc_call : func_call_listfunc_call_list : ID LBRACKET DOTDOT RBRACKETfunc_call_list : ID LBRACKET NUMBER DOTDOT NUMBER RBRACKETid_list : expression more_expressionsmore_expressions : COMMA expression more_expressionsmore_expressions :if_statement : IF expression_relacional LBRACE statement RBRACEif_statement : IF expression_relacional LBRACE statement RBRACE elseopelseop : ELSE if_statementelseop : ELSE LBRACE statement RBRACEfor_statement : FOR ID IN expression LBRACE statement RBRACEfor_statement : FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACEfor_statement : FOR expression_relacional LBRACE statement RBRACEdeclaration_imutable : ID DECLARE_ASSIGN expressiondeclaration_imutable_list : ID DECLARE_ASSIGN LBRACKET id_list RBRACKETbreak_statement : BREAKreturn_statement : RETURN expressionexpression : expression PLUS termexpression : expression MINUS termexpression :  increment_ruleexpression : func_callexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MOD factorterm : factorfactor : IDfactor : NUMBERfactor : NUMBERFLOATfactor : WORDfactor : TRUEfactor : FALSEfactor : RUNEVALORfactor : LPAREN expression RPARENfactor : ID LBRACKET NUMBER RBRACKETfactor : NOTACAOCIENTIFICAfactor : BINARYfactor : OCTALfactor : HEXfactor : INTERPOLATIONSTRINGfactor : size_of_expressionsize_of_expression : SIZEOF LPAREN expression RPARENsize_of_expression : SIZEOF LPAREN type RPARENincrement_rule : ID INCREMENTincrement_rule : ID DECREMENTexpression_relacional : expression EQ expressionexpression_relacional : expression NEQ expressionexpression_relacional : expression LT expressionexpression_relacional : expression LE expressionexpression_relacional : expression GT expressionexpression_relacional : expression GE expressionexpression_relacional : expression AND expressionexpression_relacional : expression OR expressionexpression_relacional : NOT expressionassignment : ID PLUS_ASSIGN expressionassignment : ID MINUS_ASSIGN expressionassignment : ID TIMES_ASSIGN expressionassignment : ID DIVIDE_ASSIGN expressionassignment : ID MOD_ASSIGN expressionassignment : ID BIT_AND_ASSIGN expressionassignment : ID BIT_OR_ASSIGN expressionassignment : ID BIT_XOR_ASSIGN expressionassignment : ID BIT_LSHIFT_ASSIGN expressionassignment : ID BIT_RSHIFT_ASSIGN expression'
    
_lr_action_items = {'IMPORT':([0,11,],[4,4,]),'$end':([0,1,2,3,5,6,7,10,11,12,16,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,118,153,156,188,189,238,240,241,242,],[-6,0,-6,-2,-6,-7,-8,-1,-4,-5,-3,-75,-9,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,-15,-10,-12,-51,-11,-15,-13,-15,-14,]),'CONST':([0,2,5,6,7,11,16,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,66,68,72,73,74,75,76,77,78,81,86,87,88,89,90,93,94,95,96,97,105,106,109,111,113,114,116,118,153,156,158,160,161,162,163,164,165,166,167,168,169,170,173,186,188,189,191,195,211,212,213,215,217,218,219,225,226,227,228,229,230,235,236,237,238,240,241,242,],[8,8,8,-7,-8,-4,-3,-75,-9,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-20,-21,-22,-23,-24,-25,100,-48,-66,-75,-67,-71,-72,-73,-82,100,100,100,100,100,100,100,100,100,100,-39,-43,-47,-50,-83,-90,-91,100,-15,-10,-12,-42,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-62,100,100,-51,-11,-40,-41,-63,-55,100,-61,-44,-46,-56,-45,-57,100,-59,100,100,100,-58,-60,-15,-13,-15,-14,]),'FN':([0,2,5,6,7,11,16,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,118,153,156,188,189,238,240,241,242,],[9,9,9,-7,-8,-4,-3,-75,-9,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,155,-10,-12,-51,-11,155,-13,155,-14,]),'ID':([4,8,9,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,47,49,50,51,52,53,55,57,58,59,60,61,62,65,66,68,72,73,74,75,76,77,78,81,86,87,88,89,90,93,94,95,96,97,98,100,101,102,104,105,106,108,109,111,113,114,116,129,131,132,133,134,135,136,137,138,139,140,141,145,155,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,188,191,192,195,208,210,211,212,213,214,215,217,218,219,225,226,227,228,229,230,235,236,237,],[11,13,14,20,41,-75,-70,-68,-69,20,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,20,73,73,73,73,73,20,-20,-21,-22,-23,-24,-25,41,99,-48,-66,-75,-67,-71,-72,-73,-82,99,99,99,99,99,99,99,99,99,99,-39,128,142,20,146,20,-43,-47,20,-50,-83,-90,-91,99,20,20,20,20,20,20,20,20,20,20,20,20,20,190,20,-42,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-62,20,20,99,20,20,20,20,20,20,20,20,20,20,20,99,-51,-40,20,-41,41,20,-63,-55,99,223,-61,-44,-46,-56,-45,-57,99,-59,99,99,99,-58,-60,]),'MAIN':([9,],[15,]),'DECLARE_ASSIGN':([13,99,128,142,146,],[17,141,157,172,184,]),'LPAREN':([14,15,17,20,25,40,47,49,50,51,52,53,55,99,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,146,157,171,172,174,175,176,177,178,179,180,181,183,184,185,190,192,210,],[18,19,25,47,25,55,25,25,25,25,25,25,25,47,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,47,25,25,25,25,25,25,25,25,25,25,25,25,25,25,208,25,25,]),'NUMBER':([17,25,47,48,49,50,51,52,53,55,101,102,104,108,110,112,129,130,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[28,28,28,71,28,28,28,28,28,28,28,28,28,28,151,152,28,159,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'NUMBERFLOAT':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'WORD':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TRUE':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'FALSE':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'RUNEVALOR':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'NOTACAOCIENTIFICA':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'BINARY':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'OCTAL':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'HEX':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'INTERPOLATIONSTRING':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'SIZEOF':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'RPAREN':([19,20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,45,46,47,54,56,57,58,59,60,61,62,64,67,68,69,72,73,74,75,76,77,78,79,80,83,106,107,109,111,113,114,117,150,187,188,216,],[44,-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,63,-18,-92,-93,68,78,-19,-20,-21,-22,-23,-24,-25,-16,106,-48,-54,-66,-75,-67,-71,-72,-73,-82,113,114,-18,-47,-52,-50,-83,-90,-91,-17,-54,-53,-51,224,]),'INCREMENT':([20,99,146,223,],[45,45,45,45,]),'DECREMENT':([20,99,146,223,],[46,46,46,46,]),'LBRACKET':([20,73,99,141,146,157,],[48,112,130,171,48,192,]),'TIMES':([20,22,27,28,29,30,31,32,33,34,35,36,37,38,39,72,73,74,75,76,77,78,111,113,114,146,],[-75,51,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,51,-75,51,-71,-72,-73,-82,-83,-90,-91,-75,]),'DIVIDE':([20,22,27,28,29,30,31,32,33,34,35,36,37,38,39,72,73,74,75,76,77,78,111,113,114,146,],[-75,52,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,52,-75,52,-71,-72,-73,-82,-83,-90,-91,-75,]),'MOD':([20,22,27,28,29,30,31,32,33,34,35,36,37,38,39,72,73,74,75,76,77,78,111,113,114,146,],[-75,53,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,53,-75,53,-71,-72,-73,-82,-83,-90,-91,-75,]),'PLUS':([20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,54,68,69,72,73,74,75,76,77,78,79,106,109,111,113,114,144,146,149,150,158,160,161,162,163,164,165,166,167,168,169,170,182,188,191,195,197,198,199,200,201,202,203,204,205,218,],[-75,49,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,49,-48,49,-66,-75,-67,-71,-72,-73,-82,49,-47,-50,-83,-90,-91,49,-75,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-51,49,49,49,49,49,49,49,49,49,49,49,49,]),'MINUS':([20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,54,68,69,72,73,74,75,76,77,78,79,106,109,111,113,114,144,146,149,150,158,160,161,162,163,164,165,166,167,168,169,170,182,188,191,195,197,198,199,200,201,202,203,204,205,218,],[-75,50,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,50,-48,50,-66,-75,-67,-71,-72,-73,-82,50,-47,-50,-83,-90,-91,50,-75,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-51,50,50,50,50,50,50,50,50,50,50,50,50,]),'COMMA':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,43,45,46,56,57,58,59,60,61,62,68,69,72,73,74,75,76,77,78,83,106,109,111,113,114,150,188,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,65,-92,-93,-19,-20,-21,-22,-23,-24,-25,-48,108,-66,-75,-67,-71,-72,-73,-82,65,-47,-50,-83,-90,-91,108,-51,]),'EQ':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,144,146,188,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,174,-75,-51,]),'NEQ':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,144,146,188,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,175,-75,-51,]),'LT':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,144,146,188,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,176,-75,-51,]),'LE':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,144,146,188,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,177,-75,-51,]),'GT':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,144,146,188,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,178,-75,-51,]),'GE':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,144,146,188,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,179,-75,-51,]),'AND':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,144,146,188,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,180,-75,-51,]),'OR':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,144,146,188,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,181,-75,-51,]),'RBRACE':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,66,68,72,73,74,75,76,77,78,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,105,106,109,111,113,114,115,116,119,120,121,122,123,124,125,126,127,149,154,158,160,161,162,163,164,165,166,167,168,169,170,173,186,188,191,195,196,207,211,212,213,215,217,218,219,221,225,226,227,228,229,230,232,233,234,235,236,237,239,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-20,-21,-22,-23,-24,-25,-34,-48,-66,-75,-67,-71,-72,-73,-82,-34,118,-26,-34,-34,-34,-34,-34,-32,-33,-34,-34,-34,-34,-39,-64,-43,-47,-50,-83,-90,-91,153,-34,-27,-28,-29,-30,-31,-35,-36,-37,-38,-65,189,-42,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-62,-34,-34,-51,-40,-41,212,215,-63,-55,-34,-61,-44,-46,-56,228,-45,-57,-34,-59,-34,-34,236,237,238,-34,-58,-60,241,]),'RBRACKET':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,69,70,71,72,73,74,75,76,77,78,106,107,109,111,113,114,150,151,152,159,187,188,194,209,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-54,109,111,-66,-75,-67,-71,-72,-73,-82,-47,-52,-50,-83,-90,-91,-54,188,111,193,-53,-51,211,217,]),'MUT':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,66,68,72,73,74,75,76,77,78,81,86,87,88,89,90,93,94,95,96,97,105,106,109,111,113,114,116,158,160,161,162,163,164,165,166,167,168,169,170,173,186,188,191,195,211,212,213,215,217,218,219,225,226,227,228,229,230,235,236,237,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-20,-21,-22,-23,-24,-25,98,-48,-66,-75,-67,-71,-72,-73,-82,98,98,98,98,98,98,98,98,98,98,-39,-43,-47,-50,-83,-90,-91,98,-42,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-62,98,98,-51,-40,-41,-63,-55,98,-61,-44,-46,-56,-45,-57,98,-59,98,98,98,-58,-60,]),'IF':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,66,68,72,73,74,75,76,77,78,81,86,87,88,89,90,93,94,95,96,97,105,106,109,111,113,114,116,158,160,161,162,163,164,165,166,167,168,169,170,173,186,188,191,195,211,212,213,215,217,218,219,220,225,226,227,228,229,230,235,236,237,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-20,-21,-22,-23,-24,-25,101,-48,-66,-75,-67,-71,-72,-73,-82,101,101,101,101,101,101,101,101,101,101,-39,-43,-47,-50,-83,-90,-91,101,-42,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-62,101,101,-51,-40,-41,-63,-55,101,-61,-44,-46,-56,101,-45,-57,101,-59,101,101,101,-58,-60,]),'FOR':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,66,68,72,73,74,75,76,77,78,81,86,87,88,89,90,93,94,95,96,97,105,106,109,111,113,114,116,158,160,161,162,163,164,165,166,167,168,169,170,173,186,188,191,195,211,212,213,215,217,218,219,225,226,227,228,229,230,235,236,237,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-20,-21,-22,-23,-24,-25,102,-48,-66,-75,-67,-71,-72,-73,-82,102,102,102,102,102,102,102,102,102,102,-39,-43,-47,-50,-83,-90,-91,102,-42,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-62,102,102,-51,-40,-41,-63,-55,102,-61,-44,-46,-56,-45,-57,102,-59,102,102,102,-58,-60,]),'BREAK':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,66,68,72,73,74,75,76,77,78,81,86,87,88,89,90,93,94,95,96,97,105,106,109,111,113,114,116,158,160,161,162,163,164,165,166,167,168,169,170,173,186,188,191,195,211,212,213,215,217,218,219,225,226,227,228,229,230,235,236,237,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-20,-21,-22,-23,-24,-25,103,-48,-66,-75,-67,-71,-72,-73,-82,103,103,103,103,103,103,103,103,103,103,-39,-43,-47,-50,-83,-90,-91,103,-42,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-62,103,103,-51,-40,-41,-63,-55,103,-61,-44,-46,-56,-45,-57,103,-59,103,103,103,-58,-60,]),'RETURN':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,57,58,59,60,61,62,66,68,72,73,74,75,76,77,78,81,86,87,88,89,90,93,94,95,96,97,105,106,109,111,113,114,116,158,160,161,162,163,164,165,166,167,168,169,170,173,186,188,191,195,211,212,213,215,217,218,219,225,226,227,228,229,230,235,236,237,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-20,-21,-22,-23,-24,-25,104,-48,-66,-75,-67,-71,-72,-73,-82,104,104,104,104,104,104,104,104,104,104,-39,-43,-47,-50,-83,-90,-91,104,-42,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-62,104,104,-51,-40,-41,-63,-55,104,-61,-44,-46,-56,-45,-57,104,-59,104,104,104,-58,-60,]),'LBRACE':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,57,58,59,60,61,62,63,68,72,73,74,75,76,77,78,82,106,109,111,113,114,143,148,182,188,197,198,199,200,201,202,203,204,205,220,222,224,231,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,66,-92,-93,-20,-21,-22,-23,-24,-25,81,-48,-66,-75,-67,-71,-72,-73,-82,116,-47,-50,-83,-90,-91,173,186,-102,-51,-94,-95,-96,-97,-98,-99,-100,-101,213,227,229,230,235,]),'SEMICOLON':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,68,72,73,74,75,76,77,78,106,109,111,113,114,147,170,182,188,197,198,199,200,201,202,203,204,206,],[-75,-70,-68,-69,-49,-74,-76,-77,-78,-79,-80,-81,-84,-85,-86,-87,-88,-89,-92,-93,-48,-66,-75,-67,-71,-72,-73,-82,-47,-50,-83,-90,-91,185,-62,-102,-51,-94,-95,-96,-97,-98,-99,-100,-101,214,]),'INT':([41,55,63,217,224,],[57,57,57,57,57,]),'F32':([41,55,63,217,224,],[58,58,58,58,58,]),'F64':([41,55,63,217,224,],[59,59,59,59,59,]),'STRING':([41,55,63,217,224,],[60,60,60,60,60,]),'BOOL':([41,55,63,217,224,],[61,61,61,61,61,]),'RUNE':([41,55,63,217,224,],[62,62,62,62,62,]),'DOTDOT':([48,71,130,159,],[70,110,70,110,]),'ASSIGN':([99,193,],[129,210,]),'PLUS_ASSIGN':([99,],[131,]),'MINUS_ASSIGN':([99,],[132,]),'TIMES_ASSIGN':([99,],[133,]),'DIVIDE_ASSIGN':([99,],[134,]),'MOD_ASSIGN':([99,],[135,]),'BIT_AND_ASSIGN':([99,],[136,]),'BIT_OR_ASSIGN':([99,],[137,]),'BIT_XOR_ASSIGN':([99,],[138,]),'BIT_LSHIFT_ASSIGN':([99,],[139,]),'BIT_RSHIFT_ASSIGN':([99,],[140,]),'NOT':([101,102,185,],[145,145,145,]),'IN':([146,],[183,]),'ELSE':([212,],[220,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_Import':([0,11,],[2,16,]),'program_items':([0,2,5,],[3,10,12,]),'program_item':([0,2,5,],[5,5,5,]),'const_declaration':([0,2,5,],[6,6,6,]),'function_definition':([0,2,5,],[7,7,7,]),'expression':([17,25,47,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[21,54,69,79,144,144,149,150,158,160,161,162,163,164,165,166,167,168,169,170,182,191,69,195,197,198,199,200,201,202,203,204,205,170,144,69,218,]),'term':([17,25,47,49,50,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[22,22,22,72,74,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'increment_rule':([17,25,47,55,66,81,86,87,88,89,90,93,94,95,96,101,102,104,108,116,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,192,210,213,214,227,229,230,235,],[23,23,23,23,95,95,95,95,95,95,95,95,95,95,95,23,23,23,23,95,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,95,23,23,23,23,23,23,23,23,23,23,23,95,23,23,95,222,95,95,95,95,]),'func_call':([17,25,47,55,66,81,86,87,88,89,90,93,94,95,96,101,102,104,108,116,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,192,210,213,227,229,230,235,],[24,24,24,24,88,88,88,88,88,88,88,88,88,88,88,24,24,24,24,88,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,88,24,24,24,24,24,24,24,24,24,24,24,88,24,24,88,88,88,88,88,]),'func_call_list':([17,25,47,55,66,81,86,87,88,89,90,93,94,95,96,101,102,104,108,116,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,192,210,213,227,229,230,235,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'factor':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[27,27,27,27,27,75,76,77,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'size_of_expression':([17,25,47,49,50,51,52,53,55,101,102,104,108,129,131,132,133,134,135,136,137,138,139,140,141,145,157,171,172,174,175,176,177,178,179,180,181,183,184,185,192,210,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'params':([18,208,],[42,216,]),'param':([18,65,208,],[43,83,43,]),'type':([41,55,63,217,224,],[56,80,82,225,231,]),'more_params':([43,83,],[64,117,]),'id_list':([47,171,192,],[67,194,209,]),'block_statement':([66,81,116,230,235,],[84,115,154,234,239,]),'statement':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,227,229,230,235,],[85,85,119,120,121,122,123,124,125,126,127,85,196,207,221,232,233,85,85,]),'var_statement':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,227,229,230,235,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'var_assignment':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,227,229,230,235,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'if_statement':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,220,227,229,230,235,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,226,89,89,89,89,]),'for_statement':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,227,229,230,235,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'break_statement':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,227,229,230,235,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'return_statement':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,227,229,230,235,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'list_statement':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,227,229,230,235,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'list_assignment':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,227,229,230,235,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'assignment':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,227,229,230,235,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'declaration_imutable':([66,81,86,87,88,89,90,93,94,95,96,102,116,173,186,213,227,229,230,235,],[97,97,97,97,97,97,97,97,97,97,97,147,97,97,97,97,97,97,97,97,]),'declaration_imutable_list':([66,81,86,87,88,89,90,93,94,95,96,116,173,186,213,227,229,230,235,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'more_expressions':([69,150,],[107,187,]),'expression_relacional':([101,102,185,],[143,148,206,]),'function_definition_without_main':([118,238,241,],[156,240,242,]),'elseop':([212,],[219,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_Import program_items','program',2,'p_program1','ExpressionLanguageParser.py',6),
  ('program -> program_items','program',1,'p_program2','ExpressionLanguageParser.py',10),
  ('program_Import -> IMPORT ID program_Import','program_Import',3,'p_program_import1','ExpressionLanguageParser.py',14),
  ('program_Import -> IMPORT ID','program_Import',2,'p_program_import2','ExpressionLanguageParser.py',18),
  ('program_items -> program_item program_items','program_items',2,'p_program_items_multiple','ExpressionLanguageParser.py',22),
  ('program_items -> <empty>','program_items',0,'p_program_items_empty','ExpressionLanguageParser.py',26),
  ('program_item -> const_declaration','program_item',1,'p_program_item_const','ExpressionLanguageParser.py',30),
  ('program_item -> function_definition','program_item',1,'p_program_item_function','ExpressionLanguageParser.py',34),
  ('const_declaration -> CONST ID DECLARE_ASSIGN expression','const_declaration',4,'p_program_const_declaration_rule','ExpressionLanguageParser.py',38),
  ('function_definition -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE','function_definition',8,'p_function_definition1','ExpressionLanguageParser.py',42),
  ('function_definition -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE','function_definition',9,'p_function_definition2','ExpressionLanguageParser.py',46),
  ('function_definition -> FN MAIN LPAREN RPAREN LBRACE block_statement RBRACE function_definition_without_main','function_definition',8,'p_function_definition3','ExpressionLanguageParser.py',50),
  ('function_definition_without_main -> FN ID LPAREN params RPAREN LBRACE block_statement RBRACE function_definition_without_main','function_definition_without_main',9,'p_function_definition_without_main1','ExpressionLanguageParser.py',54),
  ('function_definition_without_main -> FN ID LPAREN params RPAREN type LBRACE block_statement RBRACE function_definition_without_main','function_definition_without_main',10,'p_function_definition_without_main2','ExpressionLanguageParser.py',58),
  ('function_definition_without_main -> <empty>','function_definition_without_main',0,'p_none_function','ExpressionLanguageParser.py',62),
  ('params -> param more_params','params',2,'p_params','ExpressionLanguageParser.py',66),
  ('more_params -> COMMA param more_params','more_params',3,'p_more_param','ExpressionLanguageParser.py',71),
  ('more_params -> <empty>','more_params',0,'p_more_param_empty','ExpressionLanguageParser.py',76),
  ('param -> ID type','param',2,'p_param','ExpressionLanguageParser.py',81),
  ('type -> INT','type',1,'p_type1','ExpressionLanguageParser.py',85),
  ('type -> F32','type',1,'p_type2','ExpressionLanguageParser.py',89),
  ('type -> F64','type',1,'p_type3','ExpressionLanguageParser.py',93),
  ('type -> STRING','type',1,'p_type4','ExpressionLanguageParser.py',97),
  ('type -> BOOL','type',1,'p_type5','ExpressionLanguageParser.py',101),
  ('type -> RUNE','type',1,'p_type6','ExpressionLanguageParser.py',105),
  ('block_statement -> statement','block_statement',1,'p_block_statement','ExpressionLanguageParser.py',109),
  ('statement -> var_statement statement','statement',2,'p_statement','ExpressionLanguageParser.py',113),
  ('statement -> var_assignment statement','statement',2,'p_statement2','ExpressionLanguageParser.py',117),
  ('statement -> func_call statement','statement',2,'p_statement3','ExpressionLanguageParser.py',121),
  ('statement -> if_statement statement','statement',2,'p_statement4','ExpressionLanguageParser.py',125),
  ('statement -> for_statement statement','statement',2,'p_statement5','ExpressionLanguageParser.py',129),
  ('statement -> break_statement','statement',1,'p_break_statement_rule','ExpressionLanguageParser.py',133),
  ('statement -> return_statement','statement',1,'p_statement6','ExpressionLanguageParser.py',137),
  ('statement -> <empty>','statement',0,'p_statement7','ExpressionLanguageParser.py',141),
  ('statement -> list_statement statement','statement',2,'p_statement8','ExpressionLanguageParser.py',145),
  ('statement -> list_assignment statement','statement',2,'p_statement9','ExpressionLanguageParser.py',149),
  ('statement -> increment_rule statement','statement',2,'p_statement10','ExpressionLanguageParser.py',153),
  ('statement -> assignment statement','statement',2,'p_statement_assignment','ExpressionLanguageParser.py',157),
  ('var_statement -> declaration_imutable','var_statement',1,'p_var_declaration','ExpressionLanguageParser.py',161),
  ('var_statement -> MUT ID DECLARE_ASSIGN expression','var_statement',4,'p_var_declaration2','ExpressionLanguageParser.py',165),
  ('var_statement -> CONST ID DECLARE_ASSIGN expression','var_statement',4,'p_var_declaration3','ExpressionLanguageParser.py',169),
  ('var_assignment -> ID ASSIGN expression','var_assignment',3,'p_var_assignment','ExpressionLanguageParser.py',173),
  ('list_statement -> declaration_imutable_list','list_statement',1,'p_list_declaration_imutable','ExpressionLanguageParser.py',177),
  ('list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET','list_statement',6,'p_list_declaration_mutable','ExpressionLanguageParser.py',181),
  ('list_statement -> MUT ID DECLARE_ASSIGN LBRACKET id_list RBRACKET type','list_statement',7,'p_list_declaration_mutable_list_lenght_definition','ExpressionLanguageParser.py',185),
  ('list_assignment -> ID LBRACKET NUMBER RBRACKET ASSIGN expression','list_assignment',6,'p_list_assignment','ExpressionLanguageParser.py',189),
  ('func_call -> ID LPAREN id_list RPAREN','func_call',4,'p_func_call','ExpressionLanguageParser.py',193),
  ('func_call -> ID LPAREN RPAREN','func_call',3,'p_func_call_empty','ExpressionLanguageParser.py',197),
  ('func_call -> func_call_list','func_call',1,'p_func_call_list','ExpressionLanguageParser.py',201),
  ('func_call_list -> ID LBRACKET DOTDOT RBRACKET','func_call_list',4,'p_func_call_list_all','ExpressionLanguageParser.py',205),
  ('func_call_list -> ID LBRACKET NUMBER DOTDOT NUMBER RBRACKET','func_call_list',6,'p_func_call_list_range','ExpressionLanguageParser.py',210),
  ('id_list -> expression more_expressions','id_list',2,'p_id_list','ExpressionLanguageParser.py',218),
  ('more_expressions -> COMMA expression more_expressions','more_expressions',3,'p_more_expression','ExpressionLanguageParser.py',222),
  ('more_expressions -> <empty>','more_expressions',0,'p_more_expression_empty','ExpressionLanguageParser.py',227),
  ('if_statement -> IF expression_relacional LBRACE statement RBRACE','if_statement',5,'p_if_statement','ExpressionLanguageParser.py',231),
  ('if_statement -> IF expression_relacional LBRACE statement RBRACE elseop','if_statement',6,'p_if_statement_else','ExpressionLanguageParser.py',235),
  ('elseop -> ELSE if_statement','elseop',2,'p_else','ExpressionLanguageParser.py',239),
  ('elseop -> ELSE LBRACE statement RBRACE','elseop',4,'p_else2','ExpressionLanguageParser.py',243),
  ('for_statement -> FOR ID IN expression LBRACE statement RBRACE','for_statement',7,'p_for_each_statement','ExpressionLanguageParser.py',247),
  ('for_statement -> FOR declaration_imutable SEMICOLON expression_relacional SEMICOLON increment_rule LBRACE statement RBRACE','for_statement',9,'p_for_statement','ExpressionLanguageParser.py',251),
  ('for_statement -> FOR expression_relacional LBRACE statement RBRACE','for_statement',5,'p_for_statement2','ExpressionLanguageParser.py',255),
  ('declaration_imutable -> ID DECLARE_ASSIGN expression','declaration_imutable',3,'p_declaration_imutable','ExpressionLanguageParser.py',259),
  ('declaration_imutable_list -> ID DECLARE_ASSIGN LBRACKET id_list RBRACKET','declaration_imutable_list',5,'p_declaration_imutable_list','ExpressionLanguageParser.py',263),
  ('break_statement -> BREAK','break_statement',1,'p_break_only','ExpressionLanguageParser.py',267),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','ExpressionLanguageParser.py',271),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','ExpressionLanguageParser.py',275),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','ExpressionLanguageParser.py',279),
  ('expression -> increment_rule','expression',1,'p_expression_increment','ExpressionLanguageParser.py',283),
  ('expression -> func_call','expression',1,'p_expression_func_call','ExpressionLanguageParser.py',287),
  ('expression -> term','expression',1,'p_expression_term','ExpressionLanguageParser.py',291),
  ('term -> term TIMES factor','term',3,'p_term_mult','ExpressionLanguageParser.py',295),
  ('term -> term DIVIDE factor','term',3,'p_term_divide','ExpressionLanguageParser.py',299),
  ('term -> term MOD factor','term',3,'p_term_mod','ExpressionLanguageParser.py',303),
  ('term -> factor','term',1,'p_term_factor','ExpressionLanguageParser.py',307),
  ('factor -> ID','factor',1,'p_factor_id','ExpressionLanguageParser.py',311),
  ('factor -> NUMBER','factor',1,'p_factor_number','ExpressionLanguageParser.py',315),
  ('factor -> NUMBERFLOAT','factor',1,'p_factor_number_float','ExpressionLanguageParser.py',319),
  ('factor -> WORD','factor',1,'p_factor_string','ExpressionLanguageParser.py',323),
  ('factor -> TRUE','factor',1,'p_factor_true','ExpressionLanguageParser.py',327),
  ('factor -> FALSE','factor',1,'p_factor_false','ExpressionLanguageParser.py',331),
  ('factor -> RUNEVALOR','factor',1,'p_factor_rune','ExpressionLanguageParser.py',335),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expression','ExpressionLanguageParser.py',339),
  ('factor -> ID LBRACKET NUMBER RBRACKET','factor',4,'p_factor_list','ExpressionLanguageParser.py',343),
  ('factor -> NOTACAOCIENTIFICA','factor',1,'p_factor_cientific_notation','ExpressionLanguageParser.py',347),
  ('factor -> BINARY','factor',1,'p_factor_binary','ExpressionLanguageParser.py',351),
  ('factor -> OCTAL','factor',1,'p_factor_octal','ExpressionLanguageParser.py',355),
  ('factor -> HEX','factor',1,'p_factor_hex','ExpressionLanguageParser.py',359),
  ('factor -> INTERPOLATIONSTRING','factor',1,'p_factor_interpolation_string','ExpressionLanguageParser.py',363),
  ('factor -> size_of_expression','factor',1,'p_factor_size_of_expression_rule','ExpressionLanguageParser.py',367),
  ('size_of_expression -> SIZEOF LPAREN expression RPAREN','size_of_expression',4,'p_size_of_expression','ExpressionLanguageParser.py',371),
  ('size_of_expression -> SIZEOF LPAREN type RPAREN','size_of_expression',4,'p_size_of_type','ExpressionLanguageParser.py',375),
  ('increment_rule -> ID INCREMENT','increment_rule',2,'p_increment_plus','ExpressionLanguageParser.py',379),
  ('increment_rule -> ID DECREMENT','increment_rule',2,'p_increment_minus','ExpressionLanguageParser.py',383),
  ('expression_relacional -> expression EQ expression','expression_relacional',3,'p_expression_relacional_equals','ExpressionLanguageParser.py',387),
  ('expression_relacional -> expression NEQ expression','expression_relacional',3,'p_expression_relacional_not_equals','ExpressionLanguageParser.py',391),
  ('expression_relacional -> expression LT expression','expression_relacional',3,'p_expression_relacional_less_than','ExpressionLanguageParser.py',395),
  ('expression_relacional -> expression LE expression','expression_relacional',3,'p_expression_relacional_less_than_or_equal','ExpressionLanguageParser.py',399),
  ('expression_relacional -> expression GT expression','expression_relacional',3,'p_expression_relacional_greater_than','ExpressionLanguageParser.py',403),
  ('expression_relacional -> expression GE expression','expression_relacional',3,'p_expression_relacional_greater_than_or_equal','ExpressionLanguageParser.py',407),
  ('expression_relacional -> expression AND expression','expression_relacional',3,'p_expression_relacional_and','ExpressionLanguageParser.py',411),
  ('expression_relacional -> expression OR expression','expression_relacional',3,'p_expression_relacional_or','ExpressionLanguageParser.py',415),
  ('expression_relacional -> NOT expression','expression_relacional',2,'p_expression_relacional_not','ExpressionLanguageParser.py',419),
  ('assignment -> ID PLUS_ASSIGN expression','assignment',3,'p_assignment_plus_equals','ExpressionLanguageParser.py',423),
  ('assignment -> ID MINUS_ASSIGN expression','assignment',3,'p_assignment_minus_equal','ExpressionLanguageParser.py',427),
  ('assignment -> ID TIMES_ASSIGN expression','assignment',3,'p_assignment_multiply_equals','ExpressionLanguageParser.py',431),
  ('assignment -> ID DIVIDE_ASSIGN expression','assignment',3,'p_assignment_divide_equals','ExpressionLanguageParser.py',435),
  ('assignment -> ID MOD_ASSIGN expression','assignment',3,'p_assignment_mod_equals','ExpressionLanguageParser.py',439),
  ('assignment -> ID BIT_AND_ASSIGN expression','assignment',3,'p_assignment_and_equals','ExpressionLanguageParser.py',443),
  ('assignment -> ID BIT_OR_ASSIGN expression','assignment',3,'p_assignment_or_equals','ExpressionLanguageParser.py',447),
  ('assignment -> ID BIT_XOR_ASSIGN expression','assignment',3,'p_assignment_exp_equals','ExpressionLanguageParser.py',451),
  ('assignment -> ID BIT_LSHIFT_ASSIGN expression','assignment',3,'p_assignment_lshift','ExpressionLanguageParser.py',455),
  ('assignment -> ID BIT_RSHIFT_ASSIGN expression','assignment',3,'p_assignment_rshift','ExpressionLanguageParser.py',459),
]
